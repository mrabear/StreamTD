<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>Game Events</name>
    <events>
        <comment>Project: StreamTD</comment>
        <comment>Author: Brian Hebert</comment>
        <comment>File: Main event sheet</comment>
        <comment></comment>
        <comment>Ideas:</comment>
        <comment>Add hud menu above each selected flow object to let you control it</comment>
        <comment>Have second tier color streams grant some sort of benefit to the minions that are on it (potentially only to those minions that share one of the two primary colors)</comment>
        <comment>Seperate color and stream into two seperate components, the streams are colored by the minions that travel along them, the painters and lenses are colored by the laser beams</comment>
        <comment></comment>
        <variable comment="Anything that needs to be appended to the debug portion of the screen" name="debugMsg" type="text"></variable>
        <include>Initialize</include>
        <include>Level Data</include>
        <comment>Game Object Events</comment>
        <event-group collapsed="1" description="A grid that objects snap to" title="Grid">
            <sub-events>
                <comment>(coord, offset, scale) returns a &apos;grid friendly&apos; coordindate for a given layout coordinate</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnSnapCoordinate</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable name="sourceCoord" type="number">0</variable>
                        <variable name="offset" type="number">0</variable>
                        <variable name="scale" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceCoord</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">offset</param>
                                    <param id="1" name="Value">fn.Param(1)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">scale</param>
                                    <param id="1" name="Value">fn.Param(2)</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">round( floor( (sourceCoord-offset) / scale )) * scale + round( ( scale / 2 ) ) + offset</param>
                                </action>
                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;....(&quot; &amp; sourceCoord &amp; &quot;) snapped to (&quot; &amp; fn.Result &amp; &quot;)&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(coord) returns a grid snapped X coordindate for a given layout coordinate</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnGetGridCoordinate</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable name="sourceX" type="number">0</variable>
                        <variable name="sourceY" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceX</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceY</param>
                                    <param id="1" name="Value">fn.Param(1)</param>
                                </action>
                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;Getting grid coordinates (&quot; &amp; sourceX &amp; &quot;,&quot; &amp; sourceY &amp; &quot;)&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Coordinates are in the inventory grid</comment>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">clamp( sourceX, inventory.X, inventory.X + inventory.Width )</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">sourceX</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">clamp( sourceY, inventory.Y, inventory.Y + inventory.Height )</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">sourceY</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">0</param>
                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, sourceX, inventory.X, inventoryScale )</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">1</param>
                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, sourceY, inventory.Y, inventoryScale )</param>
                                </action>
                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;Snapped inventory coordinates (&quot; &amp; fn.Ret(0) &amp; &quot;,&quot; &amp; fn.Ret(1) &amp; &quot;)&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Coordinates are in the normal grid</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">sourceY</param>
                                    <param id="1" name="Comparison">3</param>
                                    <param id="2" name="Value">grid.Height</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">0</param>
                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, sourceX, 0, gridScale )</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">1</param>
                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, sourceY, 0, gridScale )</param>
                                </action>
                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;Snapped non inventory coordinates (&quot; &amp; fn.Ret(0) &amp; &quot;,&quot; &amp; fn.Ret(1) &amp; &quot;)&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(x,y) returns the UID of the object at the the given location, 0 if there is nothing there</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnGridObjectAt</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-15" name="Pick nearest/furthest" type="Flow">
                                    <param id="0" name="Which">0</param>
                                    <param id="1" name="X">fn.Param(0)</param>
                                    <param id="2" name="Y">fn.Param(1)</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">distance( fn.Param(0), fn.Param(1), flow.X, flow.Y )</param>
                                    <param id="1" name="Comparison">3</param>
                                    <param id="2" name="Second value">5</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">flow.UID</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(x,y) return UID of an active flow object at location, else 0</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnGridActiveObjectAt</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-15" name="Pick nearest/furthest" type="Flow">
                                    <param id="0" name="Which">0</param>
                                    <param id="1" name="X">fn.Param(0)</param>
                                    <param id="2" name="Y">fn.Param(1)</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">distance( fn.Param(0), fn.Param(1), flow.X, flow.Y )</param>
                                    <param id="1" name="Comparison">3</param>
                                    <param id="2" name="Second value">5</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">flow.UID</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(x,y,angle) returns the uid of the closest object in a given flow direction</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnClosestObject</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;    Checking for closest object from (&quot; &amp; fn.Param(0) &amp; &quot;,&quot; &amp; fn.Param(1) &amp; &quot;)&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <variable comment="the distance from the initial point to the current flow object" name="currentDistance" type="number">0</variable>
                        <variable comment="the source X value to check from" name="sourceX" type="number">0</variable>
                        <variable comment="the source Y value to check from" name="sourceY" type="number">0</variable>
                        <variable comment="the source angle to check from" name="sourceAngle" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceX</param>
                                    <param id="1" name="Value">fn.Param( 0 )</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceY</param>
                                    <param id="1" name="Value">fn.Param( 1 )</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceAngle</param>
                                    <param id="1" name="Value">fn.Param( 2 )</param>
                                </action>
                                <action id="-3" name="Set position" type="overlapTester">
                                    <param id="0" name="X">sourceX</param>
                                    <param id="1" name="Y">sourceY</param>
                                </action>
                                <action id="-8" name="Set angle" type="overlapTester">
                                    <param id="0" name="Angle">sourceAngle</param>
                                </action>
                                <action id="-5" name="Set width" type="overlapTester">
                                    <param id="0" name="Width">max( WindowHeight, WindowWidth )</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">0</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">1</param>
                                    <param id="1" name="Value">overlapTester.Width</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">2</param>
                                    <param id="1" name="Value">overlapTester.angle</param>
                                </action>
                                <action id="-17" name="Move forward" type="overlapTester">
                                    <param id="0" name="Distance">round( gridScale / 2 )</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Loop through each overlapping object to find the closest one (do not consider the object if it is not active, or if it doesn&apos;t interact with the stream in any way)</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="1" name="Is overlapping another object" type="Flow">
                                    <param id="0" name="Object">overlapTester</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">flow.blockStream | flow.extendStream</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">currentDistance</param>
                                    <param id="1" name="Value">distance( overlapTester.X, overlapTester.Y, flow.X, flow.Y ) + round( gridScale / 2 )</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">currentDistance</param>
                                            <param id="1" name="Comparison">2</param>
                                            <param id="2" name="Second value">fn.Ret( 1 )</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set a return value" type="fn">
                                            <param id="0" name="Index">0</param>
                                            <param id="1" name="Value">flow.UID</param>
                                        </action>
                                        <action id="4" name="Set a return value" type="fn">
                                            <param id="0" name="Index">1</param>
                                            <param id="1" name="Value">currentDistance</param>
                                        </action>
                                        <action id="4" name="Set a return value" type="fn">
                                            <param id="0" name="Index">2</param>
                                            <param id="1" name="Value">flow.angle</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Reset the overlap tester to check for blocking streams (streams that intersect at a 90deg angle)</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-5" name="Set width" type="overlapTester">
                                    <param id="0" name="Width">fn.Ret(1)</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Check to see if there are any perpendicular streams blocking the path</comment>
                        <event-block collapsed="1" disabled="1">
                            <conditions>
                                <condition disabled="1" id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Stream</param>
                                </condition>
                                <condition disabled="1" id="1" name="Is overlapping another object" type="Stream">
                                    <param id="0" name="Object">overlapTester</param>
                                </condition>
                                <condition disabled="1" id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">round( anglediff( stream.Angle, overlapTester.Angle ) )</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">90</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;        Stream &quot; &amp; stream.sourceUID &amp; &quot; found streamAngle(&quot; &amp; stream.Angle &amp; &quot;)-overlapAngle(&quot; &amp; overlapTester.Angle &amp; &quot;)=&quot; &amp; anglediff( stream.Angle, overlapTester.Angle )</param>
                                </action>
                                <action disabled="1" id="-5" name="Set width" type="overlapTester">
                                    <param id="0" name="Width">gridScale</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>If there are valid streams found, move the overlap tester until the closest is found</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-23" name="While" type="System" />
                                        <condition id="-4" inverted="1" name="Is outside layout" type="overlapTester" />
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <variable comment="the grid friendly X coordinate" name="gridX" type="number">0</variable>
                                        <variable comment="the grid friendly Y coordinate" name="gridY" type="number">0</variable>
                                        <event-block>
                                            <conditions>
                                                <condition id="-19" name="Pick all" type="System">
                                                    <param id="0" name="Object">Stream</param>
                                                </condition>
                                                <condition id="1" name="Is overlapping another object" type="Stream">
                                                    <param id="0" name="Object">overlapTester</param>
                                                </condition>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">round( anglediff( stream.Angle, overlapTester.Angle ) )</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Second value">90</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-17" name="Move forward" type="overlapTester">
                                                    <param id="0" name="Distance">2</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">gridX</param>
                                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, overlapTester.X )</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">gridY</param>
                                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, overlapTester.Y )</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">fn.Call( fnGridActiveObjectAt, gridX, gridY )</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="0" name="Log Text" type="debugConsole">
                                                            <param id="0" name="Data">&quot;        No flow found, blocking stream at (&quot; &amp; sourceX &amp; &quot;,&quot; &amp; sourceY &amp; &quot;) &quot; &amp; distance( sourceX, sourceY, gridX, gridY )</param>
                                                        </action>
                                                        <action id="4" name="Set a return value" type="fn">
                                                            <param id="0" name="Index">0</param>
                                                            <param id="1" name="Value">-1</param>
                                                        </action>
                                                        <action id="4" name="Set a return value" type="fn">
                                                            <param id="0" name="Index">1</param>
                                                            <param id="1" name="Value">distance( sourceX, sourceY, gridX, gridY )</param>
                                                        </action>
                                                        <action id="4" name="Set a return value" type="fn">
                                                            <param id="0" name="Index">2</param>
                                                            <param id="1" name="Value">-1</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <event-block>
                                                    <conditions />
                                                    <actions>
                                                        <action id="-24" name="Stop loop" type="System" />
                                                    </actions>
                                                </event-block>
                                                <comment>Debug Calls</comment>
                                                <event-block collapsed="1" disabled="1">
                                                    <conditions />
                                                    <actions />
                                                    <sub-events>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">round( anglediff( stream.Angle, overlapTester.Angle ) )</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Second value">90</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;        angle check passed&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions />
                                                            <actions>
                                                                <action id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;        flow object at intersection: &quot; &amp; fn.Call( fnGridObjectAt, gridX, gridY )</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="1" name="Is overlapping another object" type="Stream">
                                                                    <param id="0" name="Object">overlapTester</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;        overlap test passed&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">fn.ret( 0 )</param>
                                                    <param id="1" name="Comparison">5</param>
                                                    <param id="2" name="Second value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-17" name="Move forward" type="overlapTester">
                                                    <param id="0" name="Distance">gridScale</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Reset the location of the testing sprite</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-3" name="Set position" type="overlapTester">
                                    <param id="0" name="X">-100</param>
                                    <param id="1" name="Y">-100</param>
                                </action>
                                <action id="-5" name="Set width" type="overlapTester">
                                    <param id="0" name="Width">10</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnClosestBlockingObject</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable comment="the distance from the initial point to the current flow object" name="currentDistance" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-3" name="Set position" type="overlapTester">
                                    <param id="0" name="X">fn.Param( 0 )</param>
                                    <param id="1" name="Y">fn.Param( 1 )</param>
                                </action>
                                <action id="-8" name="Set angle" type="overlapTester">
                                    <param id="0" name="Angle">fn.Param( 2 )</param>
                                </action>
                                <action id="-5" name="Set width" type="overlapTester">
                                    <param id="0" name="Width">max( WindowHeight, WindowWidth )</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">0</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">1</param>
                                    <param id="1" name="Value">overlapTester.Width</param>
                                </action>
                                <action id="4" name="Set a return value" type="fn">
                                    <param id="0" name="Index">2</param>
                                    <param id="1" name="Value">overlapTester.angle</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Loop through each overlapping object to find the closest one (do not consider the object if it is not active, or if it doesn&apos;t interact with the stream in any way)</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="1" name="Is overlapping another object" type="Flow">
                                    <param id="0" name="Object">overlapTester</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">blockStream</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">flow.blockStream | flow.extendStream</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">currentDistance</param>
                                    <param id="1" name="Value">distance( overlapTester.X, overlapTester.Y, flow.X, flow.Y )</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">currentDistance</param>
                                            <param id="1" name="Comparison">2</param>
                                            <param id="2" name="Second value">fn.Ret( 1 )</param>
                                        </condition>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">currentDistance</param>
                                            <param id="1" name="Comparison">4</param>
                                            <param id="2" name="Second value">gridScale / 2</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set a return value" type="fn">
                                            <param id="0" name="Index">0</param>
                                            <param id="1" name="Value">flow.UID</param>
                                        </action>
                                        <action id="4" name="Set a return value" type="fn">
                                            <param id="0" name="Index">1</param>
                                            <param id="1" name="Value">currentDistance</param>
                                        </action>
                                        <action id="4" name="Set a return value" type="fn">
                                            <param id="0" name="Index">2</param>
                                            <param id="1" name="Value">flow.angle</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Reset the location of the testing sprite</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-3" name="Set position" type="overlapTester">
                                    <param id="0" name="X">-100</param>
                                    <param id="1" name="Y">-100</param>
                                </action>
                                <action id="-5" name="Set width" type="overlapTester">
                                    <param id="0" name="Width">10</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Process a click on the grid</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="1" name="On any click" type="Mouse" />
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable comment="the new grid x value" name="gridX" type="number">0</variable>
                        <variable comment="the new grid y value" name="gridY" type="number">0</variable>
                        <variable comment="uid of the grid object at the clicked location" name="objectAtLocationUID" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnGetGridCoordinate &amp; &quot;,&quot; &amp; mouse.X &amp; &quot;,&quot; &amp; mouse.Y</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">gridX</param>
                                    <param id="1" name="Value">fn.Ret(0)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">gridY</param>
                                    <param id="1" name="Value">fn.Ret(1)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">objectAtLocationUID</param>
                                    <param id="1" name="Value">fn.Call( fnGridObjectAt, gridX, gridY )</param>
                                </action>
                                <action id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;Left Clicked (&quot; &amp; gridX &amp;  &quot;,&quot; &amp; gridY &amp;  &quot;) objectatlocation=&quot; &amp; objectAtLocationUID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Do not process any grid clicks if the minions are spawning</comment>
                        <event-block>
                            <conditions>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="HUD">
                                    <param id="0" name="Instance variable">isSpawning</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <comment>If there isn&apos;t an object at the clicked location</comment>
                                <event-block collapsed="1">
                                    <conditions>
                                        <condition id="2" name="Mouse button is down" type="Mouse">
                                            <param id="0" name="Mouse button">0</param>
                                        </condition>
                                        <condition id="7" name="Cursor is over object" type="Mouse">
                                            <param id="0" name="Object">grid</param>
                                        </condition>
                                        <condition id="-14" name="Compare variable" type="System">
                                            <param id="0" name="Variable">objectAtLocationUID</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <variable comment="has an object been created?" name="objectCreated" type="number">0</variable>
                                        <event-block>
                                            <conditions>
                                                <condition disabled="1" id="2" name="Mouse button is down" type="Mouse">
                                                    <param id="0" name="Mouse button">0</param>
                                                </condition>
                                            </conditions>
                                            <actions />
                                            <sub-events>
                                                <comment>Add a redirector</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">65 (A)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Redirector&quot;, gridX, gridY, 0, &quot;&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add a generator</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">81 (Q)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Generator&quot;, gridX, gridY, 0, tokenat(minionDefaultTypes, random( 0, tokencount(minionDefaultTypes, &quot;#&quot;)), &quot;#&quot;) )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add a barrier</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">90 (Z)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Barrier&quot;, gridX, gridY, 0, &quot;&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add a laser</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">86 (V)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Laser&quot;, gridX, gridY, 90, &quot;&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add a painter</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">88 (X)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Painter&quot;, gridX, gridY, 0, &quot;blue&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add a lens</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">67 (C)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Lens&quot;, gridX, gridY, 0, &quot;blue&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add a lens</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">69 (E)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Prism&quot;, gridX, gridY, 0, &quot;&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Add an exit</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Key is down" type="Keyboard">
                                                            <param id="0" name="Key">87 (W)</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">objectCreated</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;Exit&quot;, gridX, gridY, 180, &quot;blue&quot; )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>If an object was created, reset the stream and make the new object the current HUD selection</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Compare variable" type="System">
                                                    <param id="0" name="Variable">objectCreated</param>
                                                    <param id="1" name="Comparison">4</param>
                                                    <param id="2" name="Value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="7" name="Execute commands" type="fn">
                                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                                </action>
                                                <action id="7" name="Execute commands" type="fn">
                                                    <param id="0" name="Commands">fnUpdateHUDSelection &amp; &quot;,&quot; &amp; objectCreated</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>If nothing was created, deselect the current selection</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Compare variable" type="System">
                                                    <param id="0" name="Variable">objectCreated</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="7" name="Execute commands" type="fn">
                                                    <param id="0" name="Commands">fnResetHUD</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <comment>If there is a flow object at the current location</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Flow</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Flow">
                                            <param id="0" name="Unique ID">objectAtLocationUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="7" name="Execute commands" type="fn">
                                            <param id="0" name="Commands">fnUpdateHUDSelection &amp; &quot;,&quot; &amp; flow.UID</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <comment>Left click selects the flow object</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="2" name="Mouse button is down" type="Mouse">
                                                    <param id="0" name="Mouse button">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-16" name="Wait" type="System">
                                                    <param id="0" name="Seconds">flowMoveRedrawDelay</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>If the mouse is held down, start moving the object and reset the stream to redraw around the current object in it</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="2" name="Mouse button is down" type="Mouse">
                                                            <param id="0" name="Mouse button">0</param>
                                                        </condition>
                                                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                                            <param id="0" name="Instance variable">isMovable</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-15" name="Set visible" type="moveTarget">
                                                            <param id="0" name="Visibility">1</param>
                                                        </action>
                                                        <action id="-3" name="Set position" type="moveTarget">
                                                            <param id="0" name="X">flow.X</param>
                                                            <param id="1" name="Y">flow.Y</param>
                                                        </action>
                                                        <action id="-15" name="Set visible" type="selectionBox">
                                                            <param id="0" name="Visibility">0</param>
                                                        </action>
                                                        <action id="-26" name="Move to layer" type="Flow">
                                                            <param id="0" name="Layer">inventoryLayer</param>
                                                        </action>
                                                        <action id="-13" name="Set boolean" type="Flow">
                                                            <param id="0" name="Instance variable">isMoving</param>
                                                            <param id="1" name="Value">1</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Flow">
                                                            <param id="0" name="Instance variable">previousActiveState</param>
                                                            <param id="1" name="Value">flow.inInventory?1:flow.isActive</param>
                                                        </action>
                                                        <action id="-13" name="Set boolean" type="Flow">
                                                            <param id="0" name="Instance variable">isActive</param>
                                                            <param id="1" name="Value">0</param>
                                                        </action>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>Right click commands</comment>
                                        <event-block collapsed="1">
                                            <conditions>
                                                <condition id="2" name="Mouse button is down" type="Mouse">
                                                    <param id="0" name="Mouse button">2</param>
                                                </condition>
                                            </conditions>
                                            <actions />
                                            <sub-events>
                                                <comment>Right click rotates a redirector</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="Redirect">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-18" name="Rotate clockwise" type="Redirect">
                                                            <param id="0" name="Degrees">90</param>
                                                        </action>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Right click rotates a generator</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="Generator">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-18" name="Rotate clockwise" type="Generator">
                                                            <param id="0" name="Degrees">90</param>
                                                        </action>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Right click rotates a generator</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="Exit">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-18" name="Rotate clockwise" type="Exit">
                                                            <param id="0" name="Degrees">90</param>
                                                        </action>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Right click rotates a generator</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="Laser">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-18" name="Rotate clockwise" type="Laser">
                                                            <param id="0" name="Degrees">90</param>
                                                        </action>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A stream that flows out from a generator" title="Stream">
            <sub-events>
                <comment>Resets all streams, redraws them on the screen </comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnResetStream</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;Resetting Stream&quot; &amp; newline</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Reset all streams</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Stream</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Stream" />
                            </actions>
                        </event-block>
                        <comment>Reset all stream intersections</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">streamIntersect</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="streamIntersect" />
                            </actions>
                        </event-block>
                        <comment>Reset all streams</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">ExitLabel</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="ExitLabel">
                                    <param id="0" name="Animation">&quot;Disabled&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Reset all streams</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Exit</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="Exit">
                                    <param id="0" name="Instance variable">isUnlocked</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Reset all prisms</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Prism</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" type="Prism">
                                    <param id="0" name="Instance variable">streamOutCount</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Prism">
                                    <param id="0" name="Instance variable">activeStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Prism">
                                    <param id="0" name="Instance variable">slotsLeft</param>
                                    <param id="1" name="Value">prismStreamAngles</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-11" name="For Each" type="System">
                                            <param id="0" name="Object">Prism</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="1" name="Set value by key string" type="PrismStreams">
                                            <param id="0" name="Key string">prism.UID &amp; &quot;red&quot;</param>
                                            <param id="1" name="Value">-1</param>
                                        </action>
                                        <action id="1" name="Set value by key string" type="PrismStreams">
                                            <param id="0" name="Key string">prism.UID &amp; &quot;yellow&quot;</param>
                                            <param id="1" name="Value">-1</param>
                                        </action>
                                        <action id="1" name="Set value by key string" type="PrismStreams">
                                            <param id="0" name="Key string">prism.UID &amp; &quot;blue&quot;</param>
                                            <param id="1" name="Value">-1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Reset all lasers</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">LaserBeam</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="LaserBeam" />
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Laser</param>
                                </condition>
                                <condition id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Laser</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Laser">
                                    <param id="0" name="Instance variable">isActive</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="0" name="Log Text" type="debugConsole">
                                            <param id="0" name="Data">&quot;Drawing new laser&quot;</param>
                                        </action>
                                        <action id="7" name="Execute commands" type="fn">
                                            <param id="0" name="Commands">fnClosestObject &amp; &quot;,&quot; &amp; laser.x &amp; &quot;,&quot; &amp; laser.y &amp; &quot;,&quot; &amp; laser.angle</param>
                                        </action>
                                        <action id="-3" name="Create object" type="System">
                                            <param id="0" name="Object to create">LaserBeam</param>
                                            <param id="1" name="Layer">flowLayer</param>
                                            <param id="2" name="X">laser.X</param>
                                            <param id="3" name="Y">laser.Y</param>
                                        </action>
                                        <action id="-8" name="Set angle" type="LaserBeam">
                                            <param id="0" name="Angle">laser.Angle</param>
                                        </action>
                                        <action id="-5" name="Set width" type="LaserBeam">
                                            <param id="0" name="Width">fn.Ret(1)</param>
                                        </action>
                                        <action id="-24" name="Move to top" type="Laser" />
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Reset all prism generators</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Generator</param>
                                </condition>
                                <condition id="-7" name="Compare instance variable" type="Generator">
                                    <param id="0" name="Instance variable">prismUID</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Generator" />
                            </actions>
                        </event-block>
                        <comment>Reset all flow instance variables</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">debugMsg</param>
                                    <param id="1" name="Value">&quot;&quot;</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">colorsConnected</param>
                                    <param id="1" name="Value">&quot;&quot;</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">streamOutUID</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">streamsPassedThrough</param>
                                    <param id="1" name="Value">&quot;&quot;</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">minionTotal</param>
                                    <param id="1" name="Value">generatorMaxMinions</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>( ) Redraws the streams from each of the stream generators, calls resetStream</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnRedrawAllStreams</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnResetStream</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">0.001</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block disabled="1">
                            <conditions>
                                <condition disabled="1" id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition disabled="1" id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;Drawing New Stream (&quot; &amp; flow.PickedCount &amp; &quot; flow objects active) (&quot; &amp; stream.PickedCount &amp; &quot; stream objects active)&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Loop through each generator and start a stream chain for each</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">sourceStream</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">colorsConnected</param>
                                    <param id="1" name="Value">flow.sourceColor &amp; &quot;#&quot;</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnStartStreamChainAt &amp; &quot;,&quot; &amp; flow.UID &amp; &quot;,&quot; &amp; flow.UID</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(UID, originatingUID) Start a stream chain at the given flow object</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnStartStreamChainAt</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;....Starting Chain next=(&quot; &amp; fn.Param(0) &amp; &quot;)&quot; &amp; &quot; source=(&quot; &amp; fn.Param(1) &amp; &quot;)&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Setup the loop</comment>
                        <variable comment="a list of the flow objects passed on this chain" name="flowObjectsPassed" type="text"></variable>
                        <variable comment="the uid of the next flow object to attach the stream to" name="nextUID" type="number">0</variable>
                        <variable comment="the UID of the generator that created this stream" name="sourceUID" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">nextUID</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">sourceUID</param>
                                    <param id="1" name="Value">fn.Param(1)</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Loop through the entire chain of streams until there are no more flow objects to bounce off of</comment>
                        <event-block>
                            <conditions>
                                <condition id="-23" name="While" type="System" />
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">nextUID</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;........Start Next Link from (&quot; &amp; nextUID &amp; &quot;)&quot; &amp; &quot;(&quot; &amp; sourceUID &amp; &quot;)&quot;</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Processes a single link in a stream chain</comment>
                                <variable comment="how far is the flow object from the stream?" name="distanceToClosestObject" type="number">0</variable>
                                <variable comment="what angle is the next flow object at?" name="angleOfNextObject" type="number">0</variable>
                                <variable comment="the UID of the closest flow object" name="closestFlowUID" type="number">0</variable>
                                <variable comment="set to 0 if there is any reason that a stream cannot be extended" name="ableToExtend" type="number">1</variable>
                                <variable comment="The two colors of the minions that collided" name="color" type="text"></variable>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Flow</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Flow">
                                            <param id="0" name="Unique ID">nextUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">nextUID</param>
                                            <param id="1" name="Value">0</param>
                                        </action>
                                        <action id="7" name="Execute commands" type="fn">
                                            <param id="0" name="Commands">fnClosestObject &amp; &quot;,&quot; &amp; flow.x &amp; &quot;,&quot; &amp; flow.y &amp; &quot;,&quot; &amp; flow.angle</param>
                                        </action>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">closestFlowUID</param>
                                            <param id="1" name="Value">fn.Ret(0)</param>
                                        </action>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">distanceToClosestObject</param>
                                            <param id="1" name="Value">fn.Ret(1)</param>
                                        </action>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">angleOfNextObject</param>
                                            <param id="1" name="Value">fn.Ret(2)</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <comment>DEBUG: prints information about the closest flow object to the debug console</comment>
                                        <event-block collapsed="1" disabled="1">
                                            <conditions>
                                                <condition disabled="1" id="-19" name="Pick all" type="System">
                                                    <param id="0" name="Object">Flow</param>
                                                </condition>
                                                <condition disabled="1" id="-14" name="Pick by unique ID" type="Flow">
                                                    <param id="0" name="Unique ID">closestFlowUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                    <param id="0" name="Data">&quot;............Closest Flow Object &quot; &amp; flow.objectName &amp; &quot; (&quot; &amp; flow.UID &amp; &quot;)&quot;</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <event-block disabled="1">
                                                    <conditions>
                                                        <condition disabled="1" id="-14" name="Pick by unique ID" type="Generator">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                            <param id="0" name="Data">&quot;........is a generator prismUID=&quot; &amp; generator.prismUID</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <event-block disabled="1">
                                                    <conditions>
                                                        <condition disabled="1" id="-14" name="Pick by unique ID" type="Redirect">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                            <param id="0" name="Data">&quot;........is a redirector&quot;</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <event-block disabled="1">
                                                    <conditions>
                                                        <condition disabled="1" id="-14" name="Pick by unique ID" type="Prism">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                            <param id="0" name="Data">&quot;........is a prism&quot;</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <event-block disabled="1">
                                                    <conditions>
                                                        <condition disabled="1" id="-14" name="Pick by unique ID" type="Barrier">
                                                            <param id="0" name="Unique ID">flow.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                            <param id="0" name="Data">&quot;........is a barrier&quot;</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>If the flow object extends a new stream, check various flow conditions</comment>
                                        <event-block collapsed="1">
                                            <conditions>
                                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                                    <param id="0" name="Instance variable">extendStream</param>
                                                </condition>
                                            </conditions>
                                            <actions />
                                            <sub-events>
                                                <comment>Create new stream and extend it to the next flow object (if this is the type of flow object that extends streams)</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-7" name="Compare instance variable" type="Flow">
                                                            <param id="0" name="Instance variable">streamOutUID</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Value">0</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-3" name="Create object" type="System">
                                                            <param id="0" name="Object to create">Stream</param>
                                                            <param id="1" name="Layer">streamLayer</param>
                                                            <param id="2" name="X">flow.X</param>
                                                            <param id="3" name="Y">flow.Y</param>
                                                        </action>
                                                        <action id="-8" name="Set angle" type="Stream">
                                                            <param id="0" name="Angle">flow.angle</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Flow">
                                                            <param id="0" name="Instance variable">streamOutUID</param>
                                                            <param id="1" name="Value">stream.UID</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Stream">
                                                            <param id="0" name="Instance variable">sourceUID</param>
                                                            <param id="1" name="Value">flow.UID</param>
                                                        </action>
                                                        <action id="-5" name="Set width" type="Stream">
                                                            <param id="0" name="Width">distanceToClosestObject</param>
                                                        </action>
                                                        <action id="-24" name="Move to top" type="Stream" />
                                                    </actions>
                                                    <sub-events>
                                                        <comment>If the new stream overlaps any existing ones, place an intersection object on the intersection</comment>
                                                        <variable comment="the X coordinate of the stream intersection" name="intersectX" type="number">0</variable>
                                                        <variable comment="the X coordinate of the stream intersection" name="intersectY" type="number">0</variable>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-19" name="Pick all" type="System">
                                                                    <param id="0" name="Object">streamIntersectObjects</param>
                                                                </condition>
                                                                <condition id="-11" name="For Each" type="System">
                                                                    <param id="0" name="Object">streamIntersectObjects</param>
                                                                </condition>
                                                                <condition id="1" name="Is overlapping another object" type="Stream">
                                                                    <param id="0" name="Object">streamIntersectObjects</param>
                                                                </condition>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">round( anglediff( stream.Angle, streamIntersectObjects.Angle ) )</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Second value">90</param>
                                                                </condition>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">streamIntersectObjects.UID</param>
                                                                    <param id="1" name="Comparison">1</param>
                                                                    <param id="2" name="Second value">stream.UID</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">intersectX</param>
                                                                    <param id="1" name="Value">round(stream.Angle)=90|round(stream.Angle)=270?stream.X:streamIntersectObjects.x</param>
                                                                </action>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">intersectY</param>
                                                                    <param id="1" name="Value">round(stream.Angle)=90|round(stream.Angle)=270?streamIntersectObjects.y:stream.y</param>
                                                                </action>
                                                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;............Possible intersection found at (&quot; &amp; intersectX &amp; &quot;,&quot; &amp; intersectY &amp; &quot;)&quot;</param>
                                                                </action>
                                                            </actions>
                                                            <sub-events>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-8" name="Compare two values" type="System">
                                                                            <param id="0" name="First value">fn.Call( fnGridActiveObjectAt, intersectX, intersectY )</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Second value">0</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">streamIntersect</param>
                                                                            <param id="1" name="Layer">flowLayer</param>
                                                                            <param id="2" name="X">intersectX</param>
                                                                            <param id="3" name="Y">intersectY</param>
                                                                        </action>
                                                                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                                            <param id="0" name="Data">&quot;................Stream intersect dropped at (&quot; &amp; intersectX / 40 &amp; &quot;,&quot; &amp; intersectY / 40 &amp; &quot;)&quot;</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                            </sub-events>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                                <comment>Override the stream extension if extending it causes an infinite loop</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-19" name="Pick all" type="System">
                                                            <param id="0" name="Object">Redirect</param>
                                                        </condition>
                                                        <condition id="-14" name="Pick by unique ID" type="Redirect">
                                                            <param id="0" name="Unique ID">closestFlowUID</param>
                                                        </condition>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">anglediff( flow.Angle, angleOfNextObject)</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Second value">180</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">ableToExtend</param>
                                                            <param id="1" name="Value">0</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>Find the correct color for the outgoing stream and clean the color information in the current flow object</comment>
                                        <event-block collapsed="1">
                                            <conditions />
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">color</param>
                                                    <param id="1" name="Value">&quot;&quot;</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>If all three colors are in the stream, push it to grey</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;red&quot; )</param>
                                                            <param id="1" name="Comparison">5</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;blue&quot; )</param>
                                                            <param id="1" name="Comparison">5</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                                            <param id="1" name="Comparison">5</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Value">&quot;grey&quot;</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Flow">
                                                            <param id="0" name="Instance variable">colorsConnected</param>
                                                            <param id="1" name="Value">&quot;red#blue#yellow&quot;</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Red can combine with blue to produce purple and yellow to produce orange</comment>
                                                <event-block collapsed="1">
                                                    <conditions>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;red&quot; )</param>
                                                            <param id="1" name="Comparison">5</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                        <condition id="-14" name="Compare variable" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Value">&quot;&quot;</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Value">&quot;red&quot;</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">find( flow.colorsConnected, &quot;blue&quot; )</param>
                                                                    <param id="1" name="Comparison">5</param>
                                                                    <param id="2" name="Second value">0</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Value">&quot;purple&quot;</param>
                                                                </action>
                                                                <action id="-10" name="Set value" type="Flow">
                                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                                    <param id="1" name="Value">&quot;red#blue&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                                                    <param id="1" name="Comparison">5</param>
                                                                    <param id="2" name="Second value">0</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Value">&quot;orange&quot;</param>
                                                                </action>
                                                                <action id="-10" name="Set value" type="Flow">
                                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                                    <param id="1" name="Value">&quot;red#yellow&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-14" name="Compare variable" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Value">&quot;red&quot;</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-10" name="Set value" type="Flow">
                                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                                    <param id="1" name="Value">&quot;red&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                                <comment>Blue can combine with yellow to produce green</comment>
                                                <event-block collapsed="1">
                                                    <conditions>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;blue&quot; )</param>
                                                            <param id="1" name="Comparison">5</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                        <condition id="-14" name="Compare variable" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Value">&quot;&quot;</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Value">&quot;blue&quot;</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                                                    <param id="1" name="Comparison">5</param>
                                                                    <param id="2" name="Second value">0</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Value">&quot;green&quot;</param>
                                                                </action>
                                                                <action id="-10" name="Set value" type="Flow">
                                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                                    <param id="1" name="Value">&quot;blue#yellow&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-14" name="Compare variable" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Value">&quot;blue&quot;</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-10" name="Set value" type="Flow">
                                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                                    <param id="1" name="Value">&quot;blue&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                                <comment>All of yellow&apos;s combo combinations are taken care of in the above conditions</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-8" name="Compare two values" type="System">
                                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                                            <param id="1" name="Comparison">5</param>
                                                            <param id="2" name="Second value">0</param>
                                                        </condition>
                                                        <condition id="-14" name="Compare variable" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Value">&quot;&quot;</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Value">&quot;yellow&quot;</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Flow">
                                                            <param id="0" name="Instance variable">colorsConnected</param>
                                                            <param id="1" name="Value">&quot;yellow&quot;</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>If no color match has been found, default the stream to grey</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Compare variable" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Value">&quot;&quot;</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Value">&quot;grey&quot;</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Flow">
                                                            <param id="0" name="Instance variable">colorsConnected</param>
                                                            <param id="1" name="Value">&quot;grey&quot;</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Update the stream with the chosen color</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="Stream">
                                                            <param id="0" name="Unique ID">flow.streamOutUID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="4" name="Set animation" type="Stream">
                                                            <param id="0" name="Animation">color</param>
                                                            <param id="1" name="From">1</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>Start the cycle again with the next flow element (unless that flow element blocks the stream)</comment>
                                        <event-block collapsed="1">
                                            <conditions>
                                                <condition id="-14" name="Compare variable" type="System">
                                                    <param id="0" name="Variable">ableToExtend</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">1</param>
                                                </condition>
                                                <condition id="-14" name="Pick by unique ID" type="Stream">
                                                    <param id="0" name="Unique ID">flow.streamOutUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">color</param>
                                                    <param id="1" name="Value">flow.colorsConnected</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>If there is a lens at the location, overwrite the current color</comment>
                                                <event-block collapsed="1">
                                                    <conditions>
                                                        <condition id="-19" name="Pick all" type="System">
                                                            <param id="0" name="Object">Lens</param>
                                                        </condition>
                                                        <condition id="-14" name="Pick by unique ID" type="Lens">
                                                            <param id="0" name="Unique ID">closestFlowUID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">color</param>
                                                            <param id="1" name="Value">lens.AnimationName</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="2" name="Is playing" type="Lens">
                                                                    <param id="0" name="Animation">&quot;purple&quot;</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Value">&quot;red#blue&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="2" name="Is playing" type="Lens">
                                                                    <param id="0" name="Animation">&quot;green&quot;</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Value">&quot;blue#yellow&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="2" name="Is playing" type="Lens">
                                                                    <param id="0" name="Animation">&quot;orange&quot;</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">color</param>
                                                                    <param id="1" name="Value">&quot;red#yellow&quot;</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-19" name="Pick all" type="System">
                                                            <param id="0" name="Object">Flow</param>
                                                        </condition>
                                                        <condition id="-14" name="Pick by unique ID" type="Flow">
                                                            <param id="0" name="Unique ID">closestFlowUID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions />
                                                    <sub-events>
                                                        <comment>Start the next iteration if the stream wasn&apos;t blocked</comment>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Flow">
                                                                    <param id="0" name="Instance variable">blockStream</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-10" name="Set value" type="Flow">
                                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                                    <param id="1" name="Value">flow.colorsConnected &amp; &quot;#&quot; &amp; color</param>
                                                                </action>
                                                                <action id="-9" name="Set value" type="System">
                                                                    <param id="0" name="Variable">nextUID</param>
                                                                    <param id="1" name="Value">closestFlowUID</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <comment>If the beam terminates at an exit point, check to see if the colors match and unlock it if they do</comment>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-19" name="Pick all" type="System">
                                                                    <param id="0" name="Object">Exit</param>
                                                                </condition>
                                                                <condition id="-14" name="Pick by unique ID" type="Exit">
                                                                    <param id="0" name="Unique ID">flow.UID</param>
                                                                </condition>
                                                                <condition id="-19" name="Pick all" type="System">
                                                                    <param id="0" name="Object">ExitLabel</param>
                                                                </condition>
                                                                <condition id="-7" name="Compare instance variable" type="ExitLabel">
                                                                    <param id="0" name="Instance variable">sourceUID</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Value">exit.UID</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;............Exit &quot; &amp; exit.UID &amp; &quot; Hit&quot;</param>
                                                                </action>
                                                                <action id="4" name="Set animation" type="ExitLabel">
                                                                    <param id="0" name="Animation">&quot;Disabled&quot;</param>
                                                                    <param id="1" name="From">1</param>
                                                                </action>
                                                                <action id="-13" name="Set boolean" type="Exit">
                                                                    <param id="0" name="Instance variable">isUnlocked</param>
                                                                    <param id="1" name="Value">0</param>
                                                                </action>
                                                                <action id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;................exit=&quot; &amp; exit.AnimationName &amp; &quot; stream=&quot; &amp; stream.AnimationName</param>
                                                                </action>
                                                            </actions>
                                                            <sub-events>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-8" name="Compare two values" type="System">
                                                                            <param id="0" name="First value">exit.AnimationName</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Second value">stream.AnimationName</param>
                                                                        </condition>
                                                                        <condition id="-8" name="Compare two values" type="System">
                                                                            <param id="0" name="First value">anglediff( stream.Angle, exit.Angle )</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Second value">180</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="0" name="Log Text" type="debugConsole">
                                                                            <param id="0" name="Data">&quot;............Exit Unlocked&quot;</param>
                                                                        </action>
                                                                        <action id="4" name="Set animation" type="ExitLabel">
                                                                            <param id="0" name="Animation">&quot;Enabled&quot;</param>
                                                                            <param id="1" name="From">1</param>
                                                                        </action>
                                                                        <action id="2" name="Stop" type="ExitLabel" />
                                                                        <action id="-13" name="Set boolean" type="Exit">
                                                                            <param id="0" name="Instance variable">isUnlocked</param>
                                                                            <param id="1" name="Value">1</param>
                                                                        </action>
                                                                        <action id="-5" name="Set width" type="Stream">
                                                                            <param id="0" name="Width">distance( stream.X, stream.Y, exit.ImagePointX(1), exit.ImagePointY(1) )</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                            </sub-events>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>If this flow object has already been traversed, we are in an infinite loop and need to stop</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">find( flow.streamsPassedThrough, sourceUID &amp; &quot;#&quot; )</param>
                                                    <param id="1" name="Comparison">5</param>
                                                    <param id="2" name="Second value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">nextUID</param>
                                                    <param id="1" name="Value">0</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>Add the current flow objects to the list of objects traversed</comment>
                                        <event-block>
                                            <conditions />
                                            <actions>
                                                <action id="-10" name="Set value" type="Flow">
                                                    <param id="0" name="Instance variable">streamsPassedThrough</param>
                                                    <param id="1" name="Value">sourceUID &amp; &quot;#&quot; &amp; flow.streamsPassedThrough</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>If the flow object is a prism, start new chain reactions</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-19" name="Pick all" type="System">
                                                    <param id="0" name="Object">Prism</param>
                                                </condition>
                                                <condition id="-14" name="Pick by unique ID" type="Prism">
                                                    <param id="0" name="Unique ID">closestFlowUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                    <param id="0" name="Data">&quot;............Prism &quot; &amp; prism.UID &amp; &quot; hit&quot;</param>
                                                </action>
                                                <action id="-10" name="Set value" type="Prism">
                                                    <param id="0" name="Instance variable">colorsConnected</param>
                                                    <param id="1" name="Value">&quot;&quot;</param>
                                                </action>
                                                <action id="-10" name="Set value" type="Prism">
                                                    <param id="0" name="Instance variable">streamOutCount</param>
                                                    <param id="1" name="Value">tokencount( flow.colorsConnected, &quot;#&quot;)</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>Destroy any existing generators spawned from this prism</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-19" name="Pick all" type="System">
                                                            <param id="0" name="Object">Generator</param>
                                                        </condition>
                                                        <condition id="-7" name="Compare instance variable" type="Generator">
                                                            <param id="0" name="Instance variable">prismUID</param>
                                                            <param id="1" name="Comparison">0</param>
                                                            <param id="2" name="Value">prism.UID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Destroy" type="Generator" />
                                                    </actions>
                                                </event-block>
                                                <comment>Drop hidden generators and start stream chains from each </comment>
                                                <variable comment="the UID of the created generator" name="generatorUID" type="number">0</variable>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-10" name="For" type="System">
                                                            <param id="0" name="Name">&quot;streamLoop&quot;</param>
                                                            <param id="1" name="Start index">0</param>
                                                            <param id="2" name="End index">prism.streamOutCount - 1</param>
                                                        </condition>
                                                        <condition id="-7" name="Compare instance variable" type="Prism">
                                                            <param id="0" name="Instance variable">streamOutCount</param>
                                                            <param id="1" name="Comparison">4</param>
                                                            <param id="2" name="Value">1</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-9" name="Set value" type="System">
                                                            <param id="0" name="Variable">generatorUID</param>
                                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, &quot;PrismGenerator&quot;, prism.X, prism.Y, 0, tokenat( flow.colorsConnected, loopindex, &quot;#&quot;)  )</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-14" name="Pick by unique ID" type="Generator">
                                                                    <param id="0" name="Unique ID">generatorUID</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action disabled="1" id="0" name="Log Text" type="debugConsole">
                                                                    <param id="0" name="Data">&quot;....Hidden Prism Generator &quot; &amp; generator.UID &amp; &quot; spawned&quot;</param>
                                                                </action>
                                                                <action id="-10" name="Set value" type="Generator">
                                                                    <param id="0" name="Instance variable">prismUID</param>
                                                                    <param id="1" name="Value">prism.UID</param>
                                                                </action>
                                                            </actions>
                                                            <sub-events>
                                                                <comment>If this color hasn&apos;t been established at the prism, assign it to an empty slot and register it</comment>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-8" name="Compare two values" type="System">
                                                                            <param id="0" name="First value">PrismStreams.At( prism.UID &amp; generator.sourceColor)</param>
                                                                            <param id="1" name="Comparison">2</param>
                                                                            <param id="2" name="Second value">0</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-8" name="Set angle" type="Generator">
                                                                            <param id="0" name="Angle">int( tokenat( prism.slotsLeft, 0, &quot;#&quot;) )</param>
                                                                        </action>
                                                                        <action id="1" name="Set value by key string" type="PrismStreams">
                                                                            <param id="0" name="Key string">prism.UID &amp; generator.sourceColor</param>
                                                                            <param id="1" name="Value">generator.Angle</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Prism">
                                                                            <param id="0" name="Instance variable">slotsLeft</param>
                                                                            <param id="1" name="Value">replace( prism.slotsLeft, generator.Angle &amp; &quot;#&quot;, &quot;&quot; )</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                                <comment>If this color has already been established at the prism, use the slot it previously occupied</comment>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-8" name="Compare two values" type="System">
                                                                            <param id="0" name="First value">PrismStreams.At( prism.UID &amp; generator.sourceColor)</param>
                                                                            <param id="1" name="Comparison">5</param>
                                                                            <param id="2" name="Second value">0</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-8" name="Set angle" type="Generator">
                                                                            <param id="0" name="Angle">PrismStreams.At( prism.UID &amp; generator.sourceColor )</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                                <comment>Start a new stream chain from this generator</comment>
                                                                <event-block>
                                                                    <conditions />
                                                                    <actions>
                                                                        <action id="7" name="Execute commands" type="fn">
                                                                            <param id="0" name="Commands">fnStartStreamChainAt &amp; &quot;,&quot; &amp; generator.UID &amp; &quot;,&quot; &amp; sourceUID</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                            </sub-events>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="Flow objects direct minions around the map" title="Flow">
            <sub-events>
                <variable comment="the new grid x value" name="gridX" type="number">0</variable>
                <variable comment="the new grid y value" name="gridY" type="number">0</variable>
                <comment>(&quot;flowObjectName&quot;,x,y,angle,animationName) creates a new flow object</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnCreateFlowObject</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;Creating &quot; &amp; fn.Param( 0 ) &amp; &quot; @ (&quot; &amp; fn.Param(1) &amp; &quot;,&quot; &amp; fn.Param(2) &amp; &quot;) &quot; &amp; fn.Param(3) &amp; &quot;deg &quot; &amp; fn.Param(4)</param>
                        </action>
                    </actions>
                    <sub-events>
                        <variable comment="the angle of the flow object" name="flowAngle" type="number">0</variable>
                        <variable comment="the type of flow object to create" name="flowObjectType" type="text"></variable>
                        <variable comment="the animation name of the flow object" name="flowAnimation" type="text"></variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">flowAngle</param>
                                    <param id="1" name="Value">fn.Param(3)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">flowAnimation</param>
                                    <param id="1" name="Value">fn.Param(4)</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnGetGridCoordinate &amp; &quot;,&quot; &amp; fn.Param(1) &amp; &quot;,&quot; &amp; fn.Param(2)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">gridX</param>
                                    <param id="1" name="Value">fn.Ret(0)</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">gridY</param>
                                    <param id="1" name="Value">fn.Ret(1)</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">0</param>
                                </action>
                                <action id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;item placed (&quot; &amp; flowObjectType &amp; &quot;) @ (&quot; &amp; fn.Param(1) &amp; &quot;,&quot; &amp; fn.Param(2) &amp; &quot;) &quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a redirector</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Redirector&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Redirect</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="-10" name="Set value" type="Redirect">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Redirector&quot;</param>
                                </action>
                                <action id="-8" name="Set angle" type="Redirect">
                                    <param id="0" name="Angle">flowAngle</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">redirect.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a prism generator</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;PrismGenerator&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Generator</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">sourceColor</param>
                                    <param id="1" name="Value">flowAnimation</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">colorsConnected</param>
                                    <param id="1" name="Value">generator.sourceColor &amp; &quot;#&quot;</param>
                                </action>
                                <action id="4" name="Set animation" type="Generator">
                                    <param id="0" name="Animation">generator.sourceColor</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">blockStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">spawnMinions</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">sourceStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-15" name="Set visible" type="Generator">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;PrismGenerator&quot;</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">generator.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a generator</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Generator&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Generator</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Generator&quot;</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">sourceColor</param>
                                    <param id="1" name="Value">flowAnimation</param>
                                </action>
                                <action id="4" name="Set animation" type="Generator">
                                    <param id="0" name="Animation">generator.sourceColor</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">spawnRate</param>
                                    <param id="1" name="Value">generatorSpawnRate</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">blockStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">spawnMinions</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">sourceStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Generator">
                                    <param id="0" name="Instance variable">minionTotal</param>
                                    <param id="1" name="Value">generatorMaxMinions</param>
                                </action>
                                <action id="-8" name="Set angle" type="Generator">
                                    <param id="0" name="Angle">flowAngle</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">generator.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a barrier</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Barrier&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Barrier</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Barrier">
                                    <param id="0" name="Instance variable">blockStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-8" name="Set angle" type="Barrier">
                                    <param id="0" name="Angle">0</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Barrier">
                                    <param id="0" name="Instance variable">extendStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Barrier">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Barrier&quot;</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">barrier.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a laser</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Laser&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Laser</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Laser">
                                    <param id="0" name="Instance variable">blockStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Laser">
                                    <param id="0" name="Instance variable">extendStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Laser">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Laser&quot;</param>
                                </action>
                                <action id="-8" name="Set angle" type="Laser">
                                    <param id="0" name="Angle">flowAngle</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">laser.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a painter</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Painter&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Painter</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="4" name="Set animation" type="Painter">
                                    <param id="0" name="Animation">flowAnimation</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Painter">
                                    <param id="0" name="Instance variable">extendStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Painter">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Painter&quot;</param>
                                </action>
                                <action id="-8" name="Set angle" type="Painter">
                                    <param id="0" name="Angle">flowAngle</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">painter.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a lens</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Lens&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Lens</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="4" name="Set animation" type="Lens">
                                    <param id="0" name="Animation">flowAnimation</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Lens">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Lens&quot;</param>
                                </action>
                                <action id="-8" name="Set angle" type="Lens">
                                    <param id="0" name="Angle">flowAngle</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">lens.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add a lens</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Prism&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Prism</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="-10" name="Set value" type="Prism">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Prism&quot;</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Prism">
                                    <param id="0" name="Instance variable">blockStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Prism">
                                    <param id="0" name="Instance variable">extendStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-8" name="Set angle" type="Prism">
                                    <param id="0" name="Angle">flowAngle</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">prism.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Add an exit</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">flowObjectType</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">&quot;Exit&quot;</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Exit</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">gridX</param>
                                    <param id="3" name="Y">gridY</param>
                                </action>
                                <action id="4" name="Set animation" type="Exit">
                                    <param id="0" name="Animation">flowAnimation</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Exit">
                                    <param id="0" name="Instance variable">extendStream</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Exit">
                                    <param id="0" name="Instance variable">blockStream</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-8" name="Set angle" type="Exit">
                                    <param id="0" name="Angle">180</param>
                                </action>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">ExitLabel</param>
                                    <param id="1" name="Layer">flowLayer</param>
                                    <param id="2" name="X">exit.X</param>
                                    <param id="3" name="Y">exit.Y</param>
                                </action>
                                <action behavior="Pin" id="0" name="Pin to object" type="ExitLabel">
                                    <param id="0" name="Pin to">Exit</param>
                                </action>
                                <action id="-10" name="Set value" type="ExitLabel">
                                    <param id="0" name="Instance variable">sourceUID</param>
                                    <param id="1" name="Value">exit.UID</param>
                                </action>
                                <action id="-8" name="Set angle" type="ExitLabel">
                                    <param id="0" name="Angle">180</param>
                                </action>
                                <action id="-24" name="Move to top" type="Exit" />
                                <action id="-10" name="Set value" type="Exit">
                                    <param id="0" name="Instance variable">objectName</param>
                                    <param id="1" name="Value">&quot;Exit&quot;</param>
                                </action>
                                <action id="6" name="Set result" type="fn">
                                    <param id="0" name="Value">exit.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>If the newly created object is in the inventory, adjust it to fit the smaller grid</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">fn.Result</param>
                                </condition>
                                <condition id="1" name="Is overlapping another object" type="Flow">
                                    <param id="0" name="Object">inventory</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-7" name="Set size" type="Flow">
                                    <param id="0" name="Width">round( flow.Width * inventoryScale / gridScale )</param>
                                    <param id="1" name="Height">round( flow.Height * inventoryScale / gridScale )</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Flow">
                                    <param id="0" name="Instance variable">inInventory</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-26" name="Move to layer" type="Flow">
                                    <param id="0" name="Layer">inventoryLayer</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Move the flow object</comment>
                <variable comment="the new grid y value" name="result" type="number">0</variable>
                <event-block>
                    <conditions>
                        <condition id="2" name="Mouse button is down" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">isMoving</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Set position" type="Flow">
                            <param id="0" name="X">mouse.X</param>
                            <param id="1" name="Y">mouse.Y</param>
                        </action>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnGetGridCoordinate &amp; &quot;,&quot; &amp; mouse.X &amp; &quot;,&quot; &amp; mouse.Y</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">gridX</param>
                            <param id="1" name="Value">fn.Ret(0)</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">gridY</param>
                            <param id="1" name="Value">fn.Ret(1)</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="7" name="Cursor is over object" type="Mouse">
                                    <param id="0" name="Object">inventory</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-7" name="Set size" type="moveTarget">
                                    <param id="0" name="Width">inventoryScale</param>
                                    <param id="1" name="Height">inventoryScale</param>
                                </action>
                                <action id="-26" name="Move to layer" type="moveTarget">
                                    <param id="0" name="Layer">inventoryLayer</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Flow">
                                            <param id="0" name="Instance variable">inInventory</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-7" name="Set size" type="Flow">
                                            <param id="0" name="Width">round( flow.Width * inventoryScale / gridScale )</param>
                                            <param id="1" name="Height">round( flow.Height * inventoryScale / gridScale )</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-13" name="Set boolean" type="Flow">
                                            <param id="0" name="Instance variable">inInventory</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-22" name="Else" type="System" />
                                <condition id="7" name="Cursor is over object" type="Mouse">
                                    <param id="0" name="Object">grid</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-7" name="Set size" type="moveTarget">
                                    <param id="0" name="Width">gridScale</param>
                                    <param id="1" name="Height">gridScale</param>
                                </action>
                                <action id="-26" name="Move to layer" type="moveTarget">
                                    <param id="0" name="Layer">flowLayer</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                            <param id="0" name="Instance variable">inInventory</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-7" name="Set size" type="Flow">
                                            <param id="0" name="Width">round( flow.Width * gridScale / inventoryScale )</param>
                                            <param id="1" name="Height">round( flow.Height * gridScale / inventoryScale )</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-13" name="Set boolean" type="Flow">
                                            <param id="0" name="Instance variable">inInventory</param>
                                            <param id="1" name="Value">0</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block collapsed="1">
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">fn.Call( fnGridObjectAt, gridX, gridY )</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="7" name="Cursor is over object" type="Mouse">
                                            <param id="0" name="Object">inventory</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Set position" type="moveTarget">
                                            <param id="0" name="X">gridX</param>
                                            <param id="1" name="Y">gridY</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="7" name="Cursor is over object" type="Mouse">
                                            <param id="0" name="Object">grid</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Set position" type="moveTarget">
                                            <param id="0" name="X">gridX</param>
                                            <param id="1" name="Y">gridY</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>When the moving is done, snap the flow object to the grid and reset the streams</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="3" name="On button released" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">isMoving</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-13" name="Set boolean" type="Flow">
                                    <param id="0" name="Instance variable">isMoving</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-15" name="Set visible" type="moveTarget">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-3" name="Set position" type="Flow">
                                    <param id="0" name="X">moveTarget.X</param>
                                    <param id="1" name="Y">moveTarget.Y</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnUpdateHUDSelection &amp; &quot;,&quot; &amp; flow.UID</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>If the flow object was previously active, turn it back on again</comment>
                        <event-block>
                            <conditions>
                                <condition id="1" inverted="1" name="Is overlapping another object" type="Flow">
                                    <param id="0" name="Object">inventory</param>
                                </condition>
                                <condition id="-7" name="Compare instance variable" type="Flow">
                                    <param id="0" name="Instance variable">previousActiveState</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="Flow">
                                    <param id="0" name="Instance variable">isActive</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Reset the streams</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Fade out an inactive flow object</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">isActive</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">inInventory</param>
                        </condition>
                        <condition id="-10" name="Compare opacity" type="Flow">
                            <param id="0" name="Comparison">0</param>
                            <param id="1" name="Opacity">100</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="Flow">
                            <param id="0" name="Opacity">40</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Fade in an active flow object</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">isActive</param>
                        </condition>
                        <condition id="-10" name="Compare opacity" type="Flow">
                            <param id="0" name="Comparison">2</param>
                            <param id="1" name="Opacity">100</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="Flow">
                            <param id="0" name="Opacity">100</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Fade an object in if it is in the inventory</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">inInventory</param>
                        </condition>
                        <condition id="-10" name="Compare opacity" type="Flow">
                            <param id="0" name="Comparison">2</param>
                            <param id="1" name="Opacity">100</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="Flow">
                            <param id="0" name="Opacity">100</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Delete the exit label when the source exit is deleted</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="-19" name="On destroyed" type="Exit" />
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="ExitLabel">
                                    <param id="0" name="Instance variable">sourceUID</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">exit.UID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="ExitLabel" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A heads up display that holds menu options and game inventory" title="HUD">
            <sub-events>
                <comment>A new object has been selected, update the selection rectangle and HUD active object</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnUpdateHUDSelection</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">fn.Param(0)</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" type="HUD">
                                    <param id="0" name="Instance variable">selectionUID</param>
                                    <param id="1" name="Value">flow.UID</param>
                                </action>
                                <action id="-3" name="Set position" type="selectionBox">
                                    <param id="0" name="X">flow.X</param>
                                    <param id="1" name="Y">flow.Y</param>
                                </action>
                                <action id="-15" name="Set visible" type="selectionBox">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="1" name="Is overlapping another object" type="Flow">
                                            <param id="0" name="Object">inventory</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-7" name="Set size" type="selectionBox">
                                            <param id="0" name="Width">inventoryScale </param>
                                            <param id="1" name="Height">inventoryScale </param>
                                        </action>
                                        <action id="-26" name="Move to layer" type="selectionBox">
                                            <param id="0" name="Layer">inventoryLayer</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="1" name="Is overlapping another object" type="Flow">
                                            <param id="0" name="Object">grid</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-7" name="Set size" type="selectionBox">
                                            <param id="0" name="Width">gridScale</param>
                                            <param id="1" name="Height">gridScale</param>
                                        </action>
                                        <action id="-26" name="Move to layer" type="selectionBox">
                                            <param id="0" name="Layer">gridLayer</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Clears the HUD selection</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnResetHUD</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-10" name="Set value" type="HUD">
                                    <param id="0" name="Instance variable">selectionUID</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-15" name="Set visible" type="selectionBox">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action behavior="Pin" id="1" name="Unpin" type="selectionBox" />
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnResetHUDDisplay</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Clear the HUD display elements</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnResetHUDDisplay</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-25" name="Move to bottom" type="HUD" />
                                <action id="-25" name="Move to bottom" type="HUDbackground" />
                                <action id="0" name="Set text" type="HUDselectionInfo">
                                    <param id="0" name="Text">&quot;&quot;</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDselectionInfoBg">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDactivatorLabel">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDactivatorBg">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="0" name="Set text" type="txtDebugBottom">
                                    <param id="0" name="Text">&quot;&quot;</param>
                                </action>
                                <action id="0" name="Set text" type="HUDlevelLabel">
                                    <param id="0" name="Text">&quot;&quot;</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">generator.Count</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="2" name="Set visible" type="HUDspawnButton">
                                            <param id="0" name="Visibility">0</param>
                                        </action>
                                        <action id="-15" name="Set visible" type="HUDspawnBg">
                                            <param id="0" name="Visibility">0</param>
                                        </action>
                                        <action id="0" name="Set text" type="HUDspawnLabel">
                                            <param id="0" name="Text">&quot;&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Delete a hud object if it is selected and the &apos;del&apos; key is pressed</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On key pressed" type="Keyboard">
                            <param id="0" name="Key">46 (Delete)</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Flow">
                            <param id="0" name="Unique ID">hud.selectionUID</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Destroy" type="Flow" />
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnResetHUD</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Update the HUD with real time information on the currently selected object</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">HUDrefreshRate</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnResetHUDDisplay</param>
                        </action>
                        <action id="0" name="Set text" type="HUDlevelLabel">
                            <param id="0" name="Text">&quot;Level &quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">generator.Count</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="2" name="Set visible" type="HUDspawnButton">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDspawnBg">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                                <action id="4" name="Set animation" type="HUDspawnBg">
                                    <param id="0" name="Animation">&quot;Disabled&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="0" name="Set text" type="HUDspawnButton">
                                    <param id="0" name="Text">&quot;Not&quot; &amp; newline &amp; &quot;Spawning&quot;</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Is boolean instance variable set" type="HUD">
                                            <param id="0" name="Instance variable">isSpawning</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="HUDspawnBg">
                                            <param id="0" name="Animation">&quot;Enabled&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="0" name="Set text" type="HUDspawnButton">
                                            <param id="0" name="Text">&quot;Spawning&quot; &amp; newline &amp; &quot;Minions&quot;</param>
                                        </action>
                                        <action id="-15" name="Set visible" type="HUDselectionInfoBg">
                                            <param id="0" name="Visibility">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="HUD">
                                    <param id="0" name="Instance variable">selectionUID</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="HUD">
                                    <param id="0" name="Instance variable">isSpawning</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Flow</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Flow">
                                            <param id="0" name="Unique ID">HUD.selectionUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="0" name="Set text" type="HUDselectionInfo">
                                            <param id="0" name="Text">flow.objectName &amp; &quot; #&quot; &amp; flow.UID &amp; newline &amp; flow.colorsConnected</param>
                                        </action>
                                        <action id="-15" name="Set visible" type="HUDselectionInfoBg">
                                            <param id="0" name="Visibility">1</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Flow">
                                                    <param id="0" name="Instance variable">inInventory</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-15" name="Set visible" type="HUDactivatorLabel">
                                                    <param id="0" name="Visibility">1</param>
                                                </action>
                                                <action id="-15" name="Set visible" type="HUDactivatorBg">
                                                    <param id="0" name="Visibility">1</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>Update the color of the activator button (unless the node is moving)</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Flow">
                                                            <param id="0" name="Instance variable">isMoving</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="4" name="Set animation" type="HUDactivatorBg">
                                                            <param id="0" name="Animation">&quot;Disabled&quot;</param>
                                                            <param id="1" name="From">1</param>
                                                        </action>
                                                        <action id="0" name="Set text" type="HUDactivatorLabel">
                                                            <param id="0" name="Text">flow.isActive=1?&quot;Enabled&quot;:&quot;Disabled&quot;</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Is boolean instance variable set" type="Flow">
                                                                    <param id="0" name="Instance variable">isActive</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="4" name="Set animation" type="HUDactivatorBg">
                                                                    <param id="0" name="Animation">&quot;Enabled&quot;</param>
                                                                    <param id="1" name="From">1</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Start spawning minions from the generators</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On clicked" type="HUDspawnButton" />
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>If the spawning is being stopped, reset the HUD</comment>
                        <variable comment="has the button click resulted in a spawn start?" name="spawnStarted" type="number">0</variable>
                        <event-block>
                            <conditions>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="HUD">
                                    <param id="0" name="Instance variable">isSpawning</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnStartSpawning</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">spawnStarted</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>If the spawning is starting, show the minion count and start up all animations</comment>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Is boolean instance variable set" type="HUD">
                                    <param id="0" name="Instance variable">isSpawning</param>
                                </condition>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">spawnStarted</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnStopSpawning</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions />
                            <actions />
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Toggle the active state of a flow object </comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">HUDactivatorBg</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Flow">
                            <param id="0" name="Unique ID">hud.selectionUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-14" name="Toggle boolean" type="Flow">
                            <param id="0" name="Instance variable">isActive</param>
                        </action>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                        </action>
                    </actions>
                </event-block>
                <comment>If the save button is pushed, call the save level method</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">HUDsaveLevelBg</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnSaveLevel</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Activate the next level</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">HUDlevelNext</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">currentLevel</param>
                            <param id="1" name="Value">hud.currentLevel&lt;levelMax?hud.currentLevel+1:0</param>
                        </action>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnLoadLevel &amp; &quot;,&quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="0" name="On key pressed" type="Keyboard">
                            <param id="0" name="Key">39 (Right arrow)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">currentLevel</param>
                            <param id="1" name="Value">hud.currentLevel&lt;levelMax?hud.currentLevel+1:0</param>
                        </action>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnLoadLevel &amp; &quot;,&quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Activate the previous level</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">HUDlevelPrev</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">currentLevel</param>
                            <param id="1" name="Value">hud.currentLevel&gt;0?hud.currentLevel-1:levelMax</param>
                        </action>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnLoadLevel &amp; &quot;,&quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="0" name="On key pressed" type="Keyboard">
                            <param id="0" name="Key">37 (Left arrow)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">currentLevel</param>
                            <param id="1" name="Value">hud.currentLevel&gt;0?hud.currentLevel-1:levelMax</param>
                        </action>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnLoadLevel &amp; &quot;,&quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="0" name="On key pressed" type="Keyboard">
                            <param id="0" name="Key">38 (Up arrow)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnLoadLevel &amp; &quot;,&quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="Events used to generate and load level instances" title="Level">
            <sub-events>
                <comment>Start spawning minions from any flow object capable of doing so</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnStartSpawning</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;Start Spawning&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnResetHUD</param>
                                </action>
                                <action id="-13" name="Set boolean" type="HUD">
                                    <param id="0" name="Instance variable">isSpawning</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-10" name="Set value" type="HUD">
                                    <param id="0" name="Instance variable">minionsSaved</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="3" name="Start" type="ExitLabel">
                                    <param id="0" name="From">0</param>
                                </action>
                                <action id="0" name="Set text" type="HUDminionsSavedCount">
                                    <param id="0" name="Text">hud.minionsSaved</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDminionsSavedLabel">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDselectionInfoBg">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Attach health bars to each minion generator</comment>
                        <event-block disabled="1">
                            <conditions>
                                <condition disabled="1" id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition disabled="1" id="-8" name="Is boolean instance variable set" type="Flow">
                                    <param id="0" name="Instance variable">spawnMinions</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnAttachHealthBar &amp; &quot;,&quot; &amp; flow.UID &amp; &quot;,&quot; &amp; flow.X &amp; &quot;,&quot; &amp; flow.Y</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Stop minions from spawning</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnStopSpawning</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;Stop Spawning&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-13" name="Set boolean" type="HUD">
                                    <param id="0" name="Instance variable">isSpawning</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnDestroyAllMinions</param>
                                </action>
                                <action id="2" name="Stop" type="ExitLabel" />
                                <action id="0" name="Set text" type="HUDminionsSavedCount">
                                    <param id="0" name="Text">&quot;&quot;</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDminionsSavedLabel">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-15" name="Set visible" type="HUDselectionInfoBg">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnResetHUD</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Save the current state of the grid</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnSaveLevel</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;Saving Level Data (NEW STYLE)&quot;</param>
                        </action>
                        <action id="1" name="Set size" type="LevelData">
                            <param id="0" name="Width">flow.Count</param>
                            <param id="1" name="Height">5</param>
                            <param id="2" name="Depth">1</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="3" name="Set at XY" type="LevelData">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">0</param>
                                    <param id="2" name="Value">flow.objectName</param>
                                </action>
                                <action id="3" name="Set at XY" type="LevelData">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">1</param>
                                    <param id="2" name="Value">flow.X</param>
                                </action>
                                <action id="3" name="Set at XY" type="LevelData">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">2</param>
                                    <param id="2" name="Value">flow.y</param>
                                </action>
                                <action id="3" name="Set at XY" type="LevelData">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">3</param>
                                    <param id="2" name="Value">flow.angle</param>
                                </action>
                                <action id="3" name="Set at XY" type="LevelData">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">4</param>
                                    <param id="2" name="Value">flow.AnimationName</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Save level data to chrome console</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">LevelData.AsJSON</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(levelNumber) load the given level</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnLoadLevel</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Log Text" type="debugConsole">
                            <param id="0" name="Data">&quot;Loading level &quot; &amp;  fn.Param(0)</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Reset the level and load the object array</comment>
                        <event-block collapsed="1">
                            <conditions />
                            <actions>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnStopSpawning</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnClearLevel</param>
                                </action>
                                <action id="0" name="Clear" type="LevelData" />
                                <action id="1" name="Set size" type="LevelData">
                                    <param id="0" name="Width">0</param>
                                    <param id="1" name="Height">0</param>
                                    <param id="2" name="Depth">0</param>
                                </action>
                                <action id="11" name="Load" type="LevelData">
                                    <param id="0" name="JSON">LevelDataMap.at( fn.Param(0) )</param>
                                </action>
                                <action id="0" name="Log Text" type="debugConsole">
                                    <param id="0" name="Data">&quot;Total Objects Found: &quot; &amp; LevelData.Width</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Loop through the object array and recreate each object found</comment>
                                <variable comment="the uid of the created flow object" name="createdObjectUID" type="number">0</variable>
                                <event-block>
                                    <conditions>
                                        <condition id="-10" name="For" type="System">
                                            <param id="0" name="Name">&quot;Load Flow Objects&quot;</param>
                                            <param id="1" name="Start index">0</param>
                                            <param id="2" name="End index">LevelData.Width</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">createdObjectUID</param>
                                            <param id="1" name="Value">fn.Call( fnCreateFlowObject, LevelData.At( loopindex, 0 ),LevelData.At( loopindex, 1 ),LevelData.At( loopindex, 2 ),LevelData.At( loopindex, 3 ),LevelData.At( loopindex, 4 ) )</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Redraw the stream with the new grid state</comment>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-16" name="Wait" type="System">
                                            <param id="0" name="Seconds">0.05</param>
                                        </action>
                                        <action id="7" name="Execute commands" type="fn">
                                            <param id="0" name="Commands">fnResetHUD</param>
                                        </action>
                                        <action id="7" name="Execute commands" type="fn">
                                            <param id="0" name="Commands">fnRedrawAllStreams</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Clears all game objects from the current grid</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnClearLevel</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="4" name="Clean all" type="PrismStreams" />
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnResetStream</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Flow" />
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">ExitLabel</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="ExitLabel" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Seed load the first level</comment>
                <event-block>
                    <conditions>
                        <condition id="-4" name="Trigger once while true" type="System" />
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnLoadLevel &amp; &quot;,&quot; &amp; hud.currentLevel</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Change the color of the selected flow object</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="-7" name="Compare instance variable" type="HUD">
                            <param id="0" name="Instance variable">selectionUID</param>
                            <param id="1" name="Comparison">1</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="0" name="On key pressed" type="Keyboard">
                                    <param id="0" name="Key">49 (1)</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">hud.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Flow">
                                    <param id="0" name="Animation">&quot;red&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">sourceColor</param>
                                    <param id="1" name="Value">flow.AnimationName</param>
                                </action>
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="0" name="On key pressed" type="Keyboard">
                                    <param id="0" name="Key">50 (2)</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">hud.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Flow">
                                    <param id="0" name="Animation">&quot;yellow&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">sourceColor</param>
                                    <param id="1" name="Value">flow.AnimationName</param>
                                </action>
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="0" name="On key pressed" type="Keyboard">
                                    <param id="0" name="Key">51 (3)</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">hud.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Flow">
                                    <param id="0" name="Animation">&quot;blue&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">sourceColor</param>
                                    <param id="1" name="Value">flow.AnimationName</param>
                                </action>
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="0" name="On key pressed" type="Keyboard">
                                    <param id="0" name="Key">52 (4)</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">hud.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Flow">
                                    <param id="0" name="Animation">&quot;green&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="0" name="On key pressed" type="Keyboard">
                                    <param id="0" name="Key">53 (5)</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">hud.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Flow">
                                    <param id="0" name="Animation">&quot;purple&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="0" name="On key pressed" type="Keyboard">
                                    <param id="0" name="Key">54 (6)</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">hud.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Flow">
                                    <param id="0" name="Animation">&quot;orange&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-16" name="Wait" type="System">
                                    <param id="0" name="Seconds">streamRedrawDelay</param>
                                </action>
                                <action id="7" name="Execute commands" type="fn">
                                    <param id="0" name="Commands">fnRedrawAllStreams</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A minion generator that spawns minions following a unique path" title="Generator">
            <sub-events>
                <comment>Spawn minions from each of the generators</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Flow</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">isActive</param>
                        </condition>
                        <condition disabled="1" id="-7" name="Compare instance variable" type="Flow">
                            <param id="0" name="Instance variable">minionTotal</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">spawnMinions</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">time - generatorSpawnRate</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">flow.lastSpawnTime</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="HUD">
                            <param id="0" name="Instance variable">isSpawning</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Minion</param>
                            <param id="1" name="Layer">minionLayer</param>
                            <param id="2" name="X">flow.ImagePointX( 1 )</param>
                            <param id="3" name="Y">flow.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">streamOffset</param>
                            <param id="1" name="Value">random( -1 * minionStreamOffsetRange, minionStreamOffsetRange )</param>
                        </action>
                        <action id="-3" name="Set position" type="Minion">
                            <param id="0" name="X">flow.ImagePointX(1)</param>
                            <param id="1" name="Y">flow.Y + minion.streamOffset</param>
                        </action>
                        <action id="4" name="Set animation" type="Minion">
                            <param id="0" name="Animation">flow.sourceColor</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action behavior="CustomMovement" id="2" name="Set speed" type="Minion">
                            <param id="0" name="Which">0</param>
                            <param id="1" name="Speed">minionDefaultSpeed</param>
                        </action>
                        <action id="-24" name="Move to top" type="Minion" />
                        <action id="3" name="Start" type="Minion">
                            <param id="0" name="From">0</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-8" name="Set angle" type="Minion">
                            <param id="0" name="Angle">0</param>
                        </action>
                        <action behavior="CustomMovement" id="6" name="Set angle of motion" type="Minion">
                            <param id="0" name="Angle">flow.Angle</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">flow.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">maxHealth</param>
                            <param id="1" name="Value">minionDefaultHealth</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">minion.maxHealth</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">currentGridX</param>
                            <param id="1" name="Value">flow.X</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">currentGridY</param>
                            <param id="1" name="Value">flow.Y</param>
                        </action>
                        <action id="-12" name="Subtract from" type="Flow">
                            <param id="0" name="Instance variable">minionTotal</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-10" name="Set value" type="Flow">
                            <param id="0" name="Instance variable">lastSpawnTime</param>
                            <param id="1" name="Value">time</param>
                        </action>
                        <action disabled="1" id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnAttachHealthBar &amp; &quot;,&quot; &amp; minion.UID &amp; &quot;,&quot; &amp; minion.X &amp; &quot;,&quot; &amp; minion.Y</param>
                        </action>
                        <action disabled="1" id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnUpdateHealthBar &amp; &quot;,&quot; &amp; flow.UID &amp; &quot;,&quot; &amp; flow.minionTotal &amp; &quot;,&quot; &amp; generatorMaxMinions</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="Minions spawn from bases and follow a path drawn by the player" title="Minion">
            <sub-events>
                <comment>(uid) destroys the specified minion</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnDestroyMinion</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Minion</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Minion">
                                    <param id="0" name="Unique ID">fn.Param( 0 )</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">HealthBar</param>
                                        </condition>
                                        <condition id="-7" name="Compare instance variable" type="HealthBar">
                                            <param id="0" name="Instance variable">sourceUID</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">minion.UID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Destroy" type="HealthBar" />
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">HealthBorder</param>
                                        </condition>
                                        <condition id="-7" name="Compare instance variable" type="HealthBorder">
                                            <param id="0" name="Instance variable">sourceUID</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">minion.UID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Destroy" type="HealthBorder" />
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-9" name="Destroy" type="Minion" />
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Destroys all minions</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnDestroyAllMinions</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">HealthBar</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="HealthBar" />
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">HealthBorder</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="HealthBorder" />
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Minion</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Minion" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Monitor the minion as it travels on the stream</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="1" name="Is overlapping another object" type="Minion">
                            <param id="0" name="Object">Stream</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable comment="the new grid x value" name="gridX" type="number">0</variable>
                        <variable comment="the new grid y value" name="gridY" type="number">0</variable>
                        <variable comment="uid of the grid object at the clicked location" name="objectAtLocationUID" type="number">0</variable>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">gridX</param>
                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, minion.X )</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">gridY</param>
                                    <param id="1" name="Value">fn.Call( fnSnapCoordinate, minion.Y )</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">objectAtLocationUID</param>
                                    <param id="1" name="Value">fn.Call( fnGridObjectAt, gridX, gridY )</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>The minion has move to a new grid square</comment>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">distance( minion.currentGridX, minion.currentGridY, gridX, gridY )</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" type="Minion">
                                    <param id="0" name="Instance variable">currentGridX</param>
                                    <param id="1" name="Value">gridX</param>
                                </action>
                                <action id="-10" name="Set value" type="Minion">
                                    <param id="0" name="Instance variable">currentGridY</param>
                                    <param id="1" name="Value">gridY</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Damage a minion if the minion is not on a same color stream</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">stream.AnimationName</param>
                                            <param id="1" name="Comparison">1</param>
                                            <param id="2" name="Second value">minion.AnimationName</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-12" name="Subtract from" type="Minion">
                                            <param id="0" name="Instance variable">health</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Minion">
                                            <param id="0" name="Instance variable">lastDamageTime</param>
                                            <param id="1" name="Value">time</param>
                                        </action>
                                        <action id="7" name="Execute commands" type="fn">
                                            <param id="0" name="Commands">fnUpdateHealthBar &amp; &quot;,&quot; &amp; Minion.UID &amp; &quot;,&quot; &amp; Minion.health &amp; &quot;,&quot; &amp; Minion.maxHealth</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>If there is a flow object at the new grid location determine how the minion is affected by it</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-14" name="Compare variable" type="System">
                                            <param id="0" name="Variable">objectAtLocationUID</param>
                                            <param id="1" name="Comparison">1</param>
                                            <param id="2" name="Value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <comment>Painters change the color of the minion</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Painter">
                                                    <param id="0" name="Unique ID">objectAtLocationUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="4" name="Set animation" type="Minion">
                                                    <param id="0" name="Animation">painter.AnimationName</param>
                                                    <param id="1" name="From">1</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>Redirectors change the direction of a minion</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Redirect">
                                                    <param id="0" name="Unique ID">objectAtLocationUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-16" name="Wait" type="System">
                                                    <param id="0" name="Seconds">0.25</param>
                                                </action>
                                                <action id="-3" name="Set position" type="Minion">
                                                    <param id="0" name="X">redirect.X + minion.streamOffset</param>
                                                    <param id="1" name="Y">redirect.Y + minion.streamOffset</param>
                                                </action>
                                                <action behavior="CustomMovement" id="6" name="Set angle of motion" type="Minion">
                                                    <param id="0" name="Angle">redirect.Angle</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>Redirectors change the direction of a minion</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Prism">
                                                    <param id="0" name="Unique ID">objectAtLocationUID</param>
                                                </condition>
                                            </conditions>
                                            <actions />
                                            <sub-events>
                                                <comment>If the prism is active, send the minion along a random paths</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-7" name="Compare instance variable" type="Prism">
                                                            <param id="0" name="Instance variable">streamOutCount</param>
                                                            <param id="1" name="Comparison">4</param>
                                                            <param id="2" name="Value">1</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-16" name="Wait" type="System">
                                                            <param id="0" name="Seconds">0.25</param>
                                                        </action>
                                                        <action id="-3" name="Set position" type="Minion">
                                                            <param id="0" name="X">prism.X + minion.streamOffset</param>
                                                            <param id="1" name="Y">prism.Y + minion.streamOffset</param>
                                                        </action>
                                                        <action behavior="CustomMovement" id="6" name="Set angle of motion" type="Minion">
                                                            <param id="0" name="Angle">int( tokenat( prismStreamAngles, prism.activeStream, &quot;#&quot;) )</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Prism">
                                                            <param id="0" name="Instance variable">activeStream</param>
                                                            <param id="1" name="Value">prism.activeStream + 1 &lt; prism.streamOutCount ? prism.activeStream + 1 : 0</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>If the prism is not active, destroy the minion</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-7" name="Compare instance variable" type="Prism">
                                                            <param id="0" name="Instance variable">streamOutCount</param>
                                                            <param id="1" name="Comparison">3</param>
                                                            <param id="2" name="Value">1</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>Exits save minions if activated</comment>
                                        <event-block collapsed="1">
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Exit">
                                                    <param id="0" name="Unique ID">objectAtLocationUID</param>
                                                </condition>
                                            </conditions>
                                            <actions />
                                            <sub-events>
                                                <comment>If the exit is unlocked, add a point to the score</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-8" name="Is boolean instance variable set" type="Exit">
                                                            <param id="0" name="Instance variable">isUnlocked</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-16" name="Wait" type="System">
                                                            <param id="0" name="Seconds">0.1</param>
                                                        </action>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                                                        </action>
                                                        <action id="-11" name="Add to" type="HUD">
                                                            <param id="0" name="Instance variable">minionsSaved</param>
                                                            <param id="1" name="Value">1</param>
                                                        </action>
                                                        <action id="0" name="Set text" type="HUDminionsSavedCount">
                                                            <param id="0" name="Text">hud.minionsSaved</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Destroy the minion if the exit is locked</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Exit">
                                                            <param id="0" name="Instance variable">isUnlocked</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="7" name="Execute commands" type="fn">
                                                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>Destroy the minion if it hits a barrier</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Barrier">
                                                    <param id="0" name="Unique ID">objectAtLocationUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="7" name="Execute commands" type="fn">
                                                    <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Destroy the minion if it reaches 0 health</comment>
                <event-block>
                    <conditions>
                        <condition id="-7" name="Compare instance variable" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Comparison">3</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy a minion if it somehow gets off the path</comment>
                <event-block>
                    <conditions>
                        <condition id="1" inverted="1" name="Is overlapping another object" type="Minion">
                            <param id="0" name="Object">Stream</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy a minion if it intersects a laser beam</comment>
                <event-block>
                    <conditions>
                        <condition id="1" name="Is overlapping another object" type="Minion">
                            <param id="0" name="Object">LaserBeam</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy a minion if it enters any of the following death states</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Minion">
                            <param id="0" name="Object">streamIntersect</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="7" name="Execute commands" type="fn">
                            <param id="0" name="Commands">fnDestroyMinion &amp; &quot;,&quot; &amp; minion.UID</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A health bar that shows the current health of an object" title="Health Bar">
            <sub-events>
                <comment>Update the minion health bar</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnUpdateHealthBar</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">HealthBar</param>
                                </condition>
                                <condition id="-7" name="Compare instance variable" type="HealthBar">
                                    <param id="0" name="Instance variable">sourceUID</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">fn.Param(0)</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">round( (HealthBar.Width/HealthBar.startingWidth) * 100 )</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">round( (fn.Param(1)/fn.Param(2)) * 100 )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-5" name="Set width" type="HealthBar">
                                    <param id="0" name="Width">HealthBar.startingWidth * ( fn.Param(1)/ fn.Param(2) )</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>(uid,x,y,width,height,border) attaches a health bar to the object given</comment>
                <event-block collapsed="1">
                    <conditions>
                        <condition id="0" name="On function" type="fn">
                            <param id="0" name="Name">fnAttachHealthBar</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">HealthBorder</param>
                            <param id="1" name="Layer">minionLayer</param>
                            <param id="2" name="X">-100</param>
                            <param id="3" name="Y">-100</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Minion</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Minion">
                                    <param id="0" name="Unique ID">fn.Param(0)</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Set position" type="HealthBorder">
                                    <param id="0" name="X">minion.ImagePointX( minionHealthBarAnchor )</param>
                                    <param id="1" name="Y">minion.ImagePointY( minionHealthBarAnchor ) - minionHealthBarHeight</param>
                                </action>
                                <action id="-7" name="Set size" type="HealthBorder">
                                    <param id="0" name="Width">minionHealthBarWidth</param>
                                    <param id="1" name="Height">minionHealthBarHeight</param>
                                </action>
                                <action id="-10" name="Set value" type="HealthBorder">
                                    <param id="0" name="Instance variable">sourceUID</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-8" name="Set angle" type="HealthBorder">
                                    <param id="0" name="Angle">minion.Angle</param>
                                </action>
                                <action behavior="Pin" id="0" name="Pin to object" type="HealthBorder">
                                    <param id="0" name="Pin to">Minion</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Generator</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Generator">
                                    <param id="0" name="Unique ID">fn.Param(0)</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Set position" type="HealthBorder">
                                    <param id="0" name="X">generator.ImagePointX( generatorHealthBarAnchor )</param>
                                    <param id="1" name="Y">generator.ImagePointY( generatorHealthBarAnchor )</param>
                                </action>
                                <action id="-7" name="Set size" type="HealthBorder">
                                    <param id="0" name="Width">generatorHealthBarWidth</param>
                                    <param id="1" name="Height">generatorHealthBarHeight</param>
                                </action>
                                <action id="-10" name="Set value" type="HealthBorder">
                                    <param id="0" name="Instance variable">sourceUID</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-8" name="Set angle" type="HealthBorder">
                                    <param id="0" name="Angle">generatorHealthBarAngle</param>
                                </action>
                                <action behavior="Pin" id="0" name="Pin to object" type="HealthBorder">
                                    <param id="0" name="Pin to">Flow</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">HealthBar</param>
                                    <param id="1" name="Layer">minionLayer</param>
                                    <param id="2" name="X">HealthBorder.X + healthBarBorder</param>
                                    <param id="3" name="Y">HealthBorder.Y + healthBarBorder</param>
                                </action>
                                <action id="-24" name="Move to top" type="HealthBar" />
                                <action behavior="Pin" id="0" name="Pin to object" type="HealthBar">
                                    <param id="0" name="Pin to">HealthBorder</param>
                                </action>
                                <action id="-10" name="Set value" type="HealthBar">
                                    <param id="0" name="Instance variable">startingWidth</param>
                                    <param id="1" name="Value">HealthBorder.Width - healthBarBorder * 2</param>
                                </action>
                                <action id="-7" name="Set size" type="HealthBar">
                                    <param id="0" name="Width">HealthBar.startingWidth</param>
                                    <param id="1" name="Height">healthborder.Height - healthBarBorder * 2</param>
                                </action>
                                <action id="-10" name="Set value" type="HealthBar">
                                    <param id="0" name="Instance variable">sourceUID</param>
                                    <param id="1" name="Value">fn.Param(0)</param>
                                </action>
                                <action id="-8" name="Set angle" type="HealthBar">
                                    <param id="0" name="Angle">HealthBorder.Angle</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="The camera that watches overhead" title="Camera">
            <sub-events>
                <comment>Zoom the camera into the spot that was clicked</comment>
                <event-block>
                    <conditions>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">192 (`)</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Set position" type="ZoomPoint">
                            <param id="0" name="X">mouse.X</param>
                            <param id="1" name="Y">mouse.Y</param>
                        </action>
                        <action id="-13" name="Set boolean" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-24" name="Move to top" type="ZoomPoint" />
                        <action id="-15" name="Set visible" type="ZoomPoint">
                            <param id="0" name="Visibility">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Zoom in, gradually scroll camera to the target location</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">2</param>
                            <param id="2" name="Second value">zoomMaxScale</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-20" name="Set layout scale" type="System">
                            <param id="0" name="Scale">LayoutScale + zoomScaleChange</param>
                        </action>
                        <action id="-7" name="Scroll to position" type="System">
                            <param id="0" name="X">scrollx + (( ZoomPoint.X - ( WindowWidth / 2 ))  / ( (zoomMaxScale-zoomMinScale) / zoomScaleChange ))</param>
                            <param id="1" name="Y">scrolly + (( ZoomPoint.Y - ( WindowHeight / 2 ))  /( (zoomMaxScale-zoomMinScale) / zoomScaleChange ))</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">zoomScaleDelay</param>
                        </action>
                        <action id="-13" name="Set time scale" type="System">
                            <param id="0" name="Time scale">timescale - ( zoomSlowRate / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange))</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Once max zoom has been reached, wait, then zoom out</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">zoomMaxScale</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">zoomResetDelay</param>
                        </action>
                        <action id="-13" name="Set boolean" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="-15" name="Set visible" type="ZoomPoint">
                            <param id="0" name="Visibility">0</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Zoom out, gradually scroll camera back to center</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">zoomMinScale</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-20" name="Set layout scale" type="System">
                            <param id="0" name="Scale">LayoutScale - zoomScaleChange</param>
                        </action>
                        <action id="-7" name="Scroll to position" type="System">
                            <param id="0" name="X">scrollx + ((( WindowWidth / 2 ) - ZoomPoint.X ) / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange ))</param>
                            <param id="1" name="Y">scrolly + ((( WindowHeight / 2 )  - ZoomPoint.Y ) / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange ))</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">zoomScaleDelay</param>
                        </action>
                        <action id="-13" name="Set time scale" type="System">
                            <param id="0" name="Time scale">timescale + ( zoomSlowRate / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange))</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <comment>Debug Events</comment>
        <event-group collapsed="1" description="Various debug methods" title="Debug">
            <sub-events>
                <variable comment="The rate (in seconds) to refresh debug information" name="debugPollRate" type="number">0.1</variable>
                <event-block>
                    <conditions>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">debugPollRate</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Set text" type="txtDebug">
                            <param id="0" name="Text">objectcount &amp; &quot; sprites @ &quot; &amp; fps &amp; &quot; fps&quot; &amp; &quot;(&quot; &amp; renderer &amp; &quot;)&quot; &amp; newline</param>
                        </action>
                        <action id="1" name="Append text" type="txtDebug">
                            <param id="0" name="Text">debugMsg &amp; newline</param>
                        </action>
                        <action id="0" name="Set text" type="txtObjectCounts">
                            <param id="0" name="Text">&quot;Flows:&quot; &amp; flow.count &amp; &quot; Streams:&quot; &amp; stream.count &amp; &quot; Generators:&quot; &amp; generator.count &amp; &quot; Minions:&quot; &amp; minion.count</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
    </events>
</c2eventsheet>
