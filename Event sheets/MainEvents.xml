<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>MainEvents</name>
    <events>
        <comment>Project: JesusTD</comment>
        <comment>Author: Brian Hebert</comment>
        <comment>File: Main event sheet</comment>
        <comment></comment>
        <comment>To Do:</comment>
        <comment>1. Smart targeting (by minion health / adjusted angle), Sticky targeting</comment>
        <comment>2. Status window updated with information on the currently selected object</comment>
        <comment>3. Snap newly drawn paths to a grid in order to lower the storage/sprite costs and make gameplay more predictable to design around</comment>
        <comment>4. Add hud menu above each generator to let you control it</comment>
        <comment>5. Have minions merge together whenever their paths cross, perhaps they can change color/size when this happens</comment>
        <comment></comment>
        <comment></comment>
        <variable comment="Anything that needs to be appended to the debug portion of the screen" name="debugMsg" type="text"></variable>
        <include>Initialize</include>
        <comment>Game Object Events</comment>
        <event-group collapsed="1" description="The camera that watches overhead" title="Camera">
            <sub-events>
                <comment>Zoom the camera into the spot that was clicked</comment>
                <event-block>
                    <conditions>
                        <condition id="1" name="On any click" type="Mouse" />
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">87 (W)</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Set position" type="ZoomPoint">
                            <param id="0" name="X">mouse.X</param>
                            <param id="1" name="Y">mouse.Y</param>
                        </action>
                        <action id="-13" name="Set boolean" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-24" name="Move to top" type="ZoomPoint" />
                        <action id="-15" name="Set visible" type="ZoomPoint">
                            <param id="0" name="Visibility">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Zoom in, gradually scroll camera to the target location</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">2</param>
                            <param id="2" name="Second value">zoomMaxScale</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-20" name="Set layout scale" type="System">
                            <param id="0" name="Scale">LayoutScale + zoomScaleChange</param>
                        </action>
                        <action id="-7" name="Scroll to position" type="System">
                            <param id="0" name="X">scrollx + (( ZoomPoint.X - ( WindowWidth / 2 ))  / ( (zoomMaxScale-zoomMinScale) / zoomScaleChange ))</param>
                            <param id="1" name="Y">scrolly + (( ZoomPoint.Y - ( WindowHeight / 2 ))  /( (zoomMaxScale-zoomMinScale) / zoomScaleChange ))</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">zoomScaleDelay</param>
                        </action>
                        <action id="-13" name="Set time scale" type="System">
                            <param id="0" name="Time scale">timescale - ( zoomSlowRate / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange))</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Once max zoom has been reached, wait, then zoom out</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">zoomMaxScale</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">zoomResetDelay</param>
                        </action>
                        <action id="-13" name="Set boolean" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="-15" name="Set visible" type="ZoomPoint">
                            <param id="0" name="Visibility">0</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Zoom out, gradually scroll camera back to center</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">zoomMinScale</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-20" name="Set layout scale" type="System">
                            <param id="0" name="Scale">LayoutScale - zoomScaleChange</param>
                        </action>
                        <action id="-7" name="Scroll to position" type="System">
                            <param id="0" name="X">scrollx + ((( WindowWidth / 2 ) - ZoomPoint.X ) / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange ))</param>
                            <param id="1" name="Y">scrolly + ((( WindowHeight / 2 )  - ZoomPoint.Y ) / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange ))</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">zoomScaleDelay</param>
                        </action>
                        <action id="-13" name="Set time scale" type="System">
                            <param id="0" name="Time scale">timescale + ( zoomSlowRate / (( zoomMaxScale-zoomMinScale ) / zoomScaleChange))</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="A grid that objects snap to" title="Grid" />
        <event-group description="A stream that flows out from a generator" title="Stream">
            <sub-events>
                <variable comment="The two colors of the minions that collided" name="color" type="text"></variable>
                <variable comment="how far is the flow object from the stream?" name="minDistanceFromStream" type="number">0</variable>
                <variable comment="the UID of the closest flow object" name="closestFlowUID" type="number">0</variable>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Stream</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Stream">
                            <param id="0" name="Instance variable">fullyConnected</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">debugMsg</param>
                            <param id="1" name="Value">debugMsg &amp; &quot;*********&quot; &amp; stream.sourceUID &amp; &quot;*********&quot;  &amp; newline</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">debugMsg</param>
                            <param id="1" name="Value">debugMsg &amp; stream.animationname &amp; newline</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Stream">
                            <param id="0" name="Instance variable">fullyConnected</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-5" name="Set width" type="Stream">
                            <param id="0" name="Width">max( WindowHeight, WindowWidth )</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">minDistanceFromStream</param>
                            <param id="1" name="Value">max( WindowHeight, WindowWidth )</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="1" name="Is overlapping another object" type="Stream">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">flow.UID</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">stream.sourceUID</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-11" name="For Each" type="System">
                                            <param id="0" name="Object">Flow</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">distance( stream.X, stream.Y, flow.X, flow.Y )</param>
                                                    <param id="1" name="Comparison">2</param>
                                                    <param id="2" name="Second value">minDistanceFromStream</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">debugMsg</param>
                                                    <param id="1" name="Value">debugMsg &amp; &quot;prev min: &quot; &amp; minDistanceFromStream</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">minDistanceFromStream</param>
                                                    <param id="1" name="Value">distance( stream.X, stream.Y, flow.X, flow.Y )</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">debugMsg</param>
                                                    <param id="1" name="Value">debugMsg &amp; &quot;cur min: &quot; &amp; minDistanceFromStream &amp; newline</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">closestFlowUID</param>
                                                    <param id="1" name="Value">flow.UID</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">closestFlowUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-5" name="Set width" type="Stream">
                                    <param id="0" name="Width">distance( stream.X, stream.Y, flow.X, flow.Y )</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">color</param>
                                    <param id="1" name="Value">stream.AnimationName</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">colorsConnected</param>
                                    <param id="1" name="Value">flow.colorsConnected &amp; &quot;#&quot; &amp; color</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-7" name="Compare instance variable" type="Flow">
                                            <param id="0" name="Instance variable">streamOutUID</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Create object" type="System">
                                            <param id="0" name="Object to create">Stream</param>
                                            <param id="1" name="Layer">defaultLayer</param>
                                            <param id="2" name="X">flow.X</param>
                                            <param id="3" name="Y">flow.Y</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Flow">
                                            <param id="0" name="Instance variable">streamOutUID</param>
                                            <param id="1" name="Value">stream.UID</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Stream">
                                            <param id="0" name="Instance variable">sourceUID</param>
                                            <param id="1" name="Value">flow.UID</param>
                                        </action>
                                        <action id="-8" name="Set angle" type="Stream">
                                            <param id="0" name="Angle">flow.Angle</param>
                                        </action>
                                        <action id="4" name="Set animation" type="Stream">
                                            <param id="0" name="Animation">color</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Figure out what color to set the outgoing stream to</comment>
                        <event-block collapsed="1">
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">stream.sourceUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">color</param>
                                    <param id="1" name="Value">&quot;&quot;</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;purple&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Value">&quot;purple&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;orange&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Value">&quot;orange&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;green&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Value">&quot;green&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;red&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Value">&quot;red&quot;</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">find( flow.colorsConnected, &quot;blue&quot; )</param>
                                                    <param id="1" name="Comparison">5</param>
                                                    <param id="2" name="Second value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">color</param>
                                                    <param id="1" name="Value">&quot;purple&quot;</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                                    <param id="1" name="Comparison">5</param>
                                                    <param id="2" name="Second value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">color</param>
                                                    <param id="1" name="Value">&quot;orange&quot;</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;blue&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                        <condition id="-14" name="Compare variable" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">&quot;&quot;</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Value">&quot;blue&quot;</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-8" name="Compare two values" type="System">
                                                    <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                                    <param id="1" name="Comparison">5</param>
                                                    <param id="2" name="Second value">0</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">color</param>
                                                    <param id="1" name="Value">&quot;green&quot;</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( flow.colorsConnected, &quot;yellow&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                        <condition id="-14" name="Compare variable" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">&quot;&quot;</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">color</param>
                                            <param id="1" name="Value">&quot;yellow&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="4" name="Set animation" type="Stream">
                                            <param id="0" name="Animation">color</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">debugMsg</param>
                                            <param id="1" name="Value">debugMsg &amp; flow.colorsConnected &amp; &quot;=&quot; &amp; color &amp; newline</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">debugMsg</param>
                                    <param id="1" name="Value">debugMsg &amp; &quot;*********DONE*********&quot;  &amp; newline</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="Flow objects direct minions around the map" title="Flow">
            <sub-events>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Flow">
                            <param id="0" name="Instance variable">updated</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">debugMsg</param>
                            <param id="1" name="Value">&quot;&quot;</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Stream</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Stream" />
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="Flow">
                                    <param id="0" name="Instance variable">updated</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">colorsConnected</param>
                                    <param id="1" name="Value">&quot;&quot;</param>
                                </action>
                                <action id="-10" name="Set value" type="Flow">
                                    <param id="0" name="Instance variable">streamOutUID</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-11" name="For Each" type="System">
                                    <param id="0" name="Object">Generator</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Generator">
                                    <param id="0" name="Instance variable">active</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Stream</param>
                                    <param id="1" name="Layer">defaultLayer</param>
                                    <param id="2" name="X">generator.ImagePointX( 1 )</param>
                                    <param id="3" name="Y">generator.Y</param>
                                </action>
                                <action id="4" name="Set animation" type="Stream">
                                    <param id="0" name="Animation">generator.color</param>
                                    <param id="1" name="From">1</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <variable comment="the new grid x value" name="gridX" type="number">0</variable>
                <variable comment="the new grid y value" name="gridY" type="number">0</variable>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">65 (A)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">gridX</param>
                            <param id="1" name="Value">floor( mouse.X / gridScale ) * gridScale + ( gridScale / 2 )</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">gridY</param>
                            <param id="1" name="Value">floor( mouse.Y / gridScale ) * gridScale + ( gridScale / 2 )</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Only place if there isn&apos;t a flow object in that location</comment>
                        <event-block>
                            <conditions>
                                <condition id="-15" name="Pick nearest/furthest" type="Flow">
                                    <param id="0" name="Which">0</param>
                                    <param id="1" name="X">gridX</param>
                                    <param id="2" name="Y">gridY</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">debugMsg</param>
                                    <param id="1" name="Value">debugMsg &amp; &quot;flow(&quot; &amp; flow.X &amp; &quot;,&quot; &amp; flow.Y &amp; &quot;) grid(&quot; &amp; gridX &amp; &quot;,&quot; &amp; gridY &amp; &quot;)&quot; &amp; newline</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">distance( flow.X, flow.Y, gridX, gridY )</param>
                                            <param id="1" name="Comparison">4</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Create object" type="System">
                                            <param id="0" name="Object to create">Redirect</param>
                                            <param id="1" name="Layer">activeLayer</param>
                                            <param id="2" name="X">gridX</param>
                                            <param id="3" name="Y">gridY</param>
                                        </action>
                                        <action id="-13" name="Set boolean" type="Flow">
                                            <param id="0" name="Instance variable">updated</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">2</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">Redirect</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-18" name="Rotate clockwise" type="Redirect">
                            <param id="0" name="Degrees">90</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Flow">
                            <param id="0" name="Instance variable">updated</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="0" name="On key pressed" type="Keyboard">
                            <param id="0" name="Key">46 (Delete)</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="HUDobject">
                            <param id="0" name="Unique ID">hud.selectionUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="HUDobject" />
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">selectionUID</param>
                            <param id="1" name="Value">0</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Flow</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="Flow">
                                    <param id="0" name="Instance variable">updated</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="A heads up display that holds menu options and game inventory" title="HUD">
            <sub-events>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="HUDobject">
                            <param id="0" name="Instance variable">updateActiveHUDObject</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Set text" type="currentlySelected">
                            <param id="0" name="Text">&quot;Object &quot; &amp; HUDobject.UID &amp; &quot; selected&quot;</param>
                        </action>
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">selectionUID</param>
                            <param id="1" name="Value">HUDobject.UID</param>
                        </action>
                        <action id="-3" name="Set position" type="selectionBox">
                            <param id="0" name="X">HUDobject.X</param>
                            <param id="1" name="Y">HUDobject.Y</param>
                        </action>
                        <action id="-7" name="Set size" type="selectionBox">
                            <param id="0" name="Width">gridScale</param>
                            <param id="1" name="Height">gridScale</param>
                        </action>
                        <action id="-15" name="Set visible" type="selectionBox">
                            <param id="0" name="Visibility">1</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">HUDobject</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="HUDobject">
                                    <param id="0" name="Instance variable">updateActiveHUDObject</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Generator">
                                    <param id="0" name="Unique ID">HUD.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="0" name="Set text" type="attributes">
                                    <param id="0" name="Text">&quot;Active: &quot; &amp; generator.active &amp; newline &amp; &quot;Color:&quot; &amp; generator.color</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Flow">
                                    <param id="0" name="Unique ID">HUD.selectionUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="0" name="Set text" type="attributes">
                                    <param id="0" name="Text">&quot;Color:&quot; &amp; newline &amp; flow.colorsConnected</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="7" inverted="1" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">HUDobject</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="HUD">
                            <param id="0" name="Instance variable">selectionUID</param>
                            <param id="1" name="Value">0</param>
                        </action>
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="-7" name="Compare instance variable" type="HUD">
                            <param id="0" name="Instance variable">selectionUID</param>
                            <param id="1" name="Comparison">0</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-15" name="Set visible" type="selectionBox">
                            <param id="0" name="Visibility">0</param>
                        </action>
                        <action id="0" name="Set text" type="currentlySelected">
                            <param id="0" name="Text">&quot;&quot;</param>
                        </action>
                        <action id="0" name="Set text" type="attributes">
                            <param id="0" name="Text">&quot;&quot;</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="A minion generator that spawns minions following a unique path" title="Generator">
            <sub-events>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="GeneratorLabel" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="GeneratorLabel" />
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="gridBlock" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="gridBlock" />
                    </actions>
                </event-block>
                <comment>Create a new generator</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">81 (Q)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Generator</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">( floor( mouse.X / gridScale ) * gridScale ) + gridScale / 2</param>
                            <param id="3" name="Y">( floor( mouse.Y / gridScale ) * gridScale ) + gridScale / 2</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">color</param>
                            <param id="1" name="Value">tokenat(minionDefaultTypes, random( 0, tokencount(minionDefaultTypes, &quot;#&quot;)), &quot;#&quot;)</param>
                        </action>
                        <action id="-7" name="Set size" type="Generator">
                            <param id="0" name="Width">31</param>
                            <param id="1" name="Height">25</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">GeneratorLabel</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">generator.X</param>
                            <param id="3" name="Y">generator.Y</param>
                        </action>
                        <action id="4" name="Set animation" type="GeneratorLabel">
                            <param id="0" name="Animation">&quot;disabled&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="GeneratorLabel">
                            <param id="0" name="Pin to">Generator</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">labelUID</param>
                            <param id="1" name="Value">GeneratorLabel.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">spawnRate</param>
                            <param id="1" name="Value">generatorSpawnRate</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Change the state of the generator (enable/disable it)</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">2</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">Generator</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="HUDobject">
                            <param id="0" name="Unique ID">generator.UID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="HUDobject">
                            <param id="0" name="Instance variable">updateActiveHUDObject</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Grab the active label on the generator</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="GeneratorLabel">
                                    <param id="0" name="Unique ID">generator.labelUID</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <comment>Activate the generator</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Generator">
                                            <param id="0" name="Instance variable">active</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Generator">
                                            <param id="0" name="Animation">&quot;Activate&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="4" name="Set animation" type="GeneratorLabel">
                                            <param id="0" name="Animation">generator.color</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Shut the generator down</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Is boolean instance variable set" type="Generator">
                                            <param id="0" name="Instance variable">active</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-13" name="Set boolean" type="Generator">
                                            <param id="0" name="Instance variable">active</param>
                                            <param id="1" name="Value">0</param>
                                        </action>
                                        <action id="-13" name="Set boolean" type="Flow">
                                            <param id="0" name="Instance variable">updated</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                        <action id="4" name="Set animation" type="GeneratorLabel">
                                            <param id="0" name="Animation">&quot;disabled&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="4" name="Set animation" type="Generator">
                                            <param id="0" name="Animation">&quot;SpawnClose&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Switch the active path to the generator that&apos;s been clicked on</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">HUDobject</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="HUDobject">
                            <param id="0" name="Instance variable">updateActiveHUDObject</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Once the generator has fully activated, switch the animation show minions spawning</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="Generator">
                            <param id="0" name="Animation">&quot;Activate&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="4" name="Set animation" type="Generator">
                            <param id="0" name="Animation">&quot;Spawning&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Activate the generator once the spawn point has fully opened</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="Generator">
                            <param id="0" name="Animation">&quot;Spawning&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Generator">
                            <param id="0" name="Instance variable">active</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Flow">
                            <param id="0" name="Instance variable">updated</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Once the spawn point has closed, draw it into the generator</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="Generator">
                            <param id="0" name="Animation">&quot;SpawnClose&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="4" name="Set animation" type="Generator">
                            <param id="0" name="Animation">&quot;Deactivate&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Spawn minions from each of the generators</comment>
                <event-block disabled="1">
                    <conditions>
                        <condition disabled="1" id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Generator</param>
                        </condition>
                        <condition disabled="1" id="-8" name="Is boolean instance variable set" type="Generator">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                        <condition disabled="1" id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">time - generator.spawnRate</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">generator.lastSpawn</param>
                        </condition>
                        <condition disabled="1" id="2" inverted="1" name="Is playing" type="Generator">
                            <param id="0" name="Animation">&quot;Activate&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">lastSpawn</param>
                            <param id="1" name="Value">time</param>
                        </action>
                        <action disabled="1" id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Minion</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">generator.ImagePointX( 1 )</param>
                            <param id="3" name="Y">generator.Y</param>
                        </action>
                        <action disabled="1" id="4" name="Set animation" type="Minion">
                            <param id="0" name="Animation">generator.color</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action behavior="CustomMovement" disabled="1" id="2" name="Set speed" type="Minion">
                            <param id="0" name="Which">0</param>
                            <param id="1" name="Speed">minionDefaultSpeed</param>
                        </action>
                        <action disabled="1" id="-24" name="Move to top" type="Minion" />
                        <action disabled="1" id="3" name="Start" type="Minion">
                            <param id="0" name="From">0</param>
                        </action>
                        <action disabled="1" id="-8" name="Set angle" type="Minion">
                            <param id="0" name="Angle">0</param>
                        </action>
                        <action behavior="CustomMovement" disabled="1" id="6" name="Set angle of motion" type="Minion">
                            <param id="0" name="Angle">Minion.Angle</param>
                        </action>
                        <action disabled="1" id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action disabled="1" id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">generator.UID</param>
                        </action>
                        <action disabled="1" id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">maxHealth</param>
                            <param id="1" name="Value">minionDefaultHealth</param>
                        </action>
                        <action disabled="1" id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">minion.maxHealth</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="Minions spawn from bases and follow a path drawn by the player" title="Minion">
            <sub-events>
                <comment>Fade the minion trail out over time</comment>
                <event-block>
                    <conditions>
                        <condition id="-10" name="Compare opacity" type="MinionTrail">
                            <param id="0" name="Comparison">4</param>
                            <param id="1" name="Opacity">0</param>
                        </condition>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">minionTrailDecayRate</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="MinionTrail">
                            <param id="0" name="Opacity">MinionTrail.Opacity - 10</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy the minion trail node as soon as it fades out</comment>
                <event-block>
                    <conditions>
                        <condition id="-10" name="Compare opacity" type="MinionTrail">
                            <param id="0" name="Comparison">3</param>
                            <param id="1" name="Opacity">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="MinionTrail" />
                    </actions>
                </event-block>
                <comment>Destroy the minion if it reaches 0 health</comment>
                <event-block>
                    <conditions>
                        <condition id="-7" name="Compare instance variable" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Comparison">3</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="Minion" />
                    </actions>
                </event-block>
                <comment>Update the minion health bar</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">updateHealthBar</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">updateHealthBar</param>
                            <param id="1" name="Value">0</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="HealthBar">
                                    <param id="0" name="Unique ID">minion.healthBarUID</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">round( (healthbar.Width/healthbar.startingWidth) * 100 )</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">round( (minion.health/Minion.maxHealth) * 100 )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-5" name="Set width" type="HealthBar">
                                    <param id="0" name="Width">healthbar.startingWidth * ( minion.health/ minion.maxHealth )</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Minion">
                            <param id="0" name="Object">flowAnchor</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Redirect">
                            <param id="0" name="Unique ID">flowAnchor.baseUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-4" name="Set position to another object" type="Minion">
                            <param id="0" name="Object">Redirect</param>
                            <param id="1" name="Image point (optional)">0</param>
                        </action>
                        <action behavior="CustomMovement" id="6" name="Set angle of motion" type="Minion">
                            <param id="0" name="Angle">redirect.Angle</param>
                        </action>
                    </actions>
                </event-block>
                <variable comment="The two colors of the minions that collided" name="colorCombo" type="text"></variable>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Minion">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-13" name="Pick nth instance" type="System">
                                    <param id="0" name="Object">Minion</param>
                                    <param id="1" name="Instance">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">colorCombo</param>
                                    <param id="1" name="Value">minion.AnimationName</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-13" name="Pick nth instance" type="System">
                                    <param id="0" name="Object">Minion</param>
                                    <param id="1" name="Instance">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">colorCombo</param>
                                    <param id="1" name="Value">colorCombo &amp; &quot;#&quot; &amp; minion.AnimationName</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">tokenat( colorCombo, 0, &quot;#&quot; )</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">tokenat( colorCombo, 1, &quot;#&quot; )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Minion" />
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">find( colorCombo, &quot;red&quot; )</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( colorCombo, &quot;blue&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">colorCombo</param>
                                            <param id="1" name="Value">&quot;purple&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">find( colorCombo, &quot;yellow&quot; )</param>
                                            <param id="1" name="Comparison">5</param>
                                            <param id="2" name="Second value">0</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Set value" type="System">
                                            <param id="0" name="Variable">colorCombo</param>
                                            <param id="1" name="Value">&quot;orange&quot;</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">find( colorCombo, &quot;blue&quot; )</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">find( colorCombo, &quot;yellow&quot; )</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">colorCombo</param>
                                    <param id="1" name="Value">&quot;green&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">find(colorCombo, &quot;#&quot;)</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Second value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">colorCombo</param>
                                    <param id="1" name="Value">&quot;grey&quot;</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-13" name="Pick nth instance" type="System">
                                    <param id="0" name="Object">Minion</param>
                                    <param id="1" name="Instance">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="4" name="Set animation" type="Minion">
                                    <param id="0" name="Animation">colorCombo</param>
                                    <param id="1" name="From">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-13" name="Pick nth instance" type="System">
                                    <param id="0" name="Object">Minion</param>
                                    <param id="1" name="Instance">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Minion" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A health bar that shows the current health of an object" title="Health Bar">
            <sub-events>
                <comment>Attach a health bar to a minion if it doesn&apos;t already have one</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">healthbarAttached</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">HealthBorder</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">minion.X</param>
                            <param id="3" name="Y">minion.Y -  (minion.Height / 2 ) - healthBarHeight - healthBarBorder * 2</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="HealthBorder">
                            <param id="0" name="Pin to">Minion</param>
                        </action>
                        <action id="-7" name="Set size" type="HealthBorder">
                            <param id="0" name="Width">healthBarWidth</param>
                            <param id="1" name="Height">healthBarHeight</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">HealthBar</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">HealthBorder.ImagePointX(1) + healthBarBorder</param>
                            <param id="3" name="Y">HealthBorder.ImagePointY(1) + healthBarBorder</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="HealthBar">
                            <param id="0" name="Pin to">HealthBorder</param>
                        </action>
                        <action id="-10" name="Set value" type="HealthBar">
                            <param id="0" name="Instance variable">startingWidth</param>
                            <param id="1" name="Value">HealthBorder.Width - healthBarBorder * 2</param>
                        </action>
                        <action id="-7" name="Set size" type="HealthBar">
                            <param id="0" name="Width">HealthBar.startingWidth</param>
                            <param id="1" name="Height">healthBarHeight - healthBarBorder * 2</param>
                        </action>
                        <action id="-8" name="Set angle" type="HealthBorder">
                            <param id="0" name="Angle">minion.Angle</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">healthBarUID</param>
                            <param id="1" name="Value">healthbar.UID</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">healthbarAttached</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy the health bar border if the minion it&apos;s attached to is destroyed</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="HealthBorder" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="HealthBorder" />
                    </actions>
                </event-block>
                <comment>Destroy the health bar if the border it&apos;s attached to is destroyed</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="HealthBar" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="HealthBar" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A cannon that fires projectiles" title="Cannon">
            <sub-events>
                <comment>Fire the cannon with a defined ammo at a specific fire rate</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Cannon</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>If the cannon has been created, but not fully setup, create the additional components and setup all of the initial variables.</comment>
                        <event-block>
                            <conditions>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Cannon">
                                    <param id="0" name="Instance variable">fullyDeployed</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">RangeFinder</param>
                                    <param id="1" name="Layer">defaultLayer</param>
                                    <param id="2" name="X">cannon.X</param>
                                    <param id="3" name="Y">cannon.Y</param>
                                </action>
                                <action id="-25" name="Move to bottom" type="RangeFinder" />
                                <action id="-10" name="Set value" type="RangeFinder">
                                    <param id="0" name="Instance variable">baseUID</param>
                                    <param id="1" name="Value">cannon.baseuid</param>
                                </action>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">TargetLeadBar</param>
                                    <param id="1" name="Layer">defaultLayer</param>
                                    <param id="2" name="X">Cannon.ImagePointX(1)</param>
                                    <param id="3" name="Y">Cannon.ImagePointY(1)</param>
                                </action>
                                <action id="-15" name="Set visible" type="TargetLeadBar">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-10" name="Set value" type="TargetLeadBar">
                                    <param id="0" name="Instance variable">baseUID</param>
                                    <param id="1" name="Value">cannon.baseuid</param>
                                </action>
                                <action id="-16" name="Set opacity" type="TargetLeadBar">
                                    <param id="0" name="Opacity">0</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Create a line from the cannon out to it&apos;s current target</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">cannonShowTargetLead</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">1</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Create object" type="System">
                                            <param id="0" name="Object to create">distanceToTarget</param>
                                            <param id="1" name="Layer">defaultLayer</param>
                                            <param id="2" name="X">cannon.X</param>
                                            <param id="3" name="Y">cannon.Y</param>
                                        </action>
                                        <action id="-15" name="Set visible" type="distanceToTarget">
                                            <param id="0" name="Visibility">0</param>
                                        </action>
                                        <action id="-10" name="Set value" type="TargetLeadBar">
                                            <param id="0" name="Instance variable">labelUID</param>
                                            <param id="1" name="Value">distanceToTarget.UID</param>
                                        </action>
                                        <action id="-16" name="Set opacity" type="TargetLeadBar">
                                            <param id="0" name="Opacity">100</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Setup the rocket ammo</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                            <param id="0" name="Instance variable">activeAmmo</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">rocketAmmoType</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Cannon">
                                            <param id="0" name="Animation">&quot;Rocket&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">fireRate</param>
                                            <param id="1" name="Value">rocketDefaultFireRate</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMax</param>
                                            <param id="1" name="Value">rocketTargetRangeMax</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMin</param>
                                            <param id="1" name="Value">rocketTargetRangeMin</param>
                                        </action>
                                        <action id="4" name="Set animation" type="RangeFinder">
                                            <param id="0" name="Animation">&quot;Rocket&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Setup the beam ammo</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                            <param id="0" name="Instance variable">activeAmmo</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">beamAmmoType</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Cannon">
                                            <param id="0" name="Animation">&quot;Beam&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">fireRate</param>
                                            <param id="1" name="Value">beamDefaultFireRate</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMax</param>
                                            <param id="1" name="Value">beamTargetRangeMax</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMin</param>
                                            <param id="1" name="Value">beamTargetRangeMin</param>
                                        </action>
                                        <action id="4" name="Set animation" type="RangeFinder">
                                            <param id="0" name="Animation">&quot;beam&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Pin the cannon and range finder to a turret (if that is the base)</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">TurretBase</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="TurretBase">
                                            <param id="0" name="Unique ID">cannon.baseUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action behavior="Pin" id="0" name="Pin to object" type="Cannon">
                                            <param id="0" name="Pin to">TurretBase</param>
                                        </action>
                                        <action behavior="Pin" id="0" name="Pin to object" type="RangeFinder">
                                            <param id="0" name="Pin to">TurretBase</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Finish up and mark the cannon as fully deployed</comment>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-7" name="Set size" type="RangeFinder">
                                            <param id="0" name="Width">Cannon.targetRangeMax * 2</param>
                                            <param id="1" name="Height">Cannon.targetRangeMax * 2</param>
                                        </action>
                                        <action id="-13" name="Set boolean" type="Cannon">
                                            <param id="0" name="Instance variable">fullyDeployed</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>See if there are any minions to target</comment>
                        <variable comment="the distance from the turret to the nearest minion" name="distanceToMinion" type="number">0</variable>
                        <event-block>
                            <conditions>
                                <condition id="-15" name="Pick nearest/furthest" type="Minion">
                                    <param id="0" name="Which">0</param>
                                    <param id="1" name="X">Cannon.X</param>
                                    <param id="2" name="Y">Cannon.Y</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Minion">
                                    <param id="0" name="Instance variable">active</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">distanceToMinion</param>
                                    <param id="1" name="Value">distance( cannon.X, cannon.Y, Minion.X, Minion.Y)</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Minion is close enough to target</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">clamp(distanceToMinion, cannon.targetRangeMin, cannon.targetRangeMax)</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">distanceToMinion</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <comment>Check line of site</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="TargetLeadBar">
                                                    <param id="0" name="Instance variable">baseUID</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">cannon.baseUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-15" name="Set visible" type="TargetLeadBar">
                                                    <param id="0" name="Visibility">1</param>
                                                </action>
                                                <action id="-3" name="Set position" type="TargetLeadBar">
                                                    <param id="0" name="X">Cannon.ImagePointX(1)</param>
                                                    <param id="1" name="Y">Cannon.ImagePointY(1)</param>
                                                </action>
                                                <action id="-22" name="Set angle toward position" type="TargetLeadBar">
                                                    <param id="0" name="X">Minion.X</param>
                                                    <param id="1" name="Y">Minion.Y</param>
                                                </action>
                                                <action id="-7" name="Set size" type="TargetLeadBar">
                                                    <param id="0" name="Width">distance( Cannon.ImagePointX(1), Cannon.ImagePointY(1), Minion.X, Minion.Y )</param>
                                                    <param id="1" name="Height">1</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>There is line of site</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="1" inverted="1" name="Is overlapping another object" type="TargetLeadBar">
                                                            <param id="0" name="Object">BarrierWall</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="4" name="Set animation" type="TargetLeadBar">
                                                            <param id="0" name="Animation">&quot;LineOfSite&quot;</param>
                                                            <param id="1" name="From">1</param>
                                                        </action>
                                                        <action id="4" name="Set font color" type="distanceToTarget">
                                                            <param id="0" name="Color">rgb(58, 206, 65)</param>
                                                        </action>
                                                        <action id="-8" name="Set angle" type="Cannon">
                                                            <param id="0" name="Angle">angle( Cannon.X, Cannon.Y, Minion.X, Minion.Y )</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Cannon">
                                                            <param id="0" name="Instance variable">currentTarget</param>
                                                            <param id="1" name="Value">Minion.UID</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <comment>Fire whatever ammo is active:</comment>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">time - Cannon.lastFired</param>
                                                                    <param id="1" name="Comparison">5</param>
                                                                    <param id="2" name="Second value">Cannon.fireRate</param>
                                                                </condition>
                                                                <condition id="-8" name="Is boolean instance variable set" type="Cannon">
                                                                    <param id="0" name="Instance variable">readyToFire</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions />
                                                            <sub-events>
                                                                <comment>Fire a rocket</comment>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                                                            <param id="0" name="Instance variable">activeAmmo</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Value">rocketAmmoType</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">Rocket</param>
                                                                            <param id="1" name="Layer">activeLayer</param>
                                                                            <param id="2" name="X">Cannon.ImagePointX(1)</param>
                                                                            <param id="3" name="Y">Cannon.ImagePointY(1)</param>
                                                                        </action>
                                                                        <action id="-8" name="Set angle" type="Rocket">
                                                                            <param id="0" name="Angle">Cannon.Angle</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Rocket">
                                                                            <param id="0" name="Instance variable">launchTime</param>
                                                                            <param id="1" name="Value">time</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="5" name="Set enabled" type="Rocket">
                                                                            <param id="0" name="State">1</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="0" name="Set speed" type="Rocket">
                                                                            <param id="0" name="Speed">rocketDefaultProjectileSpeed</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="3" name="Set angle of motion" type="Rocket">
                                                                            <param id="0" name="Angle">rocket.Angle</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="1" name="Set acceleration" type="Rocket">
                                                                            <param id="0" name="Acceleration">rocketLaunchBoost</param>
                                                                        </action>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">RocketEffects</param>
                                                                            <param id="1" name="Layer">activeLayer</param>
                                                                            <param id="2" name="X">rocket.imagepointX(2)</param>
                                                                            <param id="3" name="Y">rocket.imagepointY(2)</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Rocket">
                                                                            <param id="0" name="Instance variable">effectsUID</param>
                                                                            <param id="1" name="Value">RocketEffects.UID</param>
                                                                        </action>
                                                                        <action id="-8" name="Set angle" type="RocketEffects">
                                                                            <param id="0" name="Angle">rocket.angle</param>
                                                                        </action>
                                                                        <action behavior="Pin" id="0" name="Pin to object" type="RocketEffects">
                                                                            <param id="0" name="Pin to">Rocket</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="RocketEffects">
                                                                            <param id="0" name="Instance variable">rocketUID</param>
                                                                            <param id="1" name="Value">rocket.uid</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Rocket">
                                                                            <param id="0" name="Instance variable">cannonUID</param>
                                                                            <param id="1" name="Value">cannon.UID</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                                <comment>Fire a beam</comment>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                                                            <param id="0" name="Instance variable">activeAmmo</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Value">beamAmmoType</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">Beam</param>
                                                                            <param id="1" name="Layer">activeLayer</param>
                                                                            <param id="2" name="X">Cannon.ImagePointX(1)</param>
                                                                            <param id="3" name="Y">Cannon.ImagePointY(1)</param>
                                                                        </action>
                                                                        <action id="-8" name="Set angle" type="Beam">
                                                                            <param id="0" name="Angle">Cannon.Angle</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="0" name="Set speed" type="Beam">
                                                                            <param id="0" name="Speed">beamDefaultProjectileSpeed</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Beam">
                                                                            <param id="0" name="Instance variable">cannonUID</param>
                                                                            <param id="1" name="Value">cannon.UID</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                                <comment>Register fired shot</comment>
                                                                <event-block>
                                                                    <conditions />
                                                                    <actions>
                                                                        <action id="-10" name="Set value" type="Cannon">
                                                                            <param id="0" name="Instance variable">lastFired</param>
                                                                            <param id="1" name="Value">time</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                            </sub-events>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                                <comment>There is no line of site</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="1" name="Is overlapping another object" type="TargetLeadBar">
                                                            <param id="0" name="Object">BarrierWall</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-15" name="Set visible" type="TargetLeadBar">
                                                            <param id="0" name="Visibility">0</param>
                                                        </action>
                                                        <action id="-15" name="Set visible" type="distanceToTarget">
                                                            <param id="0" name="Visibility">0</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Draw the range to target</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="distanceToTarget">
                                                            <param id="0" name="Unique ID">TargetLeadBar.labelUID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-3" name="Set position" type="distanceToTarget">
                                                            <param id="0" name="X">( cannon.ImagePointX(1) + Minion.X ) / 2 </param>
                                                            <param id="1" name="Y">( cannon.ImagePointY(1) + Minion.Y ) / 2 </param>
                                                        </action>
                                                        <action id="-8" name="Set angle" type="distanceToTarget">
                                                            <param id="0" name="Angle">TargetLeadBar.Angle</param>
                                                        </action>
                                                        <action id="-15" name="Set visible" type="distanceToTarget">
                                                            <param id="0" name="Visibility">1</param>
                                                        </action>
                                                        <action id="0" name="Set text" type="distanceToTarget">
                                                            <param id="0" name="Text">round( distanceToMinion )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <comment>Minion is too far away to target</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" inverted="1" name="Compare two values" type="System">
                                            <param id="0" name="First value">clamp(distanceToMinion, cannon.targetRangeMin, cannon.targetRangeMax)</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">distanceToMinion</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="TargetLeadBar">
                                                    <param id="0" name="Instance variable">baseUID</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">cannon.baseUID</param>
                                                </condition>
                                                <condition id="-14" name="Pick by unique ID" type="distanceToTarget">
                                                    <param id="0" name="Unique ID">TargetLeadBar.labelUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-15" name="Set visible" type="TargetLeadBar">
                                                    <param id="0" name="Visibility">0</param>
                                                </action>
                                                <action id="-15" name="Set visible" type="distanceToTarget">
                                                    <param id="0" name="Visibility">0</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>If the cannon becomes unpinned (probably because the base it was on was destroyed) destroy it</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="Cannon" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="Cannon" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A laser fired from a cannon" title="Beam">
            <sub-events>
                <comment>Destroy any minion hit by beams</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Beam">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">max( 0, minion.health - beamDamage )</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">updateHealthBar</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-9" name="Destroy" type="Beam" />
                    </actions>
                </event-block>
                <comment>Destroy the beam if it exceeds max range</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Beam</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Cannon">
                            <param id="0" name="Unique ID">beam.cannonUID</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">abs( distance( beam.X, beam.Y, cannon.X, cannon.Y ) )</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">beamTargetRangeMax</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="Beam" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A rocket that travels slowly, can destroy bases, and explodes causing splash damage" title="Rocket">
            <sub-events>
                <comment>Destroy any minions hit by rockets</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Rocket">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Kill any rocket that exceeds the maximum flight time</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Rocket</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">time - Rocket.launchTime</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">rocketMaxFlightTime</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Arm the rocket once it&apos;s cleared the cannon</comment>
                <comment>Bounce off other rockets (explicitly done because rockets aren&apos;t solid)</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Rocket">
                            <param id="0" name="Object">Rocket</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Get rid of the rocket, smoke,  and explosion once the explosion animation is finished</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="RocketExplosion">
                            <param id="0" name="Animation">&quot;default&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="RocketExplosion" />
                    </actions>
                </event-block>
                <comment>Kill any minions caught in the shockwave</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="RocketExplosion">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">max( 0, minion.health - rocketDamage )</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">updateHealthBar</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Move any nodes caught in the shockwave</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="RocketExplosion">
                            <param id="0" name="Object">Node</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Rocket">
                                    <param id="0" name="Unique ID">RocketExplosion.rocketUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action behavior="Bullet" id="5" name="Set enabled" type="Node">
                                    <param id="0" name="State">1</param>
                                </action>
                                <action id="-8" name="Set angle" type="Node">
                                    <param id="0" name="Angle">angle( rocket.X, rocket.Y, node.X, node.Y )</param>
                                </action>
                                <action behavior="Bullet" id="3" name="Set angle of motion" type="Node">
                                    <param id="0" name="Angle">angle( rocket.X, rocket.Y, node.X, node.Y )</param>
                                </action>
                                <action behavior="Bullet" id="0" name="Set speed" type="Node">
                                    <param id="0" name="Speed">rocketImpactForce</param>
                                </action>
                                <action behavior="Bullet" id="1" name="Set acceleration" type="Node">
                                    <param id="0" name="Acceleration">rocketImpactForceDecay</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Node">
                                    <param id="0" name="Instance variable">moving</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Node">
                                    <param id="0" name="Instance variable">movingByObject</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Destroy the rocket if it goes past max distance</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Rocket</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Cannon">
                            <param id="0" name="Unique ID">rocket.cannonUID</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">abs( distance( rocket.X, rocket.Y, cannon.X, cannon.Y ) )</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">rocketTargetRangeMax</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>If a rocket exhaust becomes unpinned from a rocket, destroy it</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="RocketEffects" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="RocketEffects" />
                    </actions>
                </event-block>
                <comment>If the rocket is ready to detonate (and it hasn&apos;t already exploded), create an explosion</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                        </condition>
                        <condition id="-7" name="Compare instance variable" type="Rocket">
                            <param id="0" name="Instance variable">explosionUID</param>
                            <param id="1" name="Comparison">0</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">RocketExplosion</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">rocket.X</param>
                            <param id="3" name="Y">rocket.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="RocketExplosion">
                            <param id="0" name="Instance variable">rocketUID</param>
                            <param id="1" name="Value">rocket.UID</param>
                        </action>
                        <action id="-7" name="Set size" type="RocketExplosion">
                            <param id="0" name="Width">rocketExplosionDiameter</param>
                            <param id="1" name="Height">rocketExplosionDiameter</param>
                        </action>
                        <action id="-9" name="Destroy" type="Rocket" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A static turret that can act as a stationary weapons platform" title="Turret">
            <sub-events>
                <comment>Create a new rocket turret at the mouse location</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">90 (Z)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">TurretBase</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">round( mouse.X / gridScale ) * gridScale</param>
                            <param id="3" name="Y">round( mouse.Y / gridScale ) * gridScale</param>
                        </action>
                        <action id="4" name="Set animation" type="TurretBase">
                            <param id="0" name="Animation">&quot;Rocket&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Cannon</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">TurretBase.X</param>
                            <param id="3" name="Y">TurretBase.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">activeAmmo</param>
                            <param id="1" name="Value">rocketAmmoType</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">turretbase.UID</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Create a new beam turret at the mouse location</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">88 (X)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">TurretBase</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">round( mouse.X / gridScale ) * gridScale</param>
                            <param id="3" name="Y">round( mouse.Y / gridScale ) * gridScale</param>
                        </action>
                        <action id="4" name="Set animation" type="TurretBase">
                            <param id="0" name="Animation">&quot;Beam&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Cannon</param>
                            <param id="1" name="Layer">activeLayer</param>
                            <param id="2" name="X">TurretBase.X</param>
                            <param id="3" name="Y">TurretBase.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">activeAmmo</param>
                            <param id="1" name="Value">beamAmmoType</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">turretbase.UID</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A barrier that blocks line of site" disabled="1" title="Barrier">
            <sub-events>
                <comment>Create a new wide barrier</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">67 (C)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">BarrierWall</param>
                            <param id="1" name="Layer">defaultLayer</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="-7" name="Set size" type="BarrierWall">
                            <param id="0" name="Width">20</param>
                            <param id="1" name="Height">100</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Create a new tall barrier</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">86 (V)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">BarrierWall</param>
                            <param id="1" name="Layer">defaultLayer</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="-7" name="Set size" type="BarrierWall">
                            <param id="0" name="Width">20</param>
                            <param id="1" name="Height">100</param>
                        </action>
                        <action id="-18" name="Rotate clockwise" type="BarrierWall">
                            <param id="0" name="Degrees">90</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <comment>Debug Events</comment>
        <event-group description="Various debug methods" title="Debug">
            <sub-events>
                <variable comment="The rate (in seconds) to refresh debug information" name="debugPollRate" type="number">0.1</variable>
                <event-block>
                    <conditions>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">debugPollRate</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Set text" type="txtDebug">
                            <param id="0" name="Text">objectcount &amp; &quot; sprites @ &quot; &amp; fps &amp; &quot; fps&quot; &amp; &quot;(&quot; &amp; renderer &amp; &quot;)&quot; &amp; newline</param>
                        </action>
                        <action id="1" name="Append text" type="txtDebug">
                            <param id="0" name="Text">debugMsg &amp; newline</param>
                        </action>
                        <action id="0" name="Set text" type="txtObjectCounts">
                            <param id="0" name="Text">&quot;nodes: &quot; &amp; node.Count &amp; &quot;  bars: &quot; &amp; bar.Count &amp; &quot;  Minions: &quot; &amp; Minion.Count &amp; &quot;  MinionTrails: &quot; &amp; MinionTrail.Count &amp; &quot;  node labels: &quot; &amp; nodelabel.Count &amp;  newline</param>
                        </action>
                        <action id="1" name="Append text" type="txtObjectCounts">
                            <param id="0" name="Text">&quot;flows: &quot; &amp; flow.Count &amp; &quot;  streams: &quot; &amp; stream.Count &amp; newline</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
    </events>
</c2eventsheet>
