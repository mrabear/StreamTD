<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>MainEvents</name>
    <events>
        <variable comment="Anything that needs to be appended to the debug portion of the screen" name="debugMsg" type="text"></variable>
        <comment>Startup Events</comment>
        <event-group collapsed="1" description="Events that run to setup the game environments" title="Initialization">
            <sub-events>
                <comment>Startup layout</comment>
                <event-block>
                    <conditions>
                        <condition id="-2" name="On start of layout" type="System" />
                    </conditions>
                    <actions>
                        <action id="4" name="Clean all" type="Parameters" />
                    </actions>
                    <sub-events>
                        <comment>Destroy initial instances of most sprites</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Destroy" type="Bar" />
                                <action id="-9" name="Destroy" type="BarrierWall" />
                                <action id="-9" name="Destroy" type="Beam" />
                                <action id="-9" name="Destroy" type="Cannon" />
                                <action id="-9" name="Destroy" type="distanceToTarget" />
                                <action id="-9" name="Destroy" type="Generator" />
                                <action id="-9" name="Destroy" type="GreyMinion" />
                                <action id="-9" name="Destroy" type="GreyMinionTrail" />
                                <action id="-9" name="Destroy" type="KrullBase" />
                                <action id="-9" name="Destroy" type="KrullBlade" />
                                <action id="-9" name="Destroy" type="Node" />
                                <action id="-9" name="Destroy" type="NodeLabel" />
                                <action id="-9" name="Destroy" type="Minion" />
                                <action id="-9" name="Destroy" type="MinionTrail" />
                                <action id="-9" name="Destroy" type="PathStart" />
                                <action id="-9" name="Destroy" type="RangeFinder" />
                                <action id="-9" name="Destroy" type="RedMinion" />
                                <action id="-9" name="Destroy" type="RedMinionTrail" />
                                <action id="-9" name="Destroy" type="Rocket" />
                                <action id="-9" name="Destroy" type="RocketEffects" />
                                <action id="-9" name="Destroy" type="RocketExplosion" />
                                <action id="-9" name="Destroy" type="TargetLeadBar" />
                                <action id="-9" name="Destroy" type="TurretBase" />
                                <action id="-9" name="Destroy" type="HealthBorder" />
                                <action id="-9" name="Destroy" type="HealthBar" />
                            </actions>
                        </event-block>
                        <comment>Rocket parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketAmmoType&quot;</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketDefaultFireRate&quot;</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketTargetRangeMax&quot;</param>
                                    <param id="1" name="Value">125</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketTargetRangeMin&quot;</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketDefaultProjectileSpeed&quot;</param>
                                    <param id="1" name="Value">300</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketLaunchBoost&quot;</param>
                                    <param id="1" name="Value">100</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketMaxFlightTime&quot;</param>
                                    <param id="1" name="Value">30</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketImpactForce&quot;</param>
                                    <param id="1" name="Value">100</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketImpactForceDecay&quot;</param>
                                    <param id="1" name="Value">-50</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketExplosionDiameter&quot;</param>
                                    <param id="1" name="Value">25</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;rocketDamage&quot;</param>
                                    <param id="1" name="Value">250</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Beam parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;beamAmmoType&quot;</param>
                                    <param id="1" name="Value">2</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;beamDefaultFireRate&quot;</param>
                                    <param id="1" name="Value">0.15</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;beamTargetRangeMax&quot;</param>
                                    <param id="1" name="Value">100</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;beamTargetRangeMin&quot;</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;beamDefaultProjectileSpeed&quot;</param>
                                    <param id="1" name="Value">400</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;beamDamage&quot;</param>
                                    <param id="1" name="Value">100</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Camera zoom effect parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;zoomMinScale&quot;</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;zoomMaxScale&quot;</param>
                                    <param id="1" name="Value">3</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;zoomScaleChange&quot;</param>
                                    <param id="1" name="Value">0.05</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;zoomResetDelay&quot;</param>
                                    <param id="1" name="Value">0.75</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;zoomSlowRate&quot;</param>
                                    <param id="1" name="Value">0.75</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;zoomScaleDelay&quot;</param>
                                    <param id="1" name="Value">0.1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Minion parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionAngleTolerance&quot;</param>
                                    <param id="1" name="Value">5</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionDistanceTolerance&quot;</param>
                                    <param id="1" name="Value">50</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionDefaultSpawnRate&quot;</param>
                                    <param id="1" name="Value">0.75</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionDefaultSpeed&quot;</param>
                                    <param id="1" name="Value">100</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionTypes&quot;</param>
                                    <param id="1" name="Value">&quot;greyMinion#redMinion#blueMinion&quot;</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionNodeArrivalDistance&quot;</param>
                                    <param id="1" name="Value">5</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionTrailDropRate&quot;</param>
                                    <param id="1" name="Value">10</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionTrailDecayRate&quot;</param>
                                    <param id="1" name="Value">0.02</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;minionDefaultHealth&quot;</param>
                                    <param id="1" name="Value">1000</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Path parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;pathPollRate&quot;</param>
                                    <param id="1" name="Value">0.02</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;pathPreviewTime&quot;</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Layer parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;backgroundLayer&quot;</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;defaultLayer&quot;</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;turretLayer&quot;</param>
                                    <param id="1" name="Value">2</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Health Bar parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;healthBarHeight&quot;</param>
                                    <param id="1" name="Value">4</param>
                                </action>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;healthBarBorder&quot;</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Cannon parameters</comment>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="1" name="Set value by key string" type="Parameters">
                                    <param id="0" name="Key string">&quot;cannonShowTargetLead&quot;</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <comment>Game Object Events</comment>
        <event-group collapsed="1" description="The camera that watches overhead" title="Camera">
            <sub-events>
                <comment>Zoom the camera into the spot that was clicked</comment>
                <event-block>
                    <conditions>
                        <condition id="1" name="On any click" type="Mouse" />
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">87 (W)</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Set position" type="ZoomPoint">
                            <param id="0" name="X">mouse.X</param>
                            <param id="1" name="Y">mouse.Y</param>
                        </action>
                        <action id="-13" name="Set boolean" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-24" name="Move to top" type="ZoomPoint" />
                        <action id="-15" name="Set visible" type="ZoomPoint">
                            <param id="0" name="Visibility">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Zoom in, gradually scroll camera to the target location</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">2</param>
                            <param id="2" name="Second value">parameters.At( &quot;zoomMaxScale&quot; )</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-20" name="Set layout scale" type="System">
                            <param id="0" name="Scale">LayoutScale + parameters.At( &quot;zoomScaleChange&quot; )</param>
                        </action>
                        <action id="-7" name="Scroll to position" type="System">
                            <param id="0" name="X">scrollx + (( ZoomPoint.X - ( WindowWidth / 2 ))  / ( (parameters.At( &quot;zoomMaxScale&quot; )-parameters.At( &quot;zoomMinScale&quot; )) / parameters.At( &quot;zoomScaleChange&quot; ) ))</param>
                            <param id="1" name="Y">scrolly + (( ZoomPoint.Y - ( WindowHeight / 2 ))  /( (parameters.At( &quot;zoomMaxScale&quot; )-parameters.At( &quot;zoomMinScale&quot; )) / parameters.At( &quot;zoomScaleChange&quot; ) ))</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">parameters.At( &quot;zoomScaleDelay&quot; )</param>
                        </action>
                        <action id="-13" name="Set time scale" type="System">
                            <param id="0" name="Time scale">timescale - ( parameters.At( &quot;zoomSlowRate&quot; ) / (( parameters.At( &quot;zoomMaxScale&quot; )-parameters.At( &quot;zoomMinScale&quot; ) ) / parameters.At( &quot;zoomScaleChange&quot; )))</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Once max zoom has been reached, wait, then zoom out</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">parameters.At( &quot;zoomMaxScale&quot; )</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">parameters.At( &quot;zoomResetDelay&quot; )</param>
                        </action>
                        <action id="-13" name="Set boolean" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="-15" name="Set visible" type="ZoomPoint">
                            <param id="0" name="Visibility">0</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Zoom out, gradually scroll camera back to center</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="ZoomPoint">
                            <param id="0" name="Instance variable">zooming</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">LayoutScale</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">parameters.At( &quot;zoomMinScale&quot; )</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-20" name="Set layout scale" type="System">
                            <param id="0" name="Scale">LayoutScale - parameters.At( &quot;zoomScaleChange&quot; )</param>
                        </action>
                        <action id="-7" name="Scroll to position" type="System">
                            <param id="0" name="X">scrollx + ((( WindowWidth / 2 ) - ZoomPoint.X ) / (( parameters.At( &quot;zoomMaxScale&quot; )-parameters.At( &quot;zoomMinScale&quot; ) ) / parameters.At( &quot;zoomScaleChange&quot; ) ))</param>
                            <param id="1" name="Y">scrolly + ((( WindowHeight / 2 )  - ZoomPoint.Y ) / (( parameters.At( &quot;zoomMaxScale&quot; )-parameters.At( &quot;zoomMinScale&quot; ) ) / parameters.At( &quot;zoomScaleChange&quot; ) ))</param>
                        </action>
                        <action id="-16" name="Wait" type="System">
                            <param id="0" name="Seconds">parameters.At( &quot;zoomScaleDelay&quot; )</param>
                        </action>
                        <action id="-13" name="Set time scale" type="System">
                            <param id="0" name="Time scale">timescale + ( parameters.At( &quot;zoomSlowRate&quot; ) / (( parameters.At( &quot;zoomMaxScale&quot; )-parameters.At( &quot;zoomMinScale&quot; ) ) / parameters.At( &quot;zoomScaleChange&quot; )))</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A minion generator that spawns minions following a unique path" title="Generator">
            <sub-events>
                <comment>Create a new generator</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">81 (Q)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Generator</param>
                            <param id="1" name="Layer">parameters.At( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">minionType</param>
                            <param id="1" name="Value">tokenat(parameters.At( &quot;minionTypes&quot; ), random( 0, tokencount(parameters.At( &quot;minionTypes&quot; ), &quot;#&quot;)), &quot;#&quot;)</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Minion</param>
                            <param id="1" name="Layer">parameters.At( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">generator.X</param>
                            <param id="3" name="Y">generator.Y</param>
                        </action>
                        <action id="4" name="Set animation" type="Minion">
                            <param id="0" name="Animation">&quot;disabled&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="Minion">
                            <param id="0" name="Pin to">Generator</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Path</param>
                            <param id="1" name="Layer">parameters.At( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">-100</param>
                            <param id="3" name="Y">-100</param>
                        </action>
                        <action id="-10" name="Set value" type="Path">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">generator.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">pathUID</param>
                            <param id="1" name="Value">path.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">labelUID</param>
                            <param id="1" name="Value">Minion.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">spawnRate</param>
                            <param id="1" name="Value">parameters.At( &quot;minionDefaultSpawnRate&quot; )</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">PathStart</param>
                            <param id="1" name="Layer">parameters.At( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">generator.ImagePointX( 1 )</param>
                            <param id="3" name="Y">generator.ImagePointY( 1 ) </param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="PathStart">
                            <param id="0" name="Pin to">Generator</param>
                        </action>
                        <action id="-10" name="Set value" type="PathStart">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">generator.UID</param>
                        </action>
                        <action id="-16" name="Set opacity" type="PathStart">
                            <param id="0" name="Opacity">0</param>
                        </action>
                        <action id="-13" name="Set boolean" type="PathStart">
                            <param id="0" name="Instance variable">fadingIn</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Change the state of the generator (enable/disable it)</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">1</param>
                            <param id="2" name="Object clicked">Generator</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">generator.pathUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-14" name="Set object time scale" type="System">
                            <param id="0" name="Object">Node</param>
                            <param id="1" name="Time scale">1.0</param>
                        </action>
                        <action id="-14" name="Set object time scale" type="System">
                            <param id="0" name="Object">Bar</param>
                            <param id="1" name="Time scale">1.0</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Generator">
                            <param id="0" name="Instance variable">currentlySelected</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="0" name="Set text" type="CurrentlySelected">
                            <param id="0" name="Text">&quot;Generator &quot; &amp; generator.UID &amp; &quot; selected&quot; </param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Generator</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">generator.UID</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">path.baseUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">currentlySelected</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Grab the active label on the generator</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Minion">
                                    <param id="0" name="Unique ID">generator.labelUID</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <comment>Shut the generator down</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Is boolean instance variable set" type="Generator">
                                            <param id="0" name="Instance variable">active</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Minion">
                                            <param id="0" name="Animation">&quot;disabled&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="4" name="Set animation" type="Generator">
                                            <param id="0" name="Animation">&quot;Inactive&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="PathStart">
                                                    <param id="0" name="Instance variable">baseUID</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">generator.UID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-16" name="Set opacity" type="PathStart">
                                                    <param id="0" name="Opacity">0</param>
                                                </action>
                                                <action id="-13" name="Set boolean" type="PathStart">
                                                    <param id="0" name="Instance variable">fadingIn</param>
                                                    <param id="1" name="Value">1</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <comment>Activate the generator</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Generator">
                                            <param id="0" name="Instance variable">active</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Generator">
                                            <param id="0" name="Animation">&quot;InactiveReverse&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="4" name="Set animation" type="Minion">
                                            <param id="0" name="Animation">generator.minionType</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <comment>Fade the starter node out</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="PathStart">
                                                    <param id="0" name="Instance variable">baseUID</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">generator.UID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-13" name="Set boolean" type="PathStart">
                                                    <param id="0" name="Instance variable">fadingIn</param>
                                                    <param id="1" name="Value">0</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-14" name="Toggle boolean" type="Generator">
                                    <param id="0" name="Instance variable">active</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Switch the active path to the generator that&apos;s been clicked on</comment>
                <event-block>
                    <conditions>
                        <condition id="6" name="On object clicked" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">Generator</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">generator.pathUID</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Generator">
                            <param id="0" name="Instance variable">currentlySelected</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Generator">
                            <param id="0" name="Instance variable">currentlySelected</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="0" name="Set text" type="CurrentlySelected">
                            <param id="0" name="Text">&quot;Generator &quot; &amp; generator.UID &amp; &quot; selected&quot; </param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Generator">
                                    <param id="0" name="Instance variable">active</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-14" name="Set object time scale" type="System">
                                    <param id="0" name="Object">Node</param>
                                    <param id="1" name="Time scale">1.5</param>
                                </action>
                                <action id="-14" name="Set object time scale" type="System">
                                    <param id="0" name="Object">Bar</param>
                                    <param id="1" name="Time scale">1.5</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Path">
                                    <param id="0" name="Instance variable">redrawPath</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Generator</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">generator.UID</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">path.baseUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-13" name="Set boolean" type="Generator">
                                    <param id="0" name="Instance variable">currentlySelected</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Once the generator has fully activated, switch the animation show minions spawning</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="Generator">
                            <param id="0" name="Animation">&quot;InactiveReverse&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="4" name="Set animation" type="Generator">
                            <param id="0" name="Animation">&quot;Spawning&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Once the generator has gone fully offline, draw it&apos;s path</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="Generator">
                            <param id="0" name="Animation">&quot;Inactive&quot;</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">generator.pathUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">redrawPath</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">redrawPath</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">redrawPath</param>
                            <param id="1" name="Value">0</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-10" name="For" type="System">
                                    <param id="0" name="Name">&quot;Rebuild Path&quot;</param>
                                    <param id="1" name="Start index">0</param>
                                    <param id="2" name="End index">path.pathCount - 1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">Node</param>
                                    <param id="1" name="Layer">Parameters.at(&quot;defaultLayer&quot;)</param>
                                    <param id="2" name="X">path.At( loopindex, 0 )</param>
                                    <param id="3" name="Y">path.At( loopindex, 1 )</param>
                                </action>
                                <action behavior="Bullet" id="5" name="Set enabled" type="Node">
                                    <param id="0" name="State">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Node">
                                    <param id="0" name="Instance variable">pathUID</param>
                                    <param id="1" name="Value">path.UID</param>
                                </action>
                                <action id="-14" name="Set object time scale" type="System">
                                    <param id="0" name="Object">Node</param>
                                    <param id="1" name="Time scale">0</param>
                                </action>
                                <action id="-10" name="Set value" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Value">loopindex</param>
                                </action>
                                <action id="3" name="Set at XY" type="Path">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">2</param>
                                    <param id="2" name="Value">node.UID</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Fade starting node in</comment>
                <event-block>
                    <conditions>
                        <condition id="-10" name="Compare opacity" type="PathStart">
                            <param id="0" name="Comparison">2</param>
                            <param id="1" name="Opacity">100</param>
                        </condition>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">0.1</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="PathStart">
                            <param id="0" name="Instance variable">fadingIn</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="PathStart">
                            <param id="0" name="Opacity">min( 100, pathstart.opacity + 15 )</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Fade starting node out</comment>
                <event-block>
                    <conditions>
                        <condition id="-10" name="Compare opacity" type="PathStart">
                            <param id="0" name="Comparison">4</param>
                            <param id="1" name="Opacity">0</param>
                        </condition>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">0.1</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="PathStart">
                            <param id="0" name="Instance variable">fadingIn</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="PathStart">
                            <param id="0" name="Opacity">max( pathstart.opacity - 15, 0 )</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Spawn minions from each of the generators</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Generator</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Generator">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">time - generator.spawnRate</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">generator.lastSpawn</param>
                        </condition>
                        <condition id="2" inverted="1" name="Is playing" type="Generator">
                            <param id="0" name="Animation">&quot;InactiveReverse&quot;</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">generator.pathUID</param>
                        </condition>
                        <condition id="-7" name="Compare instance variable" type="Path">
                            <param id="0" name="Instance variable">pathCount</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="3" name="Start" type="Generator">
                            <param id="0" name="From">1</param>
                        </action>
                        <action id="-10" name="Set value" type="Generator">
                            <param id="0" name="Instance variable">lastSpawn</param>
                            <param id="1" name="Value">time</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Minion</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                            <param id="2" name="X">generator.ImagePointX(1)</param>
                            <param id="3" name="Y">generator.ImagePointY(1)</param>
                        </action>
                        <action id="4" name="Set animation" type="Minion">
                            <param id="0" name="Animation">generator.minionType</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action behavior="CustomMovement" id="2" name="Set speed" type="Minion">
                            <param id="0" name="Which">0</param>
                            <param id="1" name="Speed">Parameters.Entry(&quot;minionDefaultSpeed&quot;)</param>
                        </action>
                        <action id="-24" name="Move to top" type="Minion" />
                        <action id="3" name="Start" type="Minion">
                            <param id="0" name="From">0</param>
                        </action>
                        <action id="-22" name="Set angle toward position" type="Minion">
                            <param id="0" name="X">path.At( 0, 0 )</param>
                            <param id="1" name="Y">path.At( 0, 1 )</param>
                        </action>
                        <action behavior="CustomMovement" id="6" name="Set angle of motion" type="Minion">
                            <param id="0" name="Angle">Minion.Angle</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">pathUID</param>
                            <param id="1" name="Value">path.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">generator.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">maxHealth</param>
                            <param id="1" name="Value">parameters.At( &quot;minionDefaultHealth&quot; )</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">minion.maxHealth</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="Path that minions follow" title="Path">
            <sub-events>
                <comment>If a bar is clicked on, add a new node to the path at that location</comment>
                <event-block>
                    <conditions>
                        <condition id="2" name="Mouse button is down" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="7" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">Bar</param>
                        </condition>
                        <condition id="7" inverted="1" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">Node</param>
                        </condition>
                        <condition id="7" inverted="1" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">TurretBase</param>
                        </condition>
                        <condition id="7" inverted="1" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">BarrierWall</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <variable comment="the index of the node that the bar belongs to" name="newNodeIndex" type="number">0</variable>
                        <variable name="nextNodeUID" type="number">0</variable>
                        <variable name="prevNodeUID" type="number">0</variable>
                        <variable name="newNodeUID" type="number">0</variable>
                        <comment>Find the index of the node that the bar belongs to</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Node">
                                    <param id="0" name="Unique ID">bar.nodeUID</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Path">
                                    <param id="0" name="Unique ID">node.pathUID</param>
                                </condition>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Path">
                                    <param id="0" name="Instance variable">currentlyMovingNode</param>
                                </condition>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Path">
                                    <param id="0" name="Instance variable">currentlyTracing</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">newNodeIndex</param>
                                    <param id="1" name="Value">Node.nodeIndex</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">prevNodeUID</param>
                                    <param id="1" name="Value">node.UID</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Node</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <comment>Find the next node in the chain</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="Node">
                                                    <param id="0" name="Instance variable">nodeIndex</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">newNodeIndex + 1</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">newNodeIndex</param>
                                                    <param id="1" name="Value">Node.nodeIndex</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">nextNodeUID</param>
                                                    <param id="1" name="Value">node.UID</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>Increment all of the nodes in front of the new one</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="Node">
                                                    <param id="0" name="Instance variable">nodeIndex</param>
                                                    <param id="1" name="Comparison">5</param>
                                                    <param id="2" name="Value">newNodeIndex</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-11" name="Add to" type="Node">
                                                    <param id="0" name="Instance variable">nodeIndex</param>
                                                    <param id="1" name="Value">1</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                        <comment>Create a new node and bar attached to it</comment>
                                        <event-block>
                                            <conditions />
                                            <actions>
                                                <action id="-3" name="Create object" type="System">
                                                    <param id="0" name="Object to create">Node</param>
                                                    <param id="1" name="Layer">Parameters.at(&quot;defaultLayer&quot;)</param>
                                                    <param id="2" name="X">mouse.X</param>
                                                    <param id="3" name="Y">mouse.Y</param>
                                                </action>
                                                <action id="-14" name="Set object time scale" type="System">
                                                    <param id="0" name="Object">Node</param>
                                                    <param id="1" name="Time scale">0</param>
                                                </action>
                                                <action behavior="Bullet" id="5" name="Set enabled" type="Node">
                                                    <param id="0" name="State">0</param>
                                                </action>
                                                <action id="-10" name="Set value" type="Node">
                                                    <param id="0" name="Instance variable">pathUID</param>
                                                    <param id="1" name="Value">path.UID</param>
                                                </action>
                                                <action id="-13" name="Set boolean" type="Node">
                                                    <param id="0" name="Instance variable">moving</param>
                                                    <param id="1" name="Value">1</param>
                                                </action>
                                                <action id="-10" name="Set value" type="Node">
                                                    <param id="0" name="Instance variable">nodeIndex</param>
                                                    <param id="1" name="Value">newNodeIndex</param>
                                                </action>
                                                <action id="-10" name="Set value" type="Node">
                                                    <param id="0" name="Instance variable">nextNode</param>
                                                    <param id="1" name="Value">nextNodeUID</param>
                                                </action>
                                                <action id="-10" name="Set value" type="Node">
                                                    <param id="0" name="Instance variable">previousNode</param>
                                                    <param id="1" name="Value">prevNodeUID</param>
                                                </action>
                                                <action id="-9" name="Set value" type="System">
                                                    <param id="0" name="Variable">newNodeUID</param>
                                                    <param id="1" name="Value">node.UID</param>
                                                </action>
                                                <action id="-11" name="Add to" type="Path">
                                                    <param id="0" name="Instance variable">pathCount</param>
                                                    <param id="1" name="Value">1</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>Splice the new node into the existing path</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-19" name="Pick all" type="System">
                                                            <param id="0" name="Object">Node</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions />
                                                    <sub-events>
                                                        <comment>Wire the previous node into the new node</comment>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-7" name="Compare instance variable" type="Node">
                                                                    <param id="0" name="Instance variable">nodeIndex</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Value">newNodeIndex -1</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-10" name="Set value" type="Node">
                                                                    <param id="0" name="Instance variable">nextNode</param>
                                                                    <param id="1" name="Value">newNodeUID</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                        <comment>Wire the next node back into the new node</comment>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-7" name="Compare instance variable" type="Node">
                                                                    <param id="0" name="Instance variable">nodeIndex</param>
                                                                    <param id="1" name="Comparison">0</param>
                                                                    <param id="2" name="Value">newNodeIndex + 1</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions>
                                                                <action id="-10" name="Set value" type="Node">
                                                                    <param id="0" name="Instance variable">previousNode</param>
                                                                    <param id="1" name="Value">newNodeUID</param>
                                                                </action>
                                                            </actions>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                        <comment>Pin the new node to the mouse to allow the user to reposition it</comment>
                                        <event-block>
                                            <conditions />
                                            <actions>
                                                <action id="-13" name="Set boolean" type="Path">
                                                    <param id="0" name="Instance variable">validData</param>
                                                    <param id="1" name="Value">0</param>
                                                </action>
                                                <action id="-13" name="Set boolean" type="Path">
                                                    <param id="0" name="Instance variable">currentlyMovingNode</param>
                                                    <param id="1" name="Value">1</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Clear all of the current path information</comment>
                <event-block>
                    <conditions>
                        <condition id="2" name="Mouse button is down" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="7" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">PathStart</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyTracing</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Generator">
                                    <param id="0" name="Unique ID">pathstart.baseUID</param>
                                </condition>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Generator">
                                    <param id="0" name="Instance variable">active</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Node" />
                                <action id="-9" name="Destroy" type="Bar" />
                                <action id="-9" name="Destroy" type="NodeLabel" />
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-7" name="Compare instance variable" type="Minion">
                                            <param id="0" name="Instance variable">baseUID</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">generator.UID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Destroy" type="Minion" />
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Path</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Path">
                                            <param id="0" name="Unique ID">generator.pathUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="0" name="Clear" type="Path" />
                                        <action id="-10" name="Set value" type="Path">
                                            <param id="0" name="Instance variable">pathCount</param>
                                            <param id="1" name="Value">0</param>
                                        </action>
                                        <action id="-13" name="Set boolean" type="Path">
                                            <param id="0" name="Instance variable">currentlyTracing</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Draw a new path</comment>
                <event-block>
                    <conditions>
                        <condition id="2" name="Mouse button is down" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="7" inverted="1" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">Node</param>
                        </condition>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">parameters.At( &quot;pathPollRate&quot; )</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyTracing</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Generator">
                            <param id="0" name="Unique ID">path.baseUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Node</param>
                            <param id="1" name="Layer">Parameters.at(&quot;defaultLayer&quot;)</param>
                            <param id="2" name="X">path.pathCount=0?generator.ImagePointX(1):mouse.X</param>
                            <param id="3" name="Y">path.pathCount=0?generator.ImagePointY(1):mouse.Y</param>
                        </action>
                        <action id="-14" name="Set object time scale" type="System">
                            <param id="0" name="Object">Node</param>
                            <param id="1" name="Time scale">0</param>
                        </action>
                        <action behavior="Bullet" id="5" name="Set enabled" type="Node">
                            <param id="0" name="State">0</param>
                        </action>
                        <action id="-10" name="Set value" type="Node">
                            <param id="0" name="Instance variable">pathUID</param>
                            <param id="1" name="Value">path.UID</param>
                        </action>
                        <action id="-10" name="Set value" type="Node">
                            <param id="0" name="Instance variable">nodeIndex</param>
                            <param id="1" name="Value">path.pathCount</param>
                        </action>
                        <action id="3" name="Set at XY" type="Path">
                            <param id="0" name="X">path.pathCount</param>
                            <param id="1" name="Y">0</param>
                            <param id="2" name="Value">node.X</param>
                        </action>
                        <action id="3" name="Set at XY" type="Path">
                            <param id="0" name="X">path.pathCount</param>
                            <param id="1" name="Y">1</param>
                            <param id="2" name="Value">node.Y</param>
                        </action>
                        <action id="3" name="Set at XY" type="Path">
                            <param id="0" name="X">path.pathCount</param>
                            <param id="1" name="Y">2</param>
                            <param id="2" name="Value">node.UID</param>
                        </action>
                        <action id="-11" name="Add to" type="Path">
                            <param id="0" name="Instance variable">pathCount</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>If a node has been created, but not fully connected into the path visually, create the connecting bars</comment>
                <variable comment="The y value of the current node" name="currentNodeIndex" type="number">0</variable>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Node</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Node">
                            <param id="0" name="Instance variable">fullyConnected</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">node.pathUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Node">
                            <param id="0" name="Instance variable">fullyConnected</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Bar</param>
                            <param id="1" name="Layer">Parameters.at(&quot;backgroundLayer&quot;)</param>
                            <param id="2" name="X">node.X</param>
                            <param id="3" name="Y">node.Y</param>
                        </action>
                        <action id="-14" name="Set object time scale" type="System">
                            <param id="0" name="Object">Bar</param>
                            <param id="1" name="Time scale">0</param>
                        </action>
                        <action id="-10" name="Set value" type="Node">
                            <param id="0" name="Instance variable">barUID</param>
                            <param id="1" name="Value">Bar.UID</param>
                        </action>
                        <action id="-6" name="Set height" type="Bar">
                            <param id="0" name="Height">7</param>
                        </action>
                        <action id="-10" name="Set value" type="Bar">
                            <param id="0" name="Instance variable">nodeUID</param>
                            <param id="1" name="Value">node.UID</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">NodeLabel</param>
                            <param id="1" name="Layer">Parameters.at( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">node.X</param>
                            <param id="3" name="Y">node.Y</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="NodeLabel">
                            <param id="0" name="Pin to">Node</param>
                        </action>
                        <action id="-10" name="Set value" type="NodeLabel">
                            <param id="0" name="Instance variable">parentNodeUID</param>
                            <param id="1" name="Value">node.UID</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>If this isn&apos;t the first node, connect the current node and it&apos;s previous one with a path bar (snaps the bar to the exact x,y coordinates since the mouse trace technique isn&apos;t totally accurate)</comment>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">currentNodeIndex</param>
                                    <param id="1" name="Value">node.nodeIndex</param>
                                </action>
                                <action id="-10" name="Set value" type="Node">
                                    <param id="0" name="Instance variable">previousNode</param>
                                    <param id="1" name="Value">path.At( node.nodeIndex - 1 , 2 )</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Select the previous node</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Node</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Node">
                                            <param id="0" name="Unique ID">path.At( currentNodeIndex - 1, 2 )</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-10" name="Set value" type="Node">
                                            <param id="0" name="Instance variable">nextNode</param>
                                            <param id="1" name="Value">path.At( currentNodeIndex, 2 )</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <comment>Extend the bar to the current node</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-19" name="Pick all" type="System">
                                                    <param id="0" name="Object">Bar</param>
                                                </condition>
                                                <condition id="-14" name="Pick by unique ID" type="Bar">
                                                    <param id="0" name="Unique ID">node.barUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-3" name="Set position" type="Bar">
                                                    <param id="0" name="X">node.X</param>
                                                    <param id="1" name="Y">node.Y</param>
                                                </action>
                                                <action id="-22" name="Set angle toward position" type="Bar">
                                                    <param id="0" name="X">path.At( currentNodeIndex, 0 )</param>
                                                    <param id="1" name="Y">path.At( currentNodeIndex, 1 )</param>
                                                </action>
                                                <action id="-5" name="Set width" type="Bar">
                                                    <param id="0" name="Width">distance( node.X, node.Y, path.At( currentNodeIndex, 0 ), path.At( currentNodeIndex, 1 ))</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-19" name="Pick all" type="System">
                                                            <param id="0" name="Object">Node</param>
                                                        </condition>
                                                        <condition id="-14" name="Pick by unique ID" type="Node">
                                                            <param id="0" name="Unique ID">path.At( currentNodeIndex, 2 )</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-8" name="Set angle" type="Node">
                                                            <param id="0" name="Angle">bar.Angle</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Finished drawing new path</comment>
                <event-block>
                    <conditions>
                        <condition id="3" name="On button released" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyTracing</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">currentlyTracing</param>
                            <param id="1" name="Value">0</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Delete the leading bar from the last node (it&apos;s an artifact of the way the path is contructed in real time)</comment>
                        <event-block>
                            <conditions>
                                <condition id="-19" name="Pick all" type="System">
                                    <param id="0" name="Object">Node</param>
                                </condition>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">path.pathCount - 1</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Bar</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Bar">
                                            <param id="0" name="Unique ID">node.barUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-9" name="Destroy" type="Bar" />
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-10" name="Set value" type="Node">
                                            <param id="0" name="Instance variable">barUID</param>
                                            <param id="1" name="Value">0</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Smooths the animations of new paths while the player is drawing it</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyTracing</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>Grab the last node drawn</comment>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">path.pathCount -1</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <comment>Extend the path bar to the mouse location (smooths the path drawing animation)</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Bar</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Bar">
                                            <param id="0" name="Unique ID">node.barUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Set position" type="Bar">
                                            <param id="0" name="X">node.X</param>
                                            <param id="1" name="Y">node.Y</param>
                                        </action>
                                        <action id="-22" name="Set angle toward position" type="Bar">
                                            <param id="0" name="X">Mouse.X</param>
                                            <param id="1" name="Y">Mouse.Y</param>
                                        </action>
                                        <action id="-5" name="Set width" type="Bar">
                                            <param id="0" name="Width">distance( node.X, node.Y, Mouse.X, Mouse.Y)</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Rebuild the array indexes if the data in the array has become stale (typically because the nodes have been manipulated)</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">validData</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action disabled="1" id="0" name="Clear" type="Path" />
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">validData</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-10" name="For" type="System">
                                    <param id="0" name="Name">&quot;Rebuild Path Indexes&quot;</param>
                                    <param id="1" name="Start index">0</param>
                                    <param id="2" name="End index">path.pathCount</param>
                                </condition>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">loopindex</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="3" name="Set at XY" type="Path">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">0</param>
                                    <param id="2" name="Value">node.X</param>
                                </action>
                                <action id="3" name="Set at XY" type="Path">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">1</param>
                                    <param id="2" name="Value">node.Y</param>
                                </action>
                                <action id="3" name="Set at XY" type="Path">
                                    <param id="0" name="X">loopindex</param>
                                    <param id="1" name="Y">2</param>
                                    <param id="2" name="Value">node.UID</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="Point on the path, can be placed and manipulated" title="Node">
            <sub-events>
                <comment>Updates the debug text on the nodes (safe to disable)</comment>
                <event-block disabled="1">
                    <conditions>
                        <condition disabled="1" id="-11" name="For Each" type="System">
                            <param id="0" name="Object">NodeLabel</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block disabled="1">
                            <conditions>
                                <condition disabled="1" id="-14" name="Pick by unique ID" type="Node">
                                    <param id="0" name="Unique ID">nodelabel.parentNodeUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="0" name="Set text" type="NodeLabel">
                                    <param id="0" name="Text">node.nodeindex</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Destroy a node label if the node underneath it was destroyed</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="NodeLabel" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="NodeLabel" />
                    </actions>
                </event-block>
                <comment>If a node is being moved, flag it as being updated (fires other events that updates the path)</comment>
                <event-block>
                    <conditions>
                        <condition id="2" name="Mouse button is down" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="7" name="Cursor is over object" type="Mouse">
                            <param id="0" name="Object">Node</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Node">
                            <param id="0" name="Instance variable">moving</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">node.pathUID</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyTracing</param>
                        </condition>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyMovingNode</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Node">
                            <param id="0" name="Instance variable">moving</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">currentlyMovingNode</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>If a node is currently being moved (continually update the nodes location to the mouse)</comment>
                <event-block>
                    <conditions>
                        <condition id="2" name="Mouse button is down" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Node">
                            <param id="0" name="Instance variable">moving</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyMovingNode</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Set position" type="Node">
                            <param id="0" name="X">mouse.X</param>
                            <param id="1" name="Y">mouse.Y</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Finish moving the node</comment>
                <event-block>
                    <conditions>
                        <condition id="3" name="On button released" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Node">
                            <param id="0" name="Instance variable">moving</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Path">
                            <param id="0" name="Instance variable">currentlyMovingNode</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Node">
                            <param id="0" name="Instance variable">moving</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="4" name="Set animation" type="Node">
                            <param id="0" name="Animation">&quot;default&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="4" name="Set animation" type="Bar">
                            <param id="0" name="Animation">&quot;default&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">currentlyMovingNode</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Path">
                            <param id="0" name="Instance variable">validData</param>
                            <param id="1" name="Value">0</param>
                        </action>
                    </actions>
                </event-block>
                <comment>If the node is being moved, update the bars</comment>
                <variable comment="the saved UID of a node" name="nodeUID" type="number">0</variable>
                <variable comment="the X value of the moving node" name="currentNodeX" type="number">0</variable>
                <variable comment="the Y value of the moving node" name="currentNodeY" type="number">0</variable>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Node</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Node">
                            <param id="0" name="Instance variable">moving</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">node.pathUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">currentNodeX</param>
                            <param id="1" name="Value">node.X</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">currentNodeY</param>
                            <param id="1" name="Value">node.Y</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>If this isn&apos;t the first node, update the previous bar with the new current location (this is stored in prevBar in the current node)</comment>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">2</param>
                                    <param id="2" name="Value">path.pathCount</param>
                                </condition>
                            </conditions>
                            <actions />
                            <sub-events>
                                <comment>Reposition the bar</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-14" name="Pick by unique ID" type="Bar">
                                            <param id="0" name="Unique ID">Node.barUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Bar">
                                            <param id="0" name="Animation">&quot;green&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="4" name="Set animation" type="Node">
                                            <param id="0" name="Animation">&quot;green&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="-3" name="Set position" type="Bar">
                                            <param id="0" name="X">node.X</param>
                                            <param id="1" name="Y">node.Y</param>
                                        </action>
                                        <action id="-22" name="Set angle toward position" type="Bar">
                                            <param id="0" name="X">path.At( node.nodeIndex + 1, 0 )</param>
                                            <param id="1" name="Y">path.At( node.nodeIndex + 1, 1 )</param>
                                        </action>
                                        <action id="-5" name="Set width" type="Bar">
                                            <param id="0" name="Width">distance( currentNodeX, currentNodeY, path.At( node.nodeIndex + 1, 0 ), path.At( node.nodeIndex + 1, 1 ))</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>If this isn&apos;t the last node, update the next bar with the new current location (this is stored in the prevBar variable in the next node)</comment>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="Node">
                                    <param id="0" name="Instance variable">nodeIndex</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">nodeUID</param>
                                    <param id="1" name="Value">node.previousNode</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Reset the scope of the node variable</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Node</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Node">
                                            <param id="0" name="Unique ID">nodeUID</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Bar">
                                                    <param id="0" name="Unique ID">node.barUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="4" name="Set animation" type="Bar">
                                                    <param id="0" name="Animation">&quot;green&quot;</param>
                                                    <param id="1" name="From">1</param>
                                                </action>
                                                <action id="-3" name="Set position" type="Bar">
                                                    <param id="0" name="X">node.X</param>
                                                    <param id="1" name="Y">node.Y</param>
                                                </action>
                                                <action id="-22" name="Set angle toward position" type="Bar">
                                                    <param id="0" name="X">currentNodeX</param>
                                                    <param id="1" name="Y">currentNodeY</param>
                                                </action>
                                                <action id="-5" name="Set width" type="Bar">
                                                    <param id="0" name="Width">distance( node.X, node.Y, currentNodeX, currentNodeY)</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Reset a node if it was moving but has now stopped</comment>
                        <event-block>
                            <conditions>
                                <condition behavior="Bullet" id="0" name="Compare speed" type="Node">
                                    <param id="0" name="Comparison">3</param>
                                    <param id="1" name="Speed">0</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Node">
                                    <param id="0" name="Instance variable">movingByObject</param>
                                </condition>
                                <condition id="-14" name="Pick by unique ID" type="Path">
                                    <param id="0" name="Unique ID">node.pathUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action behavior="Bullet" id="5" name="Set enabled" type="Node">
                                    <param id="0" name="State">0</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Node">
                                    <param id="0" name="Instance variable">moving</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Node">
                                    <param id="0" name="Instance variable">movingByObject</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">nodeUID</param>
                                    <param id="1" name="Value">node.previousNode</param>
                                </action>
                                <action id="4" name="Set animation" type="Node">
                                    <param id="0" name="Animation">&quot;default&quot;</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Path">
                                    <param id="0" name="Instance variable">validData</param>
                                    <param id="1" name="Value">0</param>
                                </action>
                                <action id="3" name="Set at XY" type="Path">
                                    <param id="0" name="X">node.nodeIndex</param>
                                    <param id="1" name="Y">0</param>
                                    <param id="2" name="Value">node.X</param>
                                </action>
                                <action id="3" name="Set at XY" type="Path">
                                    <param id="0" name="X">node.nodeIndex</param>
                                    <param id="1" name="Y">1</param>
                                    <param id="2" name="Value">node.Y</param>
                                </action>
                            </actions>
                            <sub-events>
                                <event-block>
                                    <conditions>
                                        <condition id="-14" name="Pick by unique ID" type="Bar">
                                            <param id="0" name="Unique ID">node.barUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Bar">
                                            <param id="0" name="Animation">&quot;default&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">Node</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="Node">
                                            <param id="0" name="Unique ID">nodeUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Node">
                                            <param id="0" name="Animation">&quot;default&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-14" name="Pick by unique ID" type="Bar">
                                                    <param id="0" name="Unique ID">node.barUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="4" name="Set animation" type="Bar">
                                                    <param id="0" name="Animation">&quot;default&quot;</param>
                                                    <param id="1" name="From">1</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="Minions spawn from bases and follow a path drawn by the player" title="Minion">
            <sub-events>
                <comment>Manage all of the active minion</comment>
                <variable comment="the minion&apos;s distance to it&apos;s next node" name="distanceToNode" type="number">0</variable>
                <variable comment="the minion&apos;s angle to it&apos;s next node" name="angleToNode" type="number">0</variable>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Path">
                            <param id="0" name="Unique ID">Minion.pathUID</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">distanceToNode</param>
                            <param id="1" name="Value">distance( Minion.X, Minion.Y, path.At( Minion.currentPathNode, 0 ), path.At( Minion.currentPathNode, 1 ) )</param>
                        </action>
                        <action id="-9" name="Set value" type="System">
                            <param id="0" name="Variable">angleToNode</param>
                            <param id="1" name="Value">angle( Minion.X, Minion.Y, path.At( Minion.currentPathNode, 0 ), path.At( Minion.currentPathNode, 1 ) )</param>
                        </action>
                    </actions>
                    <sub-events>
                        <comment>Update the minion health bar</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="HealthBar">
                                    <param id="0" name="Unique ID">minion.healthBarUID</param>
                                </condition>
                                <condition id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">round( (healthbar.Width/healthbar.startingWidth) * 100 )</param>
                                    <param id="1" name="Comparison">1</param>
                                    <param id="2" name="Second value">round( (minion.health/Minion.maxHealth) * 100 )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-5" name="Set width" type="HealthBar">
                                    <param id="0" name="Width">healthbar.startingWidth * ( minion.health/ minion.maxHealth )</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Drop a trailing spot behind the minon</comment>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="Minion">
                                    <param id="0" name="Instance variable">trailTimeStamp</param>
                                    <param id="1" name="Comparison">3</param>
                                    <param id="2" name="Value">tickcount - parameters.At( &quot;minionTrailDropRate&quot; )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">MinionTrail</param>
                                    <param id="1" name="Layer">parameters.At( &quot;defaultLayer&quot; )</param>
                                    <param id="2" name="X">Minion.X</param>
                                    <param id="3" name="Y">Minion.Y</param>
                                </action>
                                <action id="4" name="Set animation" type="MinionTrail">
                                    <param id="0" name="Animation">Minion.AnimationName</param>
                                    <param id="1" name="From">1</param>
                                </action>
                                <action id="-10" name="Set value" type="Minion">
                                    <param id="0" name="Instance variable">trailTimeStamp</param>
                                    <param id="1" name="Value">tickcount</param>
                                </action>
                                <action id="-7" name="Set size" type="MinionTrail">
                                    <param id="0" name="Width">4</param>
                                    <param id="1" name="Height">4</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Advance the minion to the next node if it arrives at the current one</comment>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">distanceToNode</param>
                                    <param id="1" name="Comparison">3</param>
                                    <param id="2" name="Value">Parameters.At( &quot;minionNodeArrivalDistance&quot; )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-11" name="Add to" type="Minion">
                                    <param id="0" name="Instance variable">currentPathNode</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Destroy the minion if it reaches the end of the path</comment>
                        <event-block>
                            <conditions>
                                <condition id="-7" name="Compare instance variable" type="Minion">
                                    <param id="0" name="Instance variable">currentPathNode</param>
                                    <param id="1" name="Comparison">5</param>
                                    <param id="2" name="Value">path.pathCount</param>
                                </condition>
                                <condition id="4" name="Compare current value" type="Path">
                                    <param id="0" name="Comparison">4</param>
                                    <param id="1" name="Value">0</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Minion" />
                            </actions>
                        </event-block>
                        <comment>Reroute minions if they move off course (can happen because of unaccounted for collision or nodes being moved around rapidly)</comment>
                        <comment>Off course is defined by BOTH: </comment>
                        <comment>1: Beign too far away (distanceTolerance) from the target node AND</comment>
                        <comment>2: Having a angle of motion that too wide (angleTolerance) to actually intersect the target node</comment>
                        <comment>When a minion is corrected, it is advanced to the next node (or the final node if it is off the grid) and oriented toward the new node</comment>
                        <event-block>
                            <conditions>
                                <condition id="-11" inverted="1" name="Is within angle" type="Minion">
                                    <param id="0" name="Within">Parameters.At(&quot;minionAngleTolerance&quot; )</param>
                                    <param id="1" name="Angle">angleToNode</param>
                                </condition>
                                <condition id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">distanceToNode</param>
                                    <param id="1" name="Comparison">4</param>
                                    <param id="2" name="Value">parameters.At( &quot;minionDistanceTolerance&quot; )</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-10" name="Set value" type="Minion">
                                    <param id="0" name="Instance variable">currentPathNode</param>
                                    <param id="1" name="Value">min( Minion.currentPathNode + 1, path.pathCount -1 )</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-22" name="Set angle toward position" type="Minion">
                                    <param id="0" name="X">path.At( Minion.currentPathNode, 0 )</param>
                                    <param id="1" name="Y">path.At( Minion.currentPathNode, 1 )</param>
                                </action>
                                <action behavior="CustomMovement" id="6" name="Set angle of motion" type="Minion">
                                    <param id="0" name="Angle">Minion.Angle</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Fade the minion trail out over time</comment>
                <event-block>
                    <conditions>
                        <condition id="-10" name="Compare opacity" type="MinionTrail">
                            <param id="0" name="Comparison">4</param>
                            <param id="1" name="Opacity">0</param>
                        </condition>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">parameters.Entry( &quot;minionTrailDecayRate&quot; )</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-16" name="Set opacity" type="MinionTrail">
                            <param id="0" name="Opacity">MinionTrail.Opacity - 10</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy the minion trail node as soon as it fades out</comment>
                <event-block>
                    <conditions>
                        <condition id="-10" name="Compare opacity" type="MinionTrail">
                            <param id="0" name="Comparison">3</param>
                            <param id="1" name="Opacity">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="MinionTrail" />
                    </actions>
                </event-block>
                <comment>Destroy the minion if it reaches 0 health</comment>
                <event-block>
                    <conditions>
                        <condition id="-7" name="Compare instance variable" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Comparison">3</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="Minion" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A health bar that shows the current health of an object" title="Health Bar">
            <sub-events>
                <comment>Attach a health bar to a minion if it doesn&apos;t already have one</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">healthbarAttached</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">HealthBorder</param>
                            <param id="1" name="Layer">parameters.At( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">minion.ImagePointX( 1 )</param>
                            <param id="3" name="Y">minion.ImagePointY( 1 ) - parameters.At( &quot;healthBarHeight&quot; ) - parameters.at( &quot;healthBarBorder&quot; ) * 2</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="HealthBorder">
                            <param id="0" name="Pin to">Minion</param>
                        </action>
                        <action id="-7" name="Set size" type="HealthBorder">
                            <param id="0" name="Width">minion.Width</param>
                            <param id="1" name="Height">parameters.At( &quot;healthBarHeight&quot; )</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">HealthBar</param>
                            <param id="1" name="Layer">parameters.At( &quot;turretLayer&quot; )</param>
                            <param id="2" name="X">HealthBorder.X + parameters.At( &quot;healthBarBorder&quot; )</param>
                            <param id="3" name="Y">HealthBorder.Y + parameters.At( &quot;healthBarBorder&quot; )</param>
                        </action>
                        <action behavior="Pin" id="0" name="Pin to object" type="HealthBar">
                            <param id="0" name="Pin to">HealthBorder</param>
                        </action>
                        <action id="-10" name="Set value" type="HealthBar">
                            <param id="0" name="Instance variable">startingWidth</param>
                            <param id="1" name="Value">HealthBorder.Width - parameters.At( &quot;healthBarBorder&quot; ) * 2</param>
                        </action>
                        <action id="-7" name="Set size" type="HealthBar">
                            <param id="0" name="Width">HealthBar.startingWidth</param>
                            <param id="1" name="Height">parameters.At( &quot;healthBarHeight&quot; ) - parameters.At( &quot;healthBarBorder&quot; ) * 2</param>
                        </action>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">healthBarUID</param>
                            <param id="1" name="Value">healthbar.UID</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Minion">
                            <param id="0" name="Instance variable">healthbarAttached</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Destroy the health bar border if the minion it&apos;s attached to is destroyed</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="HealthBorder" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="HealthBorder" />
                    </actions>
                </event-block>
                <comment>Destroy the health bar if the border it&apos;s attached to is destroyed</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="HealthBar" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="HealthBar" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A cannon that fires projectiles" title="Cannon">
            <sub-events>
                <comment>Fire the cannon with a defined ammo at a specific fire rate</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Cannon</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <comment>If the cannon has been created, but not fully setup, create the additional components and setup all of the initial variables.</comment>
                        <event-block>
                            <conditions>
                                <condition id="-8" inverted="1" name="Is boolean instance variable set" type="Cannon">
                                    <param id="0" name="Instance variable">fullyDeployed</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">RangeFinder</param>
                                    <param id="1" name="Layer">Parameters.Entry(&quot;backgroundLayer&quot;)</param>
                                    <param id="2" name="X">cannon.X</param>
                                    <param id="3" name="Y">cannon.Y</param>
                                </action>
                                <action id="-25" name="Move to bottom" type="RangeFinder" />
                                <action id="-10" name="Set value" type="RangeFinder">
                                    <param id="0" name="Instance variable">baseUID</param>
                                    <param id="1" name="Value">cannon.baseuid</param>
                                </action>
                                <action id="-3" name="Create object" type="System">
                                    <param id="0" name="Object to create">TargetLeadBar</param>
                                    <param id="1" name="Layer">Parameters.Entry(&quot;defaultLayer&quot;)</param>
                                    <param id="2" name="X">Cannon.ImagePointX(1)</param>
                                    <param id="3" name="Y">Cannon.ImagePointY(1)</param>
                                </action>
                                <action id="-15" name="Set visible" type="TargetLeadBar">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-10" name="Set value" type="TargetLeadBar">
                                    <param id="0" name="Instance variable">baseUID</param>
                                    <param id="1" name="Value">cannon.baseuid</param>
                                </action>
                                <action id="-16" name="Set opacity" type="TargetLeadBar">
                                    <param id="0" name="Opacity">0</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Create a line from the cannon out to it&apos;s current target</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">parameters.At( &quot;cannonShowTargetLead&quot; )</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">1</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="-3" name="Create object" type="System">
                                            <param id="0" name="Object to create">distanceToTarget</param>
                                            <param id="1" name="Layer">Parameters.Entry(&quot;defaultLayer&quot;)</param>
                                            <param id="2" name="X">cannon.X</param>
                                            <param id="3" name="Y">cannon.Y</param>
                                        </action>
                                        <action id="-15" name="Set visible" type="distanceToTarget">
                                            <param id="0" name="Visibility">0</param>
                                        </action>
                                        <action id="-10" name="Set value" type="TargetLeadBar">
                                            <param id="0" name="Instance variable">labelUID</param>
                                            <param id="1" name="Value">distanceToTarget.UID</param>
                                        </action>
                                        <action id="-16" name="Set opacity" type="TargetLeadBar">
                                            <param id="0" name="Opacity">100</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Setup the rocket ammo</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                            <param id="0" name="Instance variable">activeAmmo</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">Parameters.Entry(&quot;rocketAmmoType&quot;)</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Cannon">
                                            <param id="0" name="Animation">&quot;Rocket&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">fireRate</param>
                                            <param id="1" name="Value">Parameters.Entry(&quot;rocketDefaultFireRate&quot;)</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMax</param>
                                            <param id="1" name="Value">Parameters.Entry(&quot;rocketTargetRangeMax&quot;)</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMin</param>
                                            <param id="1" name="Value">Parameters.Entry(&quot;rocketTargetRangeMin&quot;)</param>
                                        </action>
                                        <action id="4" name="Set animation" type="RangeFinder">
                                            <param id="0" name="Animation">&quot;Rocket&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Setup the beam ammo</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                            <param id="0" name="Instance variable">activeAmmo</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Value">Parameters.Entry(&quot;beamAmmoType&quot;)</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action id="4" name="Set animation" type="Cannon">
                                            <param id="0" name="Animation">&quot;Beam&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">fireRate</param>
                                            <param id="1" name="Value">Parameters.Entry(&quot;beamDefaultFireRate&quot;)</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMax</param>
                                            <param id="1" name="Value">Parameters.Entry(&quot;beamTargetRangeMax&quot;)</param>
                                        </action>
                                        <action id="-10" name="Set value" type="Cannon">
                                            <param id="0" name="Instance variable">targetRangeMin</param>
                                            <param id="1" name="Value">Parameters.Entry(&quot;beamTargetRangeMin&quot;)</param>
                                        </action>
                                        <action id="4" name="Set animation" type="RangeFinder">
                                            <param id="0" name="Animation">&quot;beam&quot;</param>
                                            <param id="1" name="From">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Pin the cannon and range finder to a turret (if that is the base)</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-19" name="Pick all" type="System">
                                            <param id="0" name="Object">TurretBase</param>
                                        </condition>
                                        <condition id="-14" name="Pick by unique ID" type="TurretBase">
                                            <param id="0" name="Unique ID">cannon.baseUID</param>
                                        </condition>
                                    </conditions>
                                    <actions>
                                        <action behavior="Pin" id="0" name="Pin to object" type="Cannon">
                                            <param id="0" name="Pin to">TurretBase</param>
                                        </action>
                                        <action behavior="Pin" id="0" name="Pin to object" type="RangeFinder">
                                            <param id="0" name="Pin to">TurretBase</param>
                                        </action>
                                    </actions>
                                </event-block>
                                <comment>Finish up and mark the cannon as fully deployed</comment>
                                <event-block>
                                    <conditions />
                                    <actions>
                                        <action id="-7" name="Set size" type="RangeFinder">
                                            <param id="0" name="Width">Cannon.targetRangeMax * 2</param>
                                            <param id="1" name="Height">Cannon.targetRangeMax * 2</param>
                                        </action>
                                        <action id="-13" name="Set boolean" type="Cannon">
                                            <param id="0" name="Instance variable">fullyDeployed</param>
                                            <param id="1" name="Value">1</param>
                                        </action>
                                    </actions>
                                </event-block>
                            </sub-events>
                        </event-block>
                        <comment>Sticky targeting keeps the gun trained on a minion until it is out of range --NOT WORKING, THERE IS A SMALL DELAY BETWEEN A TARGET LEAVING THE RANGE AND THE CANNON REAQUIRING A NEW ONE--</comment>
                        <variable comment="the distance from the turret to the nearest minion" name="distanceToMinion" type="number">0</variable>
                        <variable comment="has a target been found?" name="targetFound" type="number">0</variable>
                        <event-block disabled="1">
                            <conditions>
                                <condition disabled="1" id="-14" name="Pick by unique ID" type="Minion">
                                    <param id="0" name="Unique ID">Cannon.currentTarget</param>
                                </condition>
                                <condition disabled="1" id="-8" name="Compare two values" type="System">
                                    <param id="0" name="First value">clamp(distanceToMinion, cannon.targetRangeMin, cannon.targetRangeMax)</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Second value">distanceToMinion</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">distanceToMinion</param>
                                    <param id="1" name="Value">distance( cannon.X, cannon.Y, Minion.X, Minion.Y)</param>
                                </action>
                                <action disabled="1" id="-10" name="Set value" type="Cannon">
                                    <param id="0" name="Instance variable">currentTarget</param>
                                    <param id="1" name="Value">Minion.UID</param>
                                </action>
                                <action disabled="1" id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">targetFound</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action disabled="1" id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">debugMsg</param>
                                    <param id="1" name="Value">&quot;current target (&quot; &amp; Minion.UID &amp; &quot;) &quot; &amp; tickcount &amp; newline &amp; debugMsg</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>Default to the closest minion if there isn&apos;t a valid current target</comment>
                        <event-block disabled="1">
                            <conditions>
                                <condition disabled="1" id="-14" name="Compare variable" type="System">
                                    <param id="0" name="Variable">targetFound</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">0</param>
                                </condition>
                                <condition disabled="1" id="-15" name="Pick nearest/furthest" type="Minion">
                                    <param id="0" name="Which">0</param>
                                    <param id="1" name="X">Cannon.X</param>
                                    <param id="2" name="Y">Cannon.Y</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">debugMsg</param>
                                    <param id="1" name="Value">&quot;new target (&quot; &amp; Minion.UID &amp; &quot;)&quot;&amp; tickcount &amp; newline &amp; debugMsg</param>
                                </action>
                                <action disabled="1" id="-10" name="Set value" type="Cannon">
                                    <param id="0" name="Instance variable">currentTarget</param>
                                    <param id="1" name="Value">Minion.UID</param>
                                </action>
                                <action disabled="1" id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">targetFound</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <comment>See if there are any minions to target</comment>
                        <event-block>
                            <conditions>
                                <condition disabled="1" id="-14" name="Pick by unique ID" type="Minion">
                                    <param id="0" name="Unique ID">Cannon.currentTarget</param>
                                </condition>
                                <condition id="-15" name="Pick nearest/furthest" type="Minion">
                                    <param id="0" name="Which">0</param>
                                    <param id="1" name="X">Cannon.X</param>
                                    <param id="2" name="Y">Cannon.Y</param>
                                </condition>
                                <condition id="-8" name="Is boolean instance variable set" type="Minion">
                                    <param id="0" name="Instance variable">active</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Set value" type="System">
                                    <param id="0" name="Variable">distanceToMinion</param>
                                    <param id="1" name="Value">distance( cannon.X, cannon.Y, Minion.X, Minion.Y)</param>
                                </action>
                            </actions>
                            <sub-events>
                                <comment>Minion is close enough to target</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" name="Compare two values" type="System">
                                            <param id="0" name="First value">clamp(distanceToMinion, cannon.targetRangeMin, cannon.targetRangeMax)</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">distanceToMinion</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <comment>Check line of site</comment>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="TargetLeadBar">
                                                    <param id="0" name="Instance variable">baseUID</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">cannon.baseUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-15" name="Set visible" type="TargetLeadBar">
                                                    <param id="0" name="Visibility">1</param>
                                                </action>
                                                <action id="-3" name="Set position" type="TargetLeadBar">
                                                    <param id="0" name="X">Cannon.ImagePointX(1)</param>
                                                    <param id="1" name="Y">Cannon.ImagePointY(1)</param>
                                                </action>
                                                <action id="-22" name="Set angle toward position" type="TargetLeadBar">
                                                    <param id="0" name="X">Minion.X</param>
                                                    <param id="1" name="Y">Minion.Y</param>
                                                </action>
                                                <action id="-7" name="Set size" type="TargetLeadBar">
                                                    <param id="0" name="Width">distance( Cannon.ImagePointX(1), Cannon.ImagePointY(1), Minion.X, Minion.Y )</param>
                                                    <param id="1" name="Height">1</param>
                                                </action>
                                            </actions>
                                            <sub-events>
                                                <comment>There is line of site</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="1" inverted="1" name="Is overlapping another object" type="TargetLeadBar">
                                                            <param id="0" name="Object">BarrierWall</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="4" name="Set animation" type="TargetLeadBar">
                                                            <param id="0" name="Animation">&quot;LineOfSite&quot;</param>
                                                            <param id="1" name="From">1</param>
                                                        </action>
                                                        <action id="4" name="Set font color" type="distanceToTarget">
                                                            <param id="0" name="Color">rgb(58, 206, 65)</param>
                                                        </action>
                                                        <action id="-8" name="Set angle" type="Cannon">
                                                            <param id="0" name="Angle">angle( Cannon.X, Cannon.Y, Minion.X, Minion.Y )</param>
                                                        </action>
                                                        <action id="-10" name="Set value" type="Cannon">
                                                            <param id="0" name="Instance variable">currentTarget</param>
                                                            <param id="1" name="Value">Minion.UID</param>
                                                        </action>
                                                    </actions>
                                                    <sub-events>
                                                        <comment>Fire whatever ammo is active:</comment>
                                                        <event-block>
                                                            <conditions>
                                                                <condition id="-8" name="Compare two values" type="System">
                                                                    <param id="0" name="First value">time - Cannon.lastFired</param>
                                                                    <param id="1" name="Comparison">5</param>
                                                                    <param id="2" name="Second value">Cannon.fireRate</param>
                                                                </condition>
                                                                <condition id="-8" name="Is boolean instance variable set" type="Cannon">
                                                                    <param id="0" name="Instance variable">readyToFire</param>
                                                                </condition>
                                                            </conditions>
                                                            <actions />
                                                            <sub-events>
                                                                <comment>Fire a rocket</comment>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                                                            <param id="0" name="Instance variable">activeAmmo</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Value">Parameters.Entry(&quot;rocketAmmoType&quot;)</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">Rocket</param>
                                                                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                                                                            <param id="2" name="X">Cannon.ImagePointX(1)</param>
                                                                            <param id="3" name="Y">Cannon.ImagePointY(1)</param>
                                                                        </action>
                                                                        <action id="-8" name="Set angle" type="Rocket">
                                                                            <param id="0" name="Angle">Cannon.Angle</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Rocket">
                                                                            <param id="0" name="Instance variable">launchTime</param>
                                                                            <param id="1" name="Value">time</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="5" name="Set enabled" type="Rocket">
                                                                            <param id="0" name="State">1</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="0" name="Set speed" type="Rocket">
                                                                            <param id="0" name="Speed">Parameters.Entry(&quot;rocketDefaultProjectileSpeed&quot;)</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="3" name="Set angle of motion" type="Rocket">
                                                                            <param id="0" name="Angle">rocket.Angle</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="1" name="Set acceleration" type="Rocket">
                                                                            <param id="0" name="Acceleration">Parameters.Entry(&quot;rocketLaunchBoost&quot;)</param>
                                                                        </action>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">RocketEffects</param>
                                                                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                                                                            <param id="2" name="X">rocket.imagepointX(2)</param>
                                                                            <param id="3" name="Y">rocket.imagepointY(2)</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Rocket">
                                                                            <param id="0" name="Instance variable">effectsUID</param>
                                                                            <param id="1" name="Value">RocketEffects.UID</param>
                                                                        </action>
                                                                        <action id="-8" name="Set angle" type="RocketEffects">
                                                                            <param id="0" name="Angle">rocket.angle</param>
                                                                        </action>
                                                                        <action behavior="Pin" id="0" name="Pin to object" type="RocketEffects">
                                                                            <param id="0" name="Pin to">Rocket</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Rocket">
                                                                            <param id="0" name="Instance variable">cannonUID</param>
                                                                            <param id="1" name="Value">cannon.UID</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                                <comment>Fire a beam</comment>
                                                                <event-block>
                                                                    <conditions>
                                                                        <condition id="-7" name="Compare instance variable" type="Cannon">
                                                                            <param id="0" name="Instance variable">activeAmmo</param>
                                                                            <param id="1" name="Comparison">0</param>
                                                                            <param id="2" name="Value">Parameters.Entry(&quot;beamAmmoType&quot;)</param>
                                                                        </condition>
                                                                    </conditions>
                                                                    <actions>
                                                                        <action id="-3" name="Create object" type="System">
                                                                            <param id="0" name="Object to create">Beam</param>
                                                                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                                                                            <param id="2" name="X">Cannon.ImagePointX(1)</param>
                                                                            <param id="3" name="Y">Cannon.ImagePointY(1)</param>
                                                                        </action>
                                                                        <action id="-8" name="Set angle" type="Beam">
                                                                            <param id="0" name="Angle">Cannon.Angle</param>
                                                                        </action>
                                                                        <action behavior="Bullet" id="0" name="Set speed" type="Beam">
                                                                            <param id="0" name="Speed">Parameters.Entry(&quot;beamDefaultProjectileSpeed&quot;)</param>
                                                                        </action>
                                                                        <action id="-10" name="Set value" type="Beam">
                                                                            <param id="0" name="Instance variable">cannonUID</param>
                                                                            <param id="1" name="Value">cannon.UID</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                                <comment>Register fired shot</comment>
                                                                <event-block>
                                                                    <conditions />
                                                                    <actions>
                                                                        <action id="-10" name="Set value" type="Cannon">
                                                                            <param id="0" name="Instance variable">lastFired</param>
                                                                            <param id="1" name="Value">time</param>
                                                                        </action>
                                                                    </actions>
                                                                </event-block>
                                                            </sub-events>
                                                        </event-block>
                                                    </sub-events>
                                                </event-block>
                                                <comment>There is no line of site</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="1" name="Is overlapping another object" type="TargetLeadBar">
                                                            <param id="0" name="Object">BarrierWall</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-15" name="Set visible" type="TargetLeadBar">
                                                            <param id="0" name="Visibility">0</param>
                                                        </action>
                                                        <action id="-15" name="Set visible" type="distanceToTarget">
                                                            <param id="0" name="Visibility">0</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                                <comment>Draw the range to target</comment>
                                                <event-block>
                                                    <conditions>
                                                        <condition id="-14" name="Pick by unique ID" type="distanceToTarget">
                                                            <param id="0" name="Unique ID">TargetLeadBar.labelUID</param>
                                                        </condition>
                                                    </conditions>
                                                    <actions>
                                                        <action id="-3" name="Set position" type="distanceToTarget">
                                                            <param id="0" name="X">( cannon.ImagePointX(1) + Minion.X ) / 2 </param>
                                                            <param id="1" name="Y">( cannon.ImagePointY(1) + Minion.Y ) / 2 </param>
                                                        </action>
                                                        <action id="-8" name="Set angle" type="distanceToTarget">
                                                            <param id="0" name="Angle">TargetLeadBar.Angle</param>
                                                        </action>
                                                        <action id="-15" name="Set visible" type="distanceToTarget">
                                                            <param id="0" name="Visibility">1</param>
                                                        </action>
                                                        <action id="0" name="Set text" type="distanceToTarget">
                                                            <param id="0" name="Text">round( distanceToMinion )</param>
                                                        </action>
                                                    </actions>
                                                </event-block>
                                            </sub-events>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                                <comment>Minion is too far away to target</comment>
                                <event-block>
                                    <conditions>
                                        <condition id="-8" inverted="1" name="Compare two values" type="System">
                                            <param id="0" name="First value">clamp(distanceToMinion, cannon.targetRangeMin, cannon.targetRangeMax)</param>
                                            <param id="1" name="Comparison">0</param>
                                            <param id="2" name="Second value">distanceToMinion</param>
                                        </condition>
                                    </conditions>
                                    <actions />
                                    <sub-events>
                                        <event-block>
                                            <conditions>
                                                <condition id="-7" name="Compare instance variable" type="TargetLeadBar">
                                                    <param id="0" name="Instance variable">baseUID</param>
                                                    <param id="1" name="Comparison">0</param>
                                                    <param id="2" name="Value">cannon.baseUID</param>
                                                </condition>
                                                <condition id="-14" name="Pick by unique ID" type="distanceToTarget">
                                                    <param id="0" name="Unique ID">TargetLeadBar.labelUID</param>
                                                </condition>
                                            </conditions>
                                            <actions>
                                                <action id="-15" name="Set visible" type="TargetLeadBar">
                                                    <param id="0" name="Visibility">0</param>
                                                </action>
                                                <action id="-15" name="Set visible" type="distanceToTarget">
                                                    <param id="0" name="Visibility">0</param>
                                                </action>
                                            </actions>
                                        </event-block>
                                    </sub-events>
                                </event-block>
                            </sub-events>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>If the cannon becomes unpinned (probably because the base it was on was destroyed) destroy it</comment>
                <event-block>
                    <conditions>
                        <condition behavior="Pin" id="0" inverted="1" name="Is pinned" type="Cannon" />
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="Cannon" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A laser fired from a cannon (activeAmmo = 0)" title="Beam">
            <sub-events>
                <comment>Destroy any minion hit by beams</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Beam">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">max( 0, minion.health - parameters.at( &quot;beamDamage&quot; ) )</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block disabled="1">
                            <conditions>
                                <condition disabled="1" id="-14" name="Pick by unique ID" type="Cannon">
                                    <param id="0" name="Unique ID">beam.cannonUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action disabled="1" id="-11" name="Add to" type="Cannon">
                                    <param id="0" name="Instance variable">fireRate</param>
                                    <param id="1" name="Value">Cannon.fireRate * parameters.At( &quot;bonusFireRate&quot; )</param>
                                </action>
                                <action disabled="1" id="-11" name="Add to" type="Cannon">
                                    <param id="0" name="Instance variable">minionsKilled</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block>
                            <conditions />
                            <actions>
                                <action id="-9" name="Destroy" type="Beam" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Beam</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Cannon">
                            <param id="0" name="Unique ID">beam.cannonUID</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">abs( distance( beam.X, beam.Y, cannon.X, cannon.Y ) )</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">parameters.At( &quot;beamTargetRangeMax&quot; )</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="Beam" />
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A rocket that travels slowly, can destroy bases, and explodes causing splash damage (activeAmmo = 1)" title="Rocket">
            <sub-events>
                <comment>Destroy any minions hit by rockets</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Rocket">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Rocket">
                            <param id="0" name="Instance variable">armed</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-15" name="Set visible" type="Rocket">
                            <param id="0" name="Visibility">0</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Kill any rocket that exceeds the maximum flight time</comment>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Rocket</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">time - Rocket.launchTime</param>
                            <param id="1" name="Comparison">5</param>
                            <param id="2" name="Second value">parameters.At( &quot;rocketMaxFlightTime&quot; )</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-15" name="Set visible" type="Rocket">
                            <param id="0" name="Visibility">0</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Arm the rocket once it&apos;s cleared the cannon</comment>
                <comment>Bounce off other rockets (explicitly done because rockets aren&apos;t solid)</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="Rocket">
                            <param id="0" name="Object">Rocket</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-15" name="Set visible" type="Rocket">
                            <param id="0" name="Visibility">0</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <comment>If the rocket is ready to detonate (and it hasn&apos;t already exploded), create an explosion</comment>
                <event-block>
                    <conditions>
                        <condition id="-8" name="Is boolean instance variable set" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                        </condition>
                        <condition id="-7" name="Compare instance variable" type="Rocket">
                            <param id="0" name="Instance variable">explosionUID</param>
                            <param id="1" name="Comparison">0</param>
                            <param id="2" name="Value">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">armed</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">RocketExplosion</param>
                            <param id="1" name="Layer">Parameters.at(&quot;turretLayer&quot;)</param>
                            <param id="2" name="X">rocket.X</param>
                            <param id="3" name="Y">rocket.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="RocketExplosion">
                            <param id="0" name="Instance variable">rocketUID</param>
                            <param id="1" name="Value">rocket.UID</param>
                        </action>
                        <action id="-7" name="Set size" type="RocketExplosion">
                            <param id="0" name="Width">parameters.At( &quot;rocketExplosionDiameter&quot; )</param>
                            <param id="1" name="Height">parameters.At( &quot;rocketExplosionDiameter&quot; )</param>
                        </action>
                        <action id="-10" name="Set value" type="Rocket">
                            <param id="0" name="Instance variable">explosionUID</param>
                            <param id="1" name="Value">rocketexplosion.UID</param>
                        </action>
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="RocketEffects">
                                    <param id="0" name="Unique ID">Rocket.effectsUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="RocketEffects" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Get rid of the rocket, smoke,  and explosion once the explosion animation is finished</comment>
                <event-block>
                    <conditions>
                        <condition id="4" name="On finished" type="RocketExplosion">
                            <param id="0" name="Animation">&quot;default&quot;</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-9" name="Destroy" type="RocketExplosion" />
                    </actions>
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Rocket">
                                    <param id="0" name="Unique ID">RocketExplosion.rocketUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-9" name="Destroy" type="Rocket" />
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <comment>Kill any minions caught in the shockwave</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On collision with another object" type="RocketExplosion">
                            <param id="0" name="Object">Minion</param>
                        </condition>
                        <condition id="-8" name="Is boolean instance variable set" type="Minion">
                            <param id="0" name="Instance variable">active</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-10" name="Set value" type="Minion">
                            <param id="0" name="Instance variable">health</param>
                            <param id="1" name="Value">max( 0, minion.health - parameters.at( &quot;rocketDamage&quot; ) )</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Move any nodes caught in the shockwave</comment>
                <event-block disabled="1">
                    <conditions>
                        <condition disabled="1" id="0" name="On collision with another object" type="RocketExplosion">
                            <param id="0" name="Object">Node</param>
                        </condition>
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block>
                            <conditions>
                                <condition id="-14" name="Pick by unique ID" type="Rocket">
                                    <param id="0" name="Unique ID">RocketExplosion.rocketUID</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action behavior="Bullet" id="5" name="Set enabled" type="Node">
                                    <param id="0" name="State">1</param>
                                </action>
                                <action id="-8" name="Set angle" type="Node">
                                    <param id="0" name="Angle">angle( rocket.X, rocket.Y, node.X, node.Y )</param>
                                </action>
                                <action behavior="Bullet" id="3" name="Set angle of motion" type="Node">
                                    <param id="0" name="Angle">angle( rocket.X, rocket.Y, node.X, node.Y )</param>
                                </action>
                                <action behavior="Bullet" id="0" name="Set speed" type="Node">
                                    <param id="0" name="Speed">parameters.At( &quot;rocketImpactForce&quot; )</param>
                                </action>
                                <action behavior="Bullet" id="1" name="Set acceleration" type="Node">
                                    <param id="0" name="Acceleration">parameters.At( &quot;rocketImpactForceDecay&quot; )</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Node">
                                    <param id="0" name="Instance variable">moving</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                                <action id="-13" name="Set boolean" type="Node">
                                    <param id="0" name="Instance variable">movingByObject</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
                <event-block>
                    <conditions>
                        <condition id="-11" name="For Each" type="System">
                            <param id="0" name="Object">Rocket</param>
                        </condition>
                        <condition id="-14" name="Pick by unique ID" type="Cannon">
                            <param id="0" name="Unique ID">rocket.cannonUID</param>
                        </condition>
                        <condition id="-8" name="Compare two values" type="System">
                            <param id="0" name="First value">abs( distance( rocket.X, rocket.Y, cannon.X, cannon.Y ) )</param>
                            <param id="1" name="Comparison">4</param>
                            <param id="2" name="Second value">parameters.At( &quot;rocketTargetRangeMax&quot; )</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-15" name="Set visible" type="Rocket">
                            <param id="0" name="Visibility">0</param>
                        </action>
                        <action id="-13" name="Set boolean" type="Rocket">
                            <param id="0" name="Instance variable">readyToDetonate</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A static turret that can act as a stationary weapons platform" title="Turret">
            <sub-events>
                <comment>Create a new rocket turret at the mouse location</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">65 (A)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">TurretBase</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="4" name="Set animation" type="TurretBase">
                            <param id="0" name="Animation">&quot;Rocket&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Cannon</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                            <param id="2" name="X">TurretBase.X</param>
                            <param id="3" name="Y">TurretBase.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">activeAmmo</param>
                            <param id="1" name="Value">Parameters.Entry(&quot;rocketAmmoType&quot;)</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">turretbase.UID</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Create a new beam turret at the mouse location</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">83 (S)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">TurretBase</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="4" name="Set animation" type="TurretBase">
                            <param id="0" name="Animation">&quot;Beam&quot;</param>
                            <param id="1" name="From">1</param>
                        </action>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">Cannon</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;turretLayer&quot;)</param>
                            <param id="2" name="X">TurretBase.X</param>
                            <param id="3" name="Y">TurretBase.Y</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">activeAmmo</param>
                            <param id="1" name="Value">Parameters.Entry(&quot;beamAmmoType&quot;)</param>
                        </action>
                        <action id="-10" name="Set value" type="Cannon">
                            <param id="0" name="Instance variable">baseUID</param>
                            <param id="1" name="Value">turretbase.UID</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <event-group collapsed="1" description="A barrier that blocks line of site" title="Barrier">
            <sub-events>
                <comment>Create a new wide barrier</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">90 (Z)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">BarrierWall</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;defaultLayer&quot;)</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="-7" name="Set size" type="BarrierWall">
                            <param id="0" name="Width">20</param>
                            <param id="1" name="Height">100</param>
                        </action>
                    </actions>
                </event-block>
                <comment>Create a new tall barrier</comment>
                <event-block>
                    <conditions>
                        <condition id="0" name="On click" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                        </condition>
                        <condition id="2" name="Key is down" type="Keyboard">
                            <param id="0" name="Key">88 (X)</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="-3" name="Create object" type="System">
                            <param id="0" name="Object to create">BarrierWall</param>
                            <param id="1" name="Layer">Parameters.Entry(&quot;defaultLayer&quot;)</param>
                            <param id="2" name="X">mouse.X</param>
                            <param id="3" name="Y">mouse.Y</param>
                        </action>
                        <action id="-7" name="Set size" type="BarrierWall">
                            <param id="0" name="Width">20</param>
                            <param id="1" name="Height">100</param>
                        </action>
                        <action id="-18" name="Rotate clockwise" type="BarrierWall">
                            <param id="0" name="Degrees">90</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
        <comment>Debug Events</comment>
        <event-group collapsed="1" description="Various debug methods" title="Debug">
            <sub-events>
                <variable comment="The rate (in seconds) to refresh debug information" name="debugPollRate" type="number">0.1</variable>
                <event-block>
                    <conditions>
                        <condition id="-6" name="Every X seconds" type="System">
                            <param id="0" name="Interval (seconds)">debugPollRate</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Set text" type="txtDebug">
                            <param id="0" name="Text">objectcount &amp; &quot; sprites @ &quot; &amp; fps &amp; &quot; fps&quot; &amp; &quot;(&quot; &amp; renderer &amp; &quot;)&quot; &amp; newline</param>
                        </action>
                        <action id="1" name="Append text" type="txtDebug">
                            <param id="0" name="Text">debugMsg &amp; newline</param>
                        </action>
                        <action disabled="1" id="0" name="Set text" type="txtObjectCounts">
                            <param id="0" name="Text">&quot;nodes: &quot; &amp; node.Count &amp; &quot;  bars: &quot; &amp; bar.Count &amp; &quot;  Minions: &quot; &amp; Minion.Count &amp; &quot;  MinionTrails: &quot; &amp; MinionTrail.Count &amp; &quot;  node labels: &quot; &amp; nodelabel.Count &amp;  newline</param>
                        </action>
                        <action disabled="1" id="1" name="Append text" type="txtObjectCounts">
                            <param id="0" name="Text">&quot;nodes: &quot; &amp; node.Count &amp; &quot;  bars: &quot; &amp; bar.Count &amp; &quot;  Minions: &quot; &amp; Minion.Count  &amp; newline</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
    </events>
</c2eventsheet>
